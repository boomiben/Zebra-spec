{
  "components": {
    "schemas": {
      "account": {
        "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current requirements or if the account is\nenabled to make live charges or receive payouts.\n\nFor Custom accounts, the properties below are always returned. For other accounts, some properties are returned until that\naccount has started to go through Connect Onboarding. Once you create an [Account Link](https://stripe.com/docs/api/account_links)\nfor a Standard or Express account, some parameters are no longer returned. These are marked as **Custom Only** or **Custom and Express**\nbelow. Learn about the differences [between accounts](https://stripe.com/docs/connect/accounts).",
        "properties": {
          "business_profile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/account_business_profile"
              }
            ],
            "description": "Business information about the account.",
            "nullable": true
          },
          "business_type": {
            "description": "The business type.",
            "enum": [
              "company",
              "government_entity",
              "individual",
              "non_profit"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "capabilities": {
            "$ref": "#/components/schemas/account_capabilities"
          },
          "charges_enabled": {
            "description": "Whether the account can create live charges.",
            "type": "boolean"
          },
          "company": {
            "$ref": "#/components/schemas/legal_entity_company"
          },
          "controller": {
            "$ref": "#/components/schemas/account_unification_account_controller"
          },
          "country": {
            "description": "The account's country.",
            "maxLength": 5000,
            "type": "string"
          },
          "created": {
            "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "default_currency": {
            "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
            "maxLength": 5000,
            "type": "string"
          },
          "details_submitted": {
            "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
            "type": "boolean"
          },
          "email": {
            "description": "An email address associated with the account. It's not used for authentication and Stripe doesn't market to this field without explicit approval from the platform.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "external_accounts": {
            "description": "External accounts (bank accounts and debit cards) currently attached to this account",
            "properties": {
              "data": {
                "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "$ref": "#/components/schemas/card"
                    }
                  ],
                  "title": "Polymorphic",
                  "x-stripeBypassValidation": true
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "ExternalAccountList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "future_requirements": {
            "$ref": "#/components/schemas/account_future_requirements"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "individual": {
            "$ref": "#/components/schemas/person"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "account"
            ],
            "type": "string"
          },
          "payouts_enabled": {
            "description": "Whether Stripe can send payouts to this account.",
            "type": "boolean"
          },
          "requirements": {
            "$ref": "#/components/schemas/account_requirements"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/account_settings"
              }
            ],
            "description": "Options for customizing how the account functions within Stripe.",
            "nullable": true
          },
          "tos_acceptance": {
            "$ref": "#/components/schemas/account_tos_acceptance"
          },
          "type": {
            "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
            "enum": [
              "custom",
              "express",
              "standard"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "object"
        ],
        "title": "Account",
        "type": "object",
        "x-expandableFields": [
          "business_profile",
          "capabilities",
          "company",
          "controller",
          "external_accounts",
          "future_requirements",
          "individual",
          "requirements",
          "settings",
          "tos_acceptance"
        ],
        "x-resourceId": "account"
      },
      "account_bacs_debit_payments_settings": {
        "description": "",
        "properties": {
          "display_name": {
            "description": "The Bacs Direct Debit Display Name for this account. For payments made with Bacs Direct Debit, this will appear on the mandate, and as the statement descriptor.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountBacsDebitPaymentsSettings",
        "type": "object",
        "x-expandableFields": []
      },
      "account_branding_settings": {
        "description": "",
        "properties": {
          "icon": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "logo": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "primary_color": {
            "description": "A CSS hex color value representing the primary branding color for this account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "secondary_color": {
            "description": "A CSS hex color value representing the secondary branding color for this account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountBrandingSettings",
        "type": "object",
        "x-expandableFields": [
          "icon",
          "logo"
        ]
      },
      "account_business_profile": {
        "description": "",
        "properties": {
          "mcc": {
            "description": "[The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "monthly_estimated_revenue": {
            "$ref": "#/components/schemas/account_monthly_estimated_revenue"
          },
          "name": {
            "description": "The customer-facing business name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "product_description": {
            "description": "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.",
            "maxLength": 40000,
            "nullable": true,
            "type": "string"
          },
          "support_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "A publicly available mailing address for sending support issues to.",
            "nullable": true
          },
          "support_email": {
            "description": "A publicly available email address for sending support issues to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "support_phone": {
            "description": "A publicly available phone number to call with support issues.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "support_url": {
            "description": "A publicly available website for handling support issues.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The business's publicly available website.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountBusinessProfile",
        "type": "object",
        "x-expandableFields": [
          "monthly_estimated_revenue",
          "support_address"
        ]
      },
      "account_capabilities": {
        "description": "",
        "properties": {
          "acss_debit_payments": {
            "description": "The status of the Canadian pre-authorized debits payments capability of the account, or whether the account can directly process Canadian pre-authorized debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "affirm_payments": {
            "description": "The status of the Affirm capability of the account, or whether the account can directly process Affirm charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "afterpay_clearpay_payments": {
            "description": "The status of the Afterpay Clearpay capability of the account, or whether the account can directly process Afterpay Clearpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "au_becs_debit_payments": {
            "description": "The status of the BECS Direct Debit (AU) payments capability of the account, or whether the account can directly process BECS Direct Debit (AU) charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bacs_debit_payments": {
            "description": "The status of the Bacs Direct Debits payments capability of the account, or whether the account can directly process Bacs Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bancontact_payments": {
            "description": "The status of the Bancontact payments capability of the account, or whether the account can directly process Bancontact charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bank_transfer_payments": {
            "description": "The status of the customer_balance payments capability of the account, or whether the account can directly process customer_balance charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "blik_payments": {
            "description": "The status of the blik payments capability of the account, or whether the account can directly process blik charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "boleto_payments": {
            "description": "The status of the boleto payments capability of the account, or whether the account can directly process boleto charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_issuing": {
            "description": "The status of the card issuing capability of the account, or whether you can use Issuing to distribute funds on cards",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_payments": {
            "description": "The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "cartes_bancaires_payments": {
            "description": "The status of the Cartes Bancaires payments capability of the account, or whether the account can directly process Cartes Bancaires card charges in EUR currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "cashapp_payments": {
            "description": "The status of the Cash App Pay capability of the account, or whether the account can directly process Cash App Pay payments.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "eps_payments": {
            "description": "The status of the EPS payments capability of the account, or whether the account can directly process EPS charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "fpx_payments": {
            "description": "The status of the FPX payments capability of the account, or whether the account can directly process FPX charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "giropay_payments": {
            "description": "The status of the giropay payments capability of the account, or whether the account can directly process giropay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "grabpay_payments": {
            "description": "The status of the GrabPay payments capability of the account, or whether the account can directly process GrabPay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "ideal_payments": {
            "description": "The status of the iDEAL payments capability of the account, or whether the account can directly process iDEAL charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "india_international_payments": {
            "description": "The status of the india_international_payments capability of the account, or whether the account can process international charges (non INR) in India.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "jcb_payments": {
            "description": "The status of the JCB payments capability of the account, or whether the account (Japan only) can directly process JCB credit card charges in JPY currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "klarna_payments": {
            "description": "The status of the Klarna payments capability of the account, or whether the account can directly process Klarna charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "konbini_payments": {
            "description": "The status of the konbini payments capability of the account, or whether the account can directly process konbini charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "legacy_payments": {
            "description": "The status of the legacy payments capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "link_payments": {
            "description": "The status of the link_payments capability of the account, or whether the account can directly process Link charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "oxxo_payments": {
            "description": "The status of the OXXO payments capability of the account, or whether the account can directly process OXXO charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "p24_payments": {
            "description": "The status of the P24 payments capability of the account, or whether the account can directly process P24 charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "paynow_payments": {
            "description": "The status of the paynow payments capability of the account, or whether the account can directly process paynow charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "promptpay_payments": {
            "description": "The status of the promptpay payments capability of the account, or whether the account can directly process promptpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "revolut_pay_payments": {
            "description": "The status of the RevolutPay capability of the account, or whether the account can directly process RevolutPay payments.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sepa_debit_payments": {
            "description": "The status of the SEPA Direct Debits payments capability of the account, or whether the account can directly process SEPA Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sofort_payments": {
            "description": "The status of the Sofort payments capability of the account, or whether the account can directly process Sofort charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_k": {
            "description": "The status of the tax reporting 1099-K (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_misc": {
            "description": "The status of the tax reporting 1099-MISC (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "transfers": {
            "description": "The status of the transfers capability of the account, or whether your platform can transfer funds to the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "treasury": {
            "description": "The status of the banking capability, or whether the account can have bank accounts.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "us_bank_account_ach_payments": {
            "description": "The status of the US bank account ACH payments capability of the account, or whether the account can directly process US bank account charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "zip_payments": {
            "description": "The status of the Zip capability of the account, or whether the account can directly process Zip charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          }
        },
        "title": "AccountCapabilities",
        "type": "object",
        "x-expandableFields": []
      },
      "account_card_issuing_settings": {
        "description": "",
        "properties": {
          "tos_acceptance": {
            "$ref": "#/components/schemas/card_issuing_account_terms_of_service"
          }
        },
        "title": "AccountCardIssuingSettings",
        "type": "object",
        "x-expandableFields": [
          "tos_acceptance"
        ]
      },
      "account_card_payments_settings": {
        "description": "",
        "properties": {
          "decline_on": {
            "$ref": "#/components/schemas/account_decline_charge_on"
          },
          "statement_descriptor_prefix": {
            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountCardPaymentsSettings",
        "type": "object",
        "x-expandableFields": [
          "decline_on"
        ]
      },
      "account_dashboard_settings": {
        "description": "",
        "properties": {
          "display_name": {
            "description": "The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountDashboardSettings",
        "type": "object",
        "x-expandableFields": []
      },
      "account_decline_charge_on": {
        "description": "",
        "properties": {
          "avs_failure": {
            "description": "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.",
            "type": "boolean"
          },
          "cvc_failure": {
            "description": "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.",
            "type": "boolean"
          }
        },
        "required": [
          "avs_failure",
          "cvc_failure"
        ],
        "title": "AccountDeclineChargeOn",
        "type": "object",
        "x-expandableFields": []
      },
      "account_future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "This is typed as a string for consistency with `requirements.disabled_reason`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "AccountFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "account_monthly_estimated_revenue": {
        "description": "",
        "properties": {
          "amount": {
            "description": "A non-negative integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "AccountMonthlyEstimatedRevenue",
        "type": "object",
        "x-expandableFields": []
      },
      "account_payments_settings": {
        "description": "",
        "properties": {
          "statement_descriptor": {
            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountPaymentsSettings",
        "type": "object",
        "x-expandableFields": []
      },
      "account_payout_settings": {
        "description": "",
        "properties": {
          "debit_negative_balances": {
            "description": "A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See our [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances) documentation for details. Default value is `false` for Custom accounts, otherwise `true`.",
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/transfer_schedule"
          },
          "statement_descriptor": {
            "description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "debit_negative_balances",
          "schedule"
        ],
        "title": "AccountPayoutSettings",
        "type": "object",
        "x-expandableFields": [
          "schedule"
        ]
      },
      "account_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date by which the fields in `currently_due` must be collected to keep the account enabled. These fields may disable the account sooner if the next threshold is reached before they are collected.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "If the account is disabled, this string describes why. [Learn more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification). Can be `action_required.requested_capabilities`, `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.incomplete_verification`, `rejected.listed`, `rejected.other`, `rejected.terms_of_service`, `under_review`, or `other`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "AccountRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "account_requirements_alternative": {
        "description": "",
        "properties": {
          "alternative_fields_due": {
            "description": "Fields that can be provided to satisfy all fields in `original_fields_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "original_fields_due": {
            "description": "Fields that are due and can be satisfied by providing all fields in `alternative_fields_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "alternative_fields_due",
          "original_fields_due"
        ],
        "title": "AccountRequirementsAlternative",
        "type": "object",
        "x-expandableFields": []
      },
      "account_requirements_error": {
        "description": "",
        "properties": {
          "code": {
            "description": "The code for the type of error.",
            "enum": [
              "invalid_address_city_state_postal_code",
              "invalid_address_highway_contract_box",
              "invalid_address_private_mailbox",
              "invalid_business_profile_name",
              "invalid_business_profile_name_denylisted",
              "invalid_company_name_denylisted",
              "invalid_dob_age_over_maximum",
              "invalid_dob_age_under_18",
              "invalid_dob_age_under_minimum",
              "invalid_product_description_length",
              "invalid_product_description_url_match",
              "invalid_representative_country",
              "invalid_statement_descriptor_business_mismatch",
              "invalid_statement_descriptor_denylisted",
              "invalid_statement_descriptor_length",
              "invalid_statement_descriptor_prefix_denylisted",
              "invalid_statement_descriptor_prefix_mismatch",
              "invalid_street_address",
              "invalid_tax_id",
              "invalid_tax_id_format",
              "invalid_tos_acceptance",
              "invalid_url_denylisted",
              "invalid_url_format",
              "invalid_url_web_presence_detected",
              "invalid_url_website_business_information_mismatch",
              "invalid_url_website_empty",
              "invalid_url_website_inaccessible",
              "invalid_url_website_inaccessible_geoblocked",
              "invalid_url_website_inaccessible_password_protected",
              "invalid_url_website_incomplete",
              "invalid_url_website_incomplete_cancellation_policy",
              "invalid_url_website_incomplete_customer_service_details",
              "invalid_url_website_incomplete_legal_restrictions",
              "invalid_url_website_incomplete_refund_policy",
              "invalid_url_website_incomplete_return_policy",
              "invalid_url_website_incomplete_terms_and_conditions",
              "invalid_url_website_incomplete_under_construction",
              "invalid_url_website_other",
              "invalid_value_other",
              "verification_directors_mismatch",
              "verification_document_address_mismatch",
              "verification_document_address_missing",
              "verification_document_corrupt",
              "verification_document_country_not_supported",
              "verification_document_directors_mismatch",
              "verification_document_dob_mismatch",
              "verification_document_duplicate_type",
              "verification_document_expired",
              "verification_document_failed_copy",
              "verification_document_failed_greyscale",
              "verification_document_failed_other",
              "verification_document_failed_test_mode",
              "verification_document_fraudulent",
              "verification_document_id_number_mismatch",
              "verification_document_id_number_missing",
              "verification_document_incomplete",
              "verification_document_invalid",
              "verification_document_issue_or_expiry_date_missing",
              "verification_document_manipulated",
              "verification_document_missing_back",
              "verification_document_missing_front",
              "verification_document_name_mismatch",
              "verification_document_name_missing",
              "verification_document_nationality_mismatch",
              "verification_document_not_readable",
              "verification_document_not_signed",
              "verification_document_not_uploaded",
              "verification_document_photo_mismatch",
              "verification_document_too_large",
              "verification_document_type_not_supported",
              "verification_extraneous_directors",
              "verification_failed_address_match",
              "verification_failed_business_iec_number",
              "verification_failed_document_match",
              "verification_failed_id_number_match",
              "verification_failed_keyed_identity",
              "verification_failed_keyed_match",
              "verification_failed_name_match",
              "verification_failed_other",
              "verification_failed_residential_address",
              "verification_failed_tax_id_match",
              "verification_failed_tax_id_not_issued",
              "verification_missing_directors",
              "verification_missing_executives",
              "verification_missing_owners",
              "verification_requires_additional_memorandum_of_associations"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "reason": {
            "description": "An informative message that indicates the error type and provides additional details about the error.",
            "maxLength": 5000,
            "type": "string"
          },
          "requirement": {
            "description": "The specific user onboarding requirement field (in the requirements hash) that needs to be resolved.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "code",
          "reason",
          "requirement"
        ],
        "title": "AccountRequirementsError",
        "type": "object",
        "x-expandableFields": []
      },
      "account_sepa_debit_payments_settings": {
        "description": "",
        "properties": {
          "creditor_id": {
            "description": "SEPA creditor identifier that identifies the company making the payment.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountSepaDebitPaymentsSettings",
        "type": "object",
        "x-expandableFields": []
      },
      "account_settings": {
        "description": "",
        "properties": {
          "bacs_debit_payments": {
            "$ref": "#/components/schemas/account_bacs_debit_payments_settings"
          },
          "branding": {
            "$ref": "#/components/schemas/account_branding_settings"
          },
          "card_issuing": {
            "$ref": "#/components/schemas/account_card_issuing_settings"
          },
          "card_payments": {
            "$ref": "#/components/schemas/account_card_payments_settings"
          },
          "dashboard": {
            "$ref": "#/components/schemas/account_dashboard_settings"
          },
          "payments": {
            "$ref": "#/components/schemas/account_payments_settings"
          },
          "payouts": {
            "$ref": "#/components/schemas/account_payout_settings"
          },
          "sepa_debit_payments": {
            "$ref": "#/components/schemas/account_sepa_debit_payments_settings"
          },
          "treasury": {
            "$ref": "#/components/schemas/account_treasury_settings"
          }
        },
        "required": [
          "branding",
          "card_payments",
          "dashboard",
          "payments"
        ],
        "title": "AccountSettings",
        "type": "object",
        "x-expandableFields": [
          "bacs_debit_payments",
          "branding",
          "card_issuing",
          "card_payments",
          "dashboard",
          "payments",
          "payouts",
          "sepa_debit_payments",
          "treasury"
        ]
      },
      "account_terms_of_service": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountTermsOfService",
        "type": "object",
        "x-expandableFields": []
      },
      "account_tos_acceptance": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted their service agreement",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "service_agreement": {
            "description": "The user's service agreement type",
            "maxLength": 5000,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountTOSAcceptance",
        "type": "object",
        "x-expandableFields": []
      },
      "account_treasury_settings": {
        "description": "",
        "properties": {
          "tos_acceptance": {
            "$ref": "#/components/schemas/account_terms_of_service"
          }
        },
        "title": "AccountTreasurySettings",
        "type": "object",
        "x-expandableFields": [
          "tos_acceptance"
        ]
      },
      "account_unification_account_controller": {
        "description": "",
        "properties": {
          "is_controller": {
            "description": "`true` if the Connect application retrieving the resource controls the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts). Otherwise, this field is null.",
            "type": "boolean"
          },
          "type": {
            "description": "The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself.",
            "enum": [
              "account",
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "AccountUnificationAccountController",
        "type": "object",
        "x-expandableFields": []
      },
      "address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City, district, suburb, town, or village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Address line 1 (e.g., street, PO Box, or company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State, county, province, or region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Address",
        "type": "object",
        "x-expandableFields": []
      },
      "api_errors": {
        "description": "",
        "properties": {
          "charge": {
            "description": "For card errors, the ID of the failed charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "code": {
            "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.",
            "maxLength": 5000,
            "type": "string"
          },
          "decline_code": {
            "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.",
            "maxLength": 5000,
            "type": "string"
          },
          "doc_url": {
            "description": "A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.",
            "maxLength": 5000,
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
            "maxLength": 40000,
            "type": "string"
          },
          "param": {
            "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
            "maxLength": 5000,
            "type": "string"
          },
          "payment_method_type": {
            "description": "If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.",
            "maxLength": 5000,
            "type": "string"
          },
          "request_log_url": {
            "description": "A URL to the request log entry in your dashboard.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`",
            "enum": [
              "api_error",
              "card_error",
              "idempotency_error",
              "invalid_request_error"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "APIErrors",
        "type": "object",
        "x-expandableFields": [
          "payment_intent",
          "payment_method",
          "setup_intent",
          "source"
        ]
      },
      "application": {
        "description": "",
        "properties": {
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "name": {
            "description": "The name of the application.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "object"
        ],
        "title": "Application",
        "type": "object",
        "x-expandableFields": []
      },
      "application_fee": {
        "description": "",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of the Stripe account this fee was taken from.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "amount": {
            "description": "Amount earned, in cents (or local equivalent).",
            "type": "integer"
          },
          "amount_refunded": {
            "description": "Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the fee if a partial refund was issued)",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "ID of the Connect application that earned the fee.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge that the application fee was taken from.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "application_fee"
            ],
            "type": "string"
          },
          "originating_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "refunded": {
            "description": "Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.",
            "type": "boolean"
          },
          "refunds": {
            "description": "A list of refunds that have been applied to the fee.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/fee_refund"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "FeeRefundList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          }
        },
        "required": [
          "account",
          "amount",
          "amount_refunded",
          "application",
          "charge",
          "created",
          "currency",
          "id",
          "livemode",
          "object",
          "refunded",
          "refunds"
        ],
        "title": "PlatformFee",
        "type": "object",
        "x-expandableFields": [
          "account",
          "application",
          "balance_transaction",
          "charge",
          "originating_transaction",
          "refunds"
        ],
        "x-resourceId": "application_fee"
      },
      "automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this invoice.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "AutomaticTax",
        "type": "object",
        "x-expandableFields": []
      },
      "balance_transaction": {
        "description": "Balance transactions represent funds moving through your Stripe account.\nStripe creates them for every type of transaction that enters or leaves your Stripe account balance.\n\nRelated guide: [Balance transaction types](https://stripe.com/docs/reports/balance-transaction-types)",
        "properties": {
          "amount": {
            "description": "Gross amount of this transaction (in cents (or local equivalent)). A positive value represents funds charged to another party, and a negative value represents funds sent to another party.",
            "type": "integer"
          },
          "available_on": {
            "description": "The date that the transaction's net funds become available in the Stripe balance.",
            "format": "unix-time",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exchange_rate": {
            "description": "If applicable, this transaction uses an exchange rate. If money converts from currency A to currency B, then the `amount` in currency A, multipled by the `exchange_rate`, equals the `amount` in currency B. For example, if you charge a customer 10.00 EUR, the PaymentIntent's `amount` is `1000` and `currency` is `eur`. If this converts to 12.34 USD in your Stripe account, the BalanceTransaction's `amount` is `1234`, its `currency` is `usd`, and the `exchange_rate` is `1.234`.",
            "nullable": true,
            "type": "number"
          },
          "fee": {
            "description": "Fees (in cents (or local equivalent)) paid for this transaction. Represented as a positive integer when assessed.",
            "type": "integer"
          },
          "fee_details": {
            "description": "Detailed breakdown of fees (in cents (or local equivalent)) paid for this transaction.",
            "items": {
              "$ref": "#/components/schemas/fee"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "net": {
            "description": "Net impact to a Stripe balance (in cents (or local equivalent)). A positive value represents incrementing a Stripe balance, and a negative value decrementing a Stripe balance. You can calculate the net impact of a transaction on a balance by `amount` - `fee`",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "balance_transaction"
            ],
            "type": "string"
          },
          "reporting_category": {
            "description": "Learn more about how [reporting categories](https://stripe.com/docs/reports/reporting-categories) can help you understand balance transactions from an accounting perspective.",
            "maxLength": 5000,
            "type": "string"
          },
          "source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application_fee"
              },
              {
                "$ref": "#/components/schemas/charge"
              },
              {
                "$ref": "#/components/schemas/connect_collection_transfer"
              },
              {
                "$ref": "#/components/schemas/customer_cash_balance_transaction"
              },
              {
                "$ref": "#/components/schemas/dispute"
              },
              {
                "$ref": "#/components/schemas/fee_refund"
              },
              {
                "$ref": "#/components/schemas/issuing.authorization"
              },
              {
                "$ref": "#/components/schemas/issuing.dispute"
              },
              {
                "$ref": "#/components/schemas/issuing.transaction"
              },
              {
                "$ref": "#/components/schemas/payout"
              },
              {
                "$ref": "#/components/schemas/platform_tax_fee"
              },
              {
                "$ref": "#/components/schemas/refund"
              },
              {
                "$ref": "#/components/schemas/reserve_transaction"
              },
              {
                "$ref": "#/components/schemas/tax_deducted_at_source"
              },
              {
                "$ref": "#/components/schemas/topup"
              },
              {
                "$ref": "#/components/schemas/transfer"
              },
              {
                "$ref": "#/components/schemas/transfer_reversal"
              }
            ],
            "description": "This transaction relates to the Stripe object.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application_fee"
                },
                {
                  "$ref": "#/components/schemas/charge"
                },
                {
                  "$ref": "#/components/schemas/connect_collection_transfer"
                },
                {
                  "$ref": "#/components/schemas/customer_cash_balance_transaction"
                },
                {
                  "$ref": "#/components/schemas/dispute"
                },
                {
                  "$ref": "#/components/schemas/fee_refund"
                },
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                },
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                },
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                },
                {
                  "$ref": "#/components/schemas/payout"
                },
                {
                  "$ref": "#/components/schemas/platform_tax_fee"
                },
                {
                  "$ref": "#/components/schemas/refund"
                },
                {
                  "$ref": "#/components/schemas/reserve_transaction"
                },
                {
                  "$ref": "#/components/schemas/tax_deducted_at_source"
                },
                {
                  "$ref": "#/components/schemas/topup"
                },
                {
                  "$ref": "#/components/schemas/transfer"
                },
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ]
            },
            "x-stripeBypassValidation": true
          },
          "status": {
            "description": "The transaction's net funds status in the Stripe balance, which are either `available` or `pending`.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_inbound`, `obligation_outbound`, `obligation_reversal_inbound`, `obligation_reversal_outbound`, `obligation_payout`, `obligation_payout_failure`, `payment`, `payment_failure_refund`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. Learn more about [balance transaction types and what they represent](https://stripe.com/docs/reports/balance-transaction-types). To classify transactions for accounting purposes, consider `reporting_category` instead.",
            "enum": [
              "adjustment",
              "advance",
              "advance_funding",
              "anticipation_repayment",
              "application_fee",
              "application_fee_refund",
              "charge",
              "connect_collection_transfer",
              "contribution",
              "issuing_authorization_hold",
              "issuing_authorization_release",
              "issuing_dispute",
              "issuing_transaction",
              "obligation_inbound",
              "obligation_outbound",
              "obligation_payout",
              "obligation_payout_failure",
              "obligation_reversal_inbound",
              "obligation_reversal_outbound",
              "payment",
              "payment_failure_refund",
              "payment_refund",
              "payment_reversal",
              "payment_unreconciled",
              "payout",
              "payout_cancel",
              "payout_failure",
              "refund",
              "refund_failure",
              "reserve_transaction",
              "reserved_funds",
              "stripe_fee",
              "stripe_fx_fee",
              "tax_fee",
              "topup",
              "topup_reversal",
              "transfer",
              "transfer_cancel",
              "transfer_failure",
              "transfer_refund"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "available_on",
          "created",
          "currency",
          "fee",
          "fee_details",
          "id",
          "net",
          "object",
          "reporting_category",
          "status",
          "type"
        ],
        "title": "BalanceTransaction",
        "type": "object",
        "x-expandableFields": [
          "fee_details",
          "source"
        ],
        "x-resourceId": "balance_transaction"
      },
      "bank_account": {
        "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank debits and transfers](https://stripe.com/docs/payments/bank-debits-transfers)",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The ID of the account that the bank account is associated with.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "account_holder_name": {
            "description": "The name of the person or business that owns the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_holder_type": {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "available_payout_methods": {
            "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
            "items": {
              "enum": [
                "instant",
                "standard"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "bank_name": {
            "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer that the bank account is associated with.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "default_for_currency": {
            "description": "Whether this bank account is the default external account for its currency.",
            "nullable": true,
            "type": "boolean"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "future_requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/external_account_requirements"
              }
            ],
            "description": "Information about the [upcoming new requirements for the bank account](https://stripe.com/docs/connect/custom-accounts/future-requirements), including what information needs to be collected, and by when.",
            "nullable": true
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the bank account number.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "bank_account"
            ],
            "type": "string"
          },
          "requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/external_account_requirements"
              }
            ],
            "description": "Information about the requirements for the bank account, including what information needs to be collected.",
            "nullable": true
          },
          "routing_number": {
            "description": "The routing transit number for the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a payout sent to this bank account fails, we'll set the status to `errored` and will not continue to send [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule) until the bank details are updated.\n\nFor external accounts, possible values are `new`, `errored` and `verification_failed`. If a payouts fails, the status is set to `errored` and scheduled payouts are stopped until account details are updated. In India, if we can't [verify the owner of the bank account](https://support.stripe.com/questions/bank-account-ownership-verification), we'll set the status to `verification_failed`. Other validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "country",
          "currency",
          "id",
          "last4",
          "object",
          "status"
        ],
        "title": "BankAccount",
        "type": "object",
        "x-expandableFields": [
          "account",
          "customer",
          "future_requirements",
          "requirements"
        ],
        "x-resourceId": "bank_account"
      },
      "billing_details": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Billing address.",
            "nullable": true
          },
          "email": {
            "description": "Email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Full name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Billing phone number (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "billing_details",
        "type": "object",
        "x-expandableFields": [
          "address"
        ]
      },
      "card": {
        "description": "You can store multiple cards on a customer in order to charge the customer\nlater. You can also store multiple debit cards on a recipient in order to\ntransfer to those cards later.\n\nRelated guide: [Card payments with Sources](https://stripe.com/docs/sources/cards)",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account this card belongs to. This attribute will not be in the card object if the card belongs to a customer or recipient instead.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "address_city": {
            "description": "City/District/Suburb/Town/Village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_country": {
            "description": "Billing address country, if provided when creating card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_line1": {
            "description": "Address line 1 (Street address/PO Box/Company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_line1_check": {
            "description": "If `address_line1` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_line2": {
            "description": "Address line 2 (Apartment/Suite/Unit/Building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_state": {
            "description": "State/County/Province/Region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_zip": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_zip_check": {
            "description": "If `address_zip` was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "available_payout_methods": {
            "description": "A set of available payout methods for this card. Only values from this set should be passed as the `method` when creating a payout.",
            "items": {
              "enum": [
                "instant",
                "standard"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "brand": {
            "description": "Card brand. Can be `American Express`, `Diners Club`, `Discover`, `Eftpos Australia`, `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO code for currency](https://stripe.com/docs/payouts). Only applicable on accounts (not customers or recipients). The card can be used as a transfer destination for funds in this currency.",
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The customer that this card belongs to. This attribute will not be in the card object if the card belongs to an account or recipient instead.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check: `pass`, `fail`, `unavailable`, or `unchecked`. A result of unchecked indicates that CVC was provided but hasn't been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "default_for_currency": {
            "description": "Whether this card is the default external account for its currency.",
            "nullable": true,
            "type": "boolean"
          },
          "dynamic_last4": {
            "description": "(For tokenized numbers only.) The last four digits of the device account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "name": {
            "description": "Cardholder name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "card"
            ],
            "type": "string"
          },
          "status": {
            "description": "For external accounts that are cards, possible values are `new` and `errored`. If a payout fails, the status is set to `errored` and [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule) are stopped until account details are updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tokenization_method": {
            "description": "If the card number is tokenized, this is the method that was used. Can be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`, `visa_checkout`, or null.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "brand",
          "exp_month",
          "exp_year",
          "funding",
          "id",
          "last4",
          "object"
        ],
        "title": "Card",
        "type": "object",
        "x-expandableFields": [
          "account",
          "customer"
        ],
        "x-resourceId": "card"
      },
      "card_generated_from_payment_method_details": {
        "description": "",
        "properties": {
          "card_present": {
            "$ref": "#/components/schemas/payment_method_details_card_present"
          },
          "type": {
            "description": "The type of payment method transaction-specific details from the transaction that generated this `card` payment method. Always `card_present`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "card_generated_from_payment_method_details",
        "type": "object",
        "x-expandableFields": [
          "card_present"
        ]
      },
      "card_issuing_account_terms_of_service": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "CardIssuingAccountTermsOfService",
        "type": "object",
        "x-expandableFields": []
      },
      "card_mandate_payment_method_details": {
        "description": "",
        "properties": {},
        "title": "card_mandate_payment_method_details",
        "type": "object",
        "x-expandableFields": []
      },
      "cash_balance": {
        "description": "A customer's `Cash balance` represents real funds. Customers can add funds to their cash balance by sending a bank transfer. These funds can be used for payment and can eventually be paid out to your bank account.",
        "properties": {
          "available": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "A hash of all cash balances available to this customer. You cannot delete a customer with any cash balances, even if the balance is 0. Amounts are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "nullable": true,
            "type": "object"
          },
          "customer": {
            "description": "The ID of the customer whose cash balance this object represents.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "cash_balance"
            ],
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/customer_balance_customer_balance_settings"
          }
        },
        "required": [
          "customer",
          "livemode",
          "object",
          "settings"
        ],
        "title": "cash_balance",
        "type": "object",
        "x-expandableFields": [
          "settings"
        ],
        "x-resourceId": "cash_balance"
      },
      "charge": {
        "description": "The `Charge` object represents a single attempt to move money into your Stripe account.\nPaymentIntent confirmation is the most common way to create Charges, but transferring\nmoney to a different Stripe account through Connect also creates Charges.\nSome legacy payment flows create Charges directly, which is not recommended for new integrations.",
        "properties": {
          "amount": {
            "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "type": "integer"
          },
          "amount_captured": {
            "description": "Amount in cents (or local equivalent) captured (can be less than the amount attribute on the charge if a partial capture was made).",
            "type": "integer"
          },
          "amount_refunded": {
            "description": "Amount in cents (or local equivalent) refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "ID of the Connect application that created the charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "application_fee": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application_fee"
              }
            ],
            "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ]
            }
          },
          "application_fee_amount": {
            "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
            "nullable": true,
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "billing_details": {
            "$ref": "#/components/schemas/billing_details"
          },
          "calculated_statement_descriptor": {
            "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "captured": {
            "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the customer this charge is for if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 40000,
            "nullable": true,
            "type": "string"
          },
          "disputed": {
            "description": "Whether the charge has been disputed.",
            "type": "boolean"
          },
          "failure_balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "failure_code": {
            "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/error-codes) for a list of codes).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Message to user further explaining reason for charge failure if available.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fraud_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/charge_fraud_details"
              }
            ],
            "description": "Information on fraud assessments for the charge.",
            "nullable": true
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "ID of the invoice this charge is for if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "charge"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "outcome": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/charge_outcome"
              }
            ],
            "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
            "nullable": true
          },
          "paid": {
            "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
            "type": "boolean"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the PaymentIntent associated with this charge, if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "payment_method": {
            "description": "ID of the payment method used in this charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_method_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details"
              }
            ],
            "description": "Details about the payment method at the time of the transaction.",
            "nullable": true
          },
          "radar_options": {
            "$ref": "#/components/schemas/radar_radar_options"
          },
          "receipt_email": {
            "description": "This is the email address that the receipt for this charge was sent to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "receipt_url": {
            "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "refunded": {
            "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
            "type": "boolean"
          },
          "refunds": {
            "description": "A list of refunds that have been applied to the charge.",
            "nullable": true,
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/refund"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "RefundList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "review": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/review"
              }
            ],
            "description": "ID of the review associated with this charge if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/review"
                }
              ]
            }
          },
          "shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "Shipping information for the charge.",
            "nullable": true
          },
          "source_transfer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer"
              }
            ],
            "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ]
            }
          },
          "statement_descriptor": {
            "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_suffix": {
            "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
            "enum": [
              "failed",
              "pending",
              "succeeded"
            ],
            "type": "string"
          },
          "transfer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer"
              }
            ],
            "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ]
            }
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/charge_transfer_data"
              }
            ],
            "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
            "nullable": true
          },
          "transfer_group": {
            "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_captured",
          "amount_refunded",
          "billing_details",
          "captured",
          "created",
          "currency",
          "disputed",
          "id",
          "livemode",
          "metadata",
          "object",
          "paid",
          "refunded",
          "status"
        ],
        "title": "Charge",
        "type": "object",
        "x-expandableFields": [
          "application",
          "application_fee",
          "balance_transaction",
          "billing_details",
          "customer",
          "failure_balance_transaction",
          "fraud_details",
          "invoice",
          "on_behalf_of",
          "outcome",
          "payment_intent",
          "payment_method_details",
          "radar_options",
          "refunds",
          "review",
          "shipping",
          "source_transfer",
          "transfer",
          "transfer_data"
        ],
        "x-resourceId": "charge"
      },
      "charge_fraud_details": {
        "description": "",
        "properties": {
          "stripe_report": {
            "description": "Assessments from Stripe. If set, the value is `fraudulent`.",
            "maxLength": 5000,
            "type": "string"
          },
          "user_report": {
            "description": "Assessments reported by you. If set, possible values of are `safe` and `fraudulent`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "ChargeFraudDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "charge_outcome": {
        "description": "",
        "properties": {
          "network_status": {
            "description": "Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as \"pending\" on a cardholder's statement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "reason": {
            "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https://stripe.com/docs/declines) for more details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "risk_level": {
            "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`. This field is only available with Radar.",
            "maxLength": 5000,
            "type": "string"
          },
          "risk_score": {
            "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams.",
            "type": "integer"
          },
          "rule": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/rule"
              }
            ],
            "description": "The ID of the Radar rule that matched the payment, if applicable.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/rule"
                }
              ]
            }
          },
          "seller_message": {
            "description": "A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines) and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "ChargeOutcome",
        "type": "object",
        "x-expandableFields": [
          "rule"
        ]
      },
      "charge_transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount transferred to the destination account, if specified. By default, the entire charge amount is transferred to the destination account.",
            "nullable": true,
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "destination"
        ],
        "title": "ChargeTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ]
      },
      "connect_collection_transfer": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount transferred, in cents (or local equivalent).",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of the account that funds are being collected for.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "connect_collection_transfer"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "destination",
          "id",
          "livemode",
          "object"
        ],
        "title": "ConnectCollectionTransfer",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ]
      },
      "coupon": {
        "description": "A coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),\n[checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).",
        "properties": {
          "amount_off": {
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "nullable": true,
            "type": "integer"
          },
          "applies_to": {
            "$ref": "#/components/schemas/coupon_applies_to"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.",
            "nullable": true,
            "type": "string"
          },
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/coupon_currency_option"
            },
            "description": "Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "duration": {
            "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
            "enum": [
              "forever",
              "once",
              "repeating"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "duration_in_months": {
            "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "max_redemptions": {
            "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "name": {
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "coupon"
            ],
            "type": "string"
          },
          "percent_off": {
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a $ (or local equivalent)100 invoice $ (or local equivalent)50 instead.",
            "nullable": true,
            "type": "number"
          },
          "redeem_by": {
            "description": "Date after which the coupon can no longer be redeemed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "times_redeemed": {
            "description": "Number of times this coupon has been applied to a customer.",
            "type": "integer"
          },
          "valid": {
            "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
            "type": "boolean"
          }
        },
        "required": [
          "created",
          "duration",
          "id",
          "livemode",
          "object",
          "times_redeemed",
          "valid"
        ],
        "title": "Coupon",
        "type": "object",
        "x-expandableFields": [
          "applies_to",
          "currency_options"
        ],
        "x-resourceId": "coupon"
      },
      "coupon_applies_to": {
        "description": "",
        "properties": {
          "products": {
            "description": "A list of product IDs this coupon applies to",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "products"
        ],
        "title": "CouponAppliesTo",
        "type": "object",
        "x-expandableFields": []
      },
      "coupon_currency_option": {
        "description": "",
        "properties": {
          "amount_off": {
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "type": "integer"
          }
        },
        "required": [
          "amount_off"
        ],
        "title": "CouponCurrencyOption",
        "type": "object",
        "x-expandableFields": []
      },
      "customer": {
        "description": "This object represents a customer of your business. Use it to create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment)",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "The customer's address.",
            "nullable": true
          },
          "balance": {
            "description": "The current balance, if any, that's stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that's added to their next invoice. The balance only considers amounts that Stripe hasn't successfully applied to any invoice. It doesn't reflect unpaid invoices. This balance is only taken into account after invoices finalize.",
            "type": "integer"
          },
          "cash_balance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/cash_balance"
              }
            ],
            "description": "The current funds being held by Stripe on behalf of the customer. You can apply these funds towards payment intents when the source is \"cash_balance\". The `settings[reconciliation_mode]` field describes if these funds apply to these payment intents manually or automatically.",
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "default_source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/bank_account"
              },
              {
                "$ref": "#/components/schemas/card"
              },
              {
                "$ref": "#/components/schemas/source"
              }
            ],
            "description": "ID of the default payment source for the customer.\n\nIf you use payment methods created through the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ]
            },
            "x-stripeBypassValidation": true
          },
          "delinquent": {
            "description": "Tracks the most recent state change on any invoice belonging to the customer. Paying an invoice or marking it uncollectible via the API will set this field to false. An automatic payment failure or passing the `invoice.due_date` will set this field to `true`.\n\nIf an invoice becomes uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't reset to `false`.\n\nIf you care whether the customer has paid their most recent subscription invoice, use `subscription.status` instead. Paying or marking uncollectible any customer invoice regardless of whether it is the latest invoice for a subscription will always set this field to `false`.",
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ],
            "description": "Describes the current discount active on the customer, if there is one.",
            "nullable": true
          },
          "email": {
            "description": "The customer's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_credit_balance": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The current multi-currency balances, if any, that's stored on the customer. If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency. If negative, the customer has an amount owed that's added to their next invoice denominated in that currency. These balances don't apply to unpaid invoices. They solely track amounts that Stripe hasn't successfully applied to any invoice. Stripe only applies a balance in a specific currency to an invoice after that invoice (which is in the same currency) finalizes.",
            "type": "object"
          },
          "invoice_prefix": {
            "description": "The prefix for the customer used to generate unique invoice numbers.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "invoice_settings": {
            "$ref": "#/components/schemas/invoice_setting_customer_setting"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "name": {
            "description": "The customer's full name or business name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "next_invoice_sequence": {
            "description": "The suffix of the customer's next invoice number (for example, 0001).",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer"
            ],
            "type": "string"
          },
          "phone": {
            "description": "The customer's phone number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_locales": {
            "description": "The customer's preferred locales (languages), ordered by preference.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
            "nullable": true
          },
          "sources": {
            "description": "The customer's payment sources, if any.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/bank_account"
                    },
                    {
                      "$ref": "#/components/schemas/card"
                    },
                    {
                      "$ref": "#/components/schemas/source"
                    }
                  ],
                  "title": "Polymorphic",
                  "x-stripeBypassValidation": true
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "ApmsSourcesSourceList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "subscriptions": {
            "description": "The customer's current subscriptions, if any.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/subscription"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "SubscriptionList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "tax": {
            "$ref": "#/components/schemas/customer_tax"
          },
          "tax_exempt": {
            "description": "Describes the customer's tax exemption status, which is `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the following text: **\"Reverse charge\"**.",
            "enum": [
              "exempt",
              "none",
              "reverse"
            ],
            "nullable": true,
            "type": "string"
          },
          "tax_ids": {
            "description": "The customer's tax IDs.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/tax_id"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "TaxIDsList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock that this customer belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          }
        },
        "required": [
          "created",
          "id",
          "livemode",
          "object"
        ],
        "title": "Customer",
        "type": "object",
        "x-expandableFields": [
          "address",
          "cash_balance",
          "default_source",
          "discount",
          "invoice_settings",
          "shipping",
          "sources",
          "subscriptions",
          "tax",
          "tax_ids",
          "test_clock"
        ],
        "x-resourceId": "customer"
      },
      "customer_acceptance": {
        "description": "",
        "properties": {
          "accepted_at": {
            "description": "The time that the customer accepts the mandate.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "offline": {
            "$ref": "#/components/schemas/offline_acceptance"
          },
          "online": {
            "$ref": "#/components/schemas/online_acceptance"
          },
          "type": {
            "description": "The mandate includes the type of customer acceptance information, such as: `online` or `offline`.",
            "enum": [
              "offline",
              "online"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "customer_acceptance",
        "type": "object",
        "x-expandableFields": [
          "offline",
          "online"
        ]
      },
      "customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft": {
        "description": "",
        "properties": {
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "The [Balance Transaction](https://stripe.com/docs/api/balance_transactions/object) that corresponds to funds taken out of your Stripe balance.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "linked_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer_cash_balance_transaction"
              }
            ],
            "description": "The [Cash Balance Transaction](https://stripe.com/docs/api/cash_balance_transactions/object) that brought the customer balance negative, triggering the clawback of funds.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer_cash_balance_transaction"
                }
              ]
            }
          }
        },
        "required": [
          "balance_transaction",
          "linked_transaction"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraft",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "linked_transaction"
        ]
      },
      "customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction": {
        "description": "",
        "properties": {
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were applied to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          }
        },
        "required": [
          "payment_intent"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceAppliedToPaymentTransaction",
        "type": "object",
        "x-expandableFields": [
          "payment_intent"
        ]
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction": {
        "description": "",
        "properties": {
          "bank_transfer": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer"
          }
        },
        "required": [
          "bank_transfer"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransaction",
        "type": "object",
        "x-expandableFields": [
          "bank_transfer"
        ]
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer": {
        "description": "",
        "properties": {
          "eu_bank_transfer": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer"
          },
          "gb_bank_transfer": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer"
          },
          "jp_bank_transfer": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer"
          },
          "reference": {
            "description": "The user-supplied reference field on the bank transfer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The funding method type used to fund the customer balance. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.",
            "enum": [
              "eu_bank_transfer",
              "gb_bank_transfer",
              "jp_bank_transfer",
              "mx_bank_transfer",
              "us_bank_transfer"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_transfer": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer"
          }
        },
        "required": [
          "type"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransfer",
        "type": "object",
        "x-expandableFields": [
          "eu_bank_transfer",
          "gb_bank_transfer",
          "jp_bank_transfer",
          "us_bank_transfer"
        ]
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer": {
        "description": "",
        "properties": {
          "bic": {
            "description": "The BIC of the bank of the sender of the funding.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "description": "The last 4 digits of the IBAN of the sender of the funding.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sender_name": {
            "description": "The full name of the sender, as supplied by the sending bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceEuBankTransfer",
        "type": "object",
        "x-expandableFields": []
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_gb_bank_transfer": {
        "description": "",
        "properties": {
          "account_number_last4": {
            "description": "The last 4 digits of the account number of the sender of the funding.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sender_name": {
            "description": "The full name of the sender, as supplied by the sending bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sort_code": {
            "description": "The sort code of the bank of the sender of the funding",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceGbBankTransfer",
        "type": "object",
        "x-expandableFields": []
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_jp_bank_transfer": {
        "description": "",
        "properties": {
          "sender_bank": {
            "description": "The name of the bank of the sender of the funding.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sender_branch": {
            "description": "The name of the bank branch of the sender of the funding.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sender_name": {
            "description": "The full name of the sender, as supplied by the sending bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceJpBankTransfer",
        "type": "object",
        "x-expandableFields": []
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_us_bank_transfer": {
        "description": "",
        "properties": {
          "network": {
            "description": "The banking network used for this funding.",
            "enum": [
              "ach",
              "domestic_wire_us",
              "swift"
            ],
            "type": "string"
          },
          "sender_name": {
            "description": "The full name of the sender, as supplied by the sending bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceUsBankTransfer",
        "type": "object",
        "x-expandableFields": []
      },
      "customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction": {
        "description": "",
        "properties": {
          "refund": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/refund"
              }
            ],
            "description": "The [Refund](https://stripe.com/docs/api/refunds/object) that moved these funds into the customer's cash balance.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/refund"
                }
              ]
            }
          }
        },
        "required": [
          "refund"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceRefundedFromPaymentTransaction",
        "type": "object",
        "x-expandableFields": [
          "refund"
        ]
      },
      "customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction": {
        "description": "",
        "properties": {
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were unapplied from.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          }
        },
        "required": [
          "payment_intent"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceUnappliedFromPaymentTransaction",
        "type": "object",
        "x-expandableFields": [
          "payment_intent"
        ]
      },
      "customer_cash_balance_transaction": {
        "description": "Customers with certain payments enabled have a cash balance, representing funds that were paid\nby the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions\nrepresent when funds are moved into or out of this balance. This includes funding by the customer, allocation\nto payments, and refunds to the customer.",
        "properties": {
          "adjusted_for_overdraft": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_adjusted_for_overdraft"
          },
          "applied_to_payment": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "The customer whose available cash balance changed as a result of this transaction.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "ending_balance": {
            "description": "The total available cash balance for the specified currency after this transaction was applied. Represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "funded": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "net_amount": {
            "description": "The amount by which the cash balance changed, represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). A positive value represents funds being added to the cash balance, a negative value represents funds being removed from the cash balance.",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer_cash_balance_transaction"
            ],
            "type": "string"
          },
          "refunded_from_payment": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction"
          },
          "type": {
            "description": "The type of the cash balance transaction. New types may be added in future. See [Customer Balance](https://stripe.com/docs/payments/customer-balance#types) to learn more about these types.",
            "enum": [
              "adjusted_for_overdraft",
              "applied_to_payment",
              "funded",
              "funding_reversed",
              "refunded_from_payment",
              "return_canceled",
              "return_initiated",
              "transferred_to_balance",
              "unapplied_from_payment"
            ],
            "type": "string"
          },
          "unapplied_from_payment": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction"
          }
        },
        "required": [
          "created",
          "currency",
          "customer",
          "ending_balance",
          "id",
          "livemode",
          "net_amount",
          "object",
          "type"
        ],
        "title": "CustomerCashBalanceTransaction",
        "type": "object",
        "x-expandableFields": [
          "adjusted_for_overdraft",
          "applied_to_payment",
          "customer",
          "funded",
          "refunded_from_payment",
          "unapplied_from_payment"
        ],
        "x-resourceId": "customer_cash_balance_transaction"
      },
      "customer_balance_customer_balance_settings": {
        "description": "",
        "properties": {
          "reconciliation_mode": {
            "description": "The configuration for how funds that land in the customer cash balance are reconciled.",
            "enum": [
              "automatic",
              "manual"
            ],
            "type": "string"
          },
          "using_merchant_default": {
            "description": "A flag to indicate if reconciliation mode returned is the user's default or is specific to this customer cash balance",
            "type": "boolean"
          }
        },
        "required": [
          "reconciliation_mode",
          "using_merchant_default"
        ],
        "title": "CustomerBalanceCustomerBalanceSettings",
        "type": "object",
        "x-expandableFields": []
      },
      "customer_tax": {
        "description": "",
        "properties": {
          "automatic_tax": {
            "description": "Surfaces if automatic tax computation is possible given the current customer location information.",
            "enum": [
              "failed",
              "not_collecting",
              "supported",
              "unrecognized_location"
            ],
            "type": "string"
          },
          "ip_address": {
            "description": "A recent IP address of the customer used for tax reporting and tax location inference.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/customer_tax_location"
              }
            ],
            "description": "The customer's location as identified by Stripe Tax.",
            "nullable": true
          }
        },
        "required": [
          "automatic_tax"
        ],
        "title": "CustomerTax",
        "type": "object",
        "x-expandableFields": [
          "location"
        ]
      },
      "customer_tax_location": {
        "description": "",
        "properties": {
          "country": {
            "description": "The customer's country as identified by Stripe Tax.",
            "maxLength": 5000,
            "type": "string"
          },
          "source": {
            "description": "The data source used to infer the customer's location.",
            "enum": [
              "billing_address",
              "ip_address",
              "payment_method",
              "shipping_destination"
            ],
            "type": "string"
          },
          "state": {
            "description": "The customer's state, county, province, or region as identified by Stripe Tax.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "country",
          "source"
        ],
        "title": "CustomerTaxLocation",
        "type": "object",
        "x-expandableFields": []
      },
      "deleted_application": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "name": {
            "description": "The name of the application.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedApplication",
        "type": "object",
        "x-expandableFields": []
      },
      "deleted_customer": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedCustomer",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_customer"
      },
      "deleted_discount": {
        "description": "",
        "properties": {
          "checkout_session": {
            "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "coupon": {
            "$ref": "#/components/schemas/coupon"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer associated with this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "invoice_item": {
            "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "discount"
            ],
            "type": "string"
          },
          "promotion_code": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/promotion_code"
              }
            ],
            "description": "The promotion code applied to create this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/promotion_code"
                }
              ]
            }
          },
          "start": {
            "description": "Date that the coupon was applied.",
            "format": "unix-time",
            "type": "integer"
          },
          "subscription": {
            "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "coupon",
          "deleted",
          "id",
          "object",
          "start"
        ],
        "title": "DeletedDiscount",
        "type": "object",
        "x-expandableFields": [
          "coupon",
          "customer",
          "promotion_code"
        ],
        "x-resourceId": "deleted_discount"
      },
      "deleted_tax_id": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_id"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "deleted_tax_id",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_tax_id"
      },
      "discount": {
        "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)",
        "properties": {
          "checkout_session": {
            "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "coupon": {
            "$ref": "#/components/schemas/coupon"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer associated with this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "end": {
            "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "invoice_item": {
            "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "discount"
            ],
            "type": "string"
          },
          "promotion_code": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/promotion_code"
              }
            ],
            "description": "The promotion code applied to create this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/promotion_code"
                }
              ]
            }
          },
          "start": {
            "description": "Date that the coupon was applied.",
            "format": "unix-time",
            "type": "integer"
          },
          "subscription": {
            "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "coupon",
          "id",
          "object",
          "start"
        ],
        "title": "Discount",
        "type": "object",
        "x-expandableFields": [
          "coupon",
          "customer",
          "promotion_code"
        ],
        "x-resourceId": "discount"
      },
      "discounts_resource_discount_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount, in cents (or local equivalent), of the discount.",
            "type": "integer"
          },
          "discount": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/discount"
              },
              {
                "$ref": "#/components/schemas/deleted_discount"
              }
            ],
            "description": "The discount that was applied to get this discount amount.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/discount"
                },
                {
                  "$ref": "#/components/schemas/deleted_discount"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "discount"
        ],
        "title": "DiscountsResourceDiscountAmount",
        "type": "object",
        "x-expandableFields": [
          "discount"
        ]
      },
      "dispute": {
        "description": "A dispute occurs when a customer questions your charge with their card issuer.\nWhen this happens, you have the opportunity to respond to the dispute with\nevidence that shows that the charge is legitimate.\n\nRelated guide: [Disputes and fraud](https://stripe.com/docs/disputes)",
        "properties": {
          "amount": {
            "description": "Disputed amount. Usually the amount of the charge, but it can differ (usually because of currency fluctuation or because only part of the order is disputed).",
            "type": "integer"
          },
          "balance_transactions": {
            "description": "List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.",
            "items": {
              "$ref": "#/components/schemas/balance_transaction"
            },
            "type": "array"
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge that's disputed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "evidence": {
            "$ref": "#/components/schemas/dispute_evidence"
          },
          "evidence_details": {
            "$ref": "#/components/schemas/dispute_evidence_details"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "is_charge_refundable": {
            "description": "If true, it's still possible to refund the disputed payment. After the payment has been fully refunded, no further funds are withdrawn from your Stripe account as a result of this dispute.",
            "type": "boolean"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "dispute"
            ],
            "type": "string"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the PaymentIntent that's disputed.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "payment_method_details": {
            "$ref": "#/components/schemas/dispute_payment_method_details"
          },
          "reason": {
            "description": "Reason given by cardholder for dispute. Possible values are `bank_cannot_process`, `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`, `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`, `product_not_received`, `product_unacceptable`, `subscription_canceled`, or `unrecognized`. Learn more about [dispute reasons](https://stripe.com/docs/disputes/categories).",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "Current status of dispute. Possible values are `warning_needs_response`, `warning_under_review`, `warning_closed`, `needs_response`, `under_review`, `won`, or `lost`.",
            "enum": [
              "lost",
              "needs_response",
              "under_review",
              "warning_closed",
              "warning_needs_response",
              "warning_under_review",
              "won"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "balance_transactions",
          "charge",
          "created",
          "currency",
          "evidence",
          "evidence_details",
          "id",
          "is_charge_refundable",
          "livemode",
          "metadata",
          "object",
          "reason",
          "status"
        ],
        "title": "Dispute",
        "type": "object",
        "x-expandableFields": [
          "balance_transactions",
          "charge",
          "evidence",
          "evidence_details",
          "payment_intent",
          "payment_method_details"
        ],
        "x-resourceId": "dispute"
      },
      "dispute_evidence": {
        "description": "",
        "properties": {
          "access_activity_log": {
            "description": "Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "billing_address": {
            "description": "The billing address provided by the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cancellation_policy": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "cancellation_policy_disclosure": {
            "description": "An explanation of how and when the customer was shown your refund policy prior to purchase.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "cancellation_rebuttal": {
            "description": "A justification for why the customer's subscription was not canceled.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "customer_communication": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "customer_email_address": {
            "description": "The email address of the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_name": {
            "description": "The name of the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_purchase_ip": {
            "description": "The IP address that the customer used when making the purchase.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_signature": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "duplicate_charge_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "duplicate_charge_explanation": {
            "description": "An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "duplicate_charge_id": {
            "description": "The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "product_description": {
            "description": "A description of the product or service that was sold.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "receipt": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "refund_policy": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "refund_policy_disclosure": {
            "description": "Documentation demonstrating that the customer was shown your refund policy prior to purchase.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "refund_refusal_explanation": {
            "description": "A justification for why the customer is not entitled to a refund.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "service_date": {
            "description": "The date on which the customer received or began receiving the purchased service, in a clear human-readable format.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "service_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "shipping_address": {
            "description": "The address to which a physical product was shipped. You should try to include as complete address information as possible.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_carrier": {
            "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_date": {
            "description": "The date on which a physical product began its route to the shipping address, in a clear human-readable format.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "shipping_tracking_number": {
            "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "uncategorized_file": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "uncategorized_text": {
            "description": "Any additional evidence or statements.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "DisputeEvidence",
        "type": "object",
        "x-expandableFields": [
          "cancellation_policy",
          "customer_communication",
          "customer_signature",
          "duplicate_charge_documentation",
          "receipt",
          "refund_policy",
          "service_documentation",
          "shipping_documentation",
          "uncategorized_file"
        ]
      },
      "dispute_evidence_details": {
        "description": "",
        "properties": {
          "due_by": {
            "description": "Date by which evidence must be submitted in order to successfully challenge dispute. Will be 0 if the customer's bank or credit card company doesn't allow a response for this particular dispute.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "has_evidence": {
            "description": "Whether evidence has been staged for this dispute.",
            "type": "boolean"
          },
          "past_due": {
            "description": "Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed.",
            "type": "boolean"
          },
          "submission_count": {
            "description": "The number of times evidence has been submitted. Typically, you may only submit evidence once.",
            "type": "integer"
          }
        },
        "required": [
          "has_evidence",
          "past_due",
          "submission_count"
        ],
        "title": "DisputeEvidenceDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "dispute_payment_method_details": {
        "description": "",
        "properties": {
          "card": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/dispute_payment_method_details_card"
              }
            ],
            "description": "Card specific dispute details.",
            "nullable": true
          },
          "type": {
            "description": "Payment method type.",
            "enum": [
              "card"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "DisputePaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "card"
        ]
      },
      "dispute_payment_method_details_card": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "network_reason_code": {
            "description": "The card network's specific dispute reason code, which maps to one of Stripe's primary dispute categories to simplify response guidance. The [Network code map](https://stripe.com/docs/disputes/categories#network-code-map) lists all available dispute reason codes by network.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "brand"
        ],
        "title": "DisputePaymentMethodDetailsCard",
        "type": "object",
        "x-expandableFields": []
      },
      "error": {
        "description": "An error response from the Stripe API",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/api_errors"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "external_account_requirements": {
        "description": "",
        "properties": {
          "currently_due": {
            "description": "Fields that need to be collected to keep the external account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the external account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "ExternalAccountRequirements",
        "type": "object",
        "x-expandableFields": [
          "errors"
        ]
      },
      "fee": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount of the fee, in cents.",
            "type": "integer"
          },
          "application": {
            "description": "ID of the Connect application that earned the fee.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of the fee, one of: `application_fee`, `stripe_fee` or `tax`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "type"
        ],
        "title": "Fee",
        "type": "object",
        "x-expandableFields": []
      },
      "fee_refund": {
        "description": "`Application Fee Refund` objects allow you to refund an application fee that\nhas previously been created but not yet refunded. Funds will be refunded to\nthe Stripe account from which the fee was originally collected.\n\nRelated guide: [Refunding application fees](https://stripe.com/docs/connect/destination-charges#refunding-app-fee)",
        "properties": {
          "amount": {
            "description": "Amount, in cents (or local equivalent).",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "fee": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application_fee"
              }
            ],
            "description": "ID of the application fee that was refunded.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "fee_refund"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "fee",
          "id",
          "object"
        ],
        "title": "FeeRefund",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "fee"
        ],
        "x-resourceId": "fee_refund"
      },
      "file": {
        "description": "This object represents files hosted on Stripe's servers. You can upload\nfiles with the [create file](https://stripe.com/docs/api#create_file) request\n(for example, when uploading dispute evidence). Stripe also\ncreates files independetly (for example, the results of a [Sigma scheduled\nquery](#scheduled_queries)).\n\nRelated guide: [File upload guide](https://stripe.com/docs/file-upload)",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires_at": {
            "description": "The file expires and isn't available at this time in epoch seconds.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "filename": {
            "description": "The suitable name for saving the file to a filesystem.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "links": {
            "description": "A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.",
            "nullable": true,
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/file_link"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "pattern": "^/v1/file_links",
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "FileResourceFileLinkList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "file"
            ],
            "type": "string"
          },
          "purpose": {
            "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
            "enum": [
              "account_requirement",
              "additional_verification",
              "business_icon",
              "business_logo",
              "customer_signature",
              "dispute_evidence",
              "document_provider_identity_document",
              "finance_report_run",
              "identity_document",
              "identity_document_downloadable",
              "pci_document",
              "selfie",
              "sigma_scheduled_query",
              "tax_document_user_upload",
              "terminal_reader_splashscreen"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "size": {
            "description": "The size of the file object in bytes.",
            "type": "integer"
          },
          "title": {
            "description": "A suitable title for the document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The returned file type (for example, `csv`, `pdf`, `jpg`, or `png`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "Use your live secret API key to download the file from this URL.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "id",
          "object",
          "purpose",
          "size"
        ],
        "title": "File",
        "type": "object",
        "x-expandableFields": [
          "links"
        ],
        "x-resourceId": "file"
      },
      "file_link": {
        "description": "To share the contents of a `File` object with non-Stripe users, you can\ncreate a `FileLink`. `FileLink`s contain a URL that you can use to\nretrieve the contents of the file without authentication.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expired": {
            "description": "Returns if the link is already expired.",
            "type": "boolean"
          },
          "expires_at": {
            "description": "Time that the link expires.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "file": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The file object this link points to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "file_link"
            ],
            "type": "string"
          },
          "url": {
            "description": "The publicly accessible URL to download the file.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expired",
          "file",
          "id",
          "livemode",
          "metadata",
          "object"
        ],
        "title": "FileLink",
        "type": "object",
        "x-expandableFields": [
          "file"
        ],
        "x-resourceId": "file_link"
      },
      "invoice": {
        "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send invoices to customers](https://stripe.com/docs/billing/invoices/sending)",
        "properties": {
          "account_country": {
            "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_name": {
            "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_tax_ids": {
            "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_id"
                },
                {
                  "$ref": "#/components/schemas/deleted_tax_id"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "amount_due": {
            "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
            "type": "integer"
          },
          "amount_paid": {
            "description": "The amount, in cents (or local equivalent), that was paid.",
            "type": "integer"
          },
          "amount_remaining": {
            "description": "The difference between amount_due and amount_paid, in cents (or local equivalent).",
            "type": "integer"
          },
          "amount_shipping": {
            "description": "This is the sum of all the shipping amounts.",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the invoice.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "application_fee_amount": {
            "description": "The fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
            "nullable": true,
            "type": "integer"
          },
          "attempt_count": {
            "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
            "type": "integer"
          },
          "attempted": {
            "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
            "type": "boolean"
          },
          "auto_advance": {
            "description": "Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection) of the invoice. If `false`, the invoice's state doesn't automatically advance without an explicit action.",
            "type": "boolean"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/automatic_tax"
          },
          "billing_reason": {
            "description": "Indicates the reason why the invoice was created.\n\n* `manual`: Unrelated to a subscription, for example, created via the invoice editor.\n* `subscription`: No longer in use. Applies to subscriptions from before May 2018 where no distinction was made between updates, cycles, and thresholds.\n* `subscription_create`: A new subscription was created.\n* `subscription_cycle`: A subscription advanced into a new period.\n* `subscription_threshold`: A subscription reached a billing threshold.\n* `subscription_update`: A subscription was updated.\n* `upcoming`: Reserved for simulated invoices, per the upcoming invoice endpoint.",
            "enum": [
              "automatic_pending_invoice_item_invoice",
              "manual",
              "quote_accept",
              "subscription",
              "subscription_create",
              "subscription_cycle",
              "subscription_threshold",
              "subscription_update",
              "upcoming"
            ],
            "nullable": true,
            "type": "string"
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the latest charge generated for this invoice, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "custom_fields": {
            "description": "Custom fields displayed on the invoice.",
            "items": {
              "$ref": "#/components/schemas/invoice_setting_custom_field"
            },
            "nullable": true,
            "type": "array"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer who will be billed.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "customer_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
            "nullable": true
          },
          "customer_email": {
            "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_name": {
            "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_phone": {
            "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
            "nullable": true
          },
          "customer_tax_exempt": {
            "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
            "enum": [
              "exempt",
              "none",
              "reverse"
            ],
            "nullable": true,
            "type": "string"
          },
          "customer_tax_ids": {
            "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
            "items": {
              "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
            },
            "nullable": true,
            "type": "array"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "default_source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/bank_account"
              },
              {
                "$ref": "#/components/schemas/card"
              },
              {
                "$ref": "#/components/schemas/source"
              }
            ],
            "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ]
            },
            "x-stripeBypassValidation": true
          },
          "default_tax_rates": {
            "description": "The tax rates applied to this invoice, if any.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "type": "array"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ],
            "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
            "nullable": true
          },
          "discounts": {
            "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                },
                {
                  "$ref": "#/components/schemas/deleted_discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "due_date": {
            "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "effective_at": {
            "description": "The date when this invoice is in effect. Same as `finalized_at` unless overwritten. When defined, this value replaces the system-generated 'Date of issue' printed on the invoice PDF and receipt.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ending_balance": {
            "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
            "nullable": true,
            "type": "integer"
          },
          "footer": {
            "description": "Footer displayed on the invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "from_invoice": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_from_invoice"
              }
            ],
            "description": "Details of the invoice that was cloned. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.",
            "nullable": true
          },
          "hosted_invoice_url": {
            "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object. This property is always present unless the invoice is an upcoming invoice. See [Retrieve an upcoming invoice](https://stripe.com/docs/api/invoices/upcoming) for more details.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_pdf": {
            "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_finalization_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/api_errors"
              }
            ],
            "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
            "nullable": true
          },
          "latest_revision": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The ID of the most recent non-draft revision of this invoice",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "lines": {
            "description": "The individual line items that make up the invoice. `lines` is sorted as follows: (1) pending invoice items (including prorations) in reverse chronological order, (2) subscription items in reverse chronological order, and (3) invoice items added after invoice creation in chronological order.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/line_item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "InvoiceLinesList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "next_payment_attempt": {
            "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "number": {
            "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "invoice"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "paid": {
            "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
            "type": "boolean"
          },
          "paid_out_of_band": {
            "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
            "type": "boolean"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "payment_settings": {
            "$ref": "#/components/schemas/invoices_payment_settings"
          },
          "period_end": {
            "description": "End of the usage period during which invoice items were added to this invoice.",
            "format": "unix-time",
            "type": "integer"
          },
          "period_start": {
            "description": "Start of the usage period during which invoice items were added to this invoice.",
            "format": "unix-time",
            "type": "integer"
          },
          "post_payment_credit_notes_amount": {
            "description": "Total amount of all post-payment credit notes issued for this invoice.",
            "type": "integer"
          },
          "pre_payment_credit_notes_amount": {
            "description": "Total amount of all pre-payment credit notes issued for this invoice.",
            "type": "integer"
          },
          "quote": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/quote"
              }
            ],
            "description": "The quote this invoice was generated from.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/quote"
                }
              ]
            }
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "rendering": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_invoice_rendering"
              }
            ],
            "description": "The rendering-related settings that control how the invoice is displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.",
            "nullable": true
          },
          "shipping_cost": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_shipping_cost"
              }
            ],
            "description": "The details of the cost of shipping, including the ShippingRate applied on the invoice.",
            "nullable": true
          },
          "shipping_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.",
            "nullable": true
          },
          "starting_balance": {
            "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance. For revision invoices, this also includes any customer balance that was applied to the original invoice.",
            "type": "integer"
          },
          "statement_descriptor": {
            "description": "Extra information about an invoice for the customer's credit card statement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
            "enum": [
              "draft",
              "open",
              "paid",
              "uncollectible",
              "void"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "status_transitions": {
            "$ref": "#/components/schemas/invoices_status_transitions"
          },
          "subscription": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription"
              }
            ],
            "description": "The subscription that this invoice was prepared for, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ]
            }
          },
          "subscription_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_details_data"
              }
            ],
            "description": "Details about the subscription that created this invoice.",
            "nullable": true
          },
          "subscription_proration_date": {
            "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
            "type": "integer"
          },
          "subtotal": {
            "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
            "type": "integer"
          },
          "subtotal_excluding_tax": {
            "description": "The integer amount in cents (or local equivalent) representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
            "nullable": true,
            "type": "integer"
          },
          "tax": {
            "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
            "nullable": true,
            "type": "integer"
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this invoice belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          },
          "threshold_reason": {
            "$ref": "#/components/schemas/invoice_threshold_reason"
          },
          "total": {
            "description": "Total after discounts and taxes.",
            "type": "integer"
          },
          "total_discount_amounts": {
            "description": "The aggregate amounts calculated per discount across all line items.",
            "items": {
              "$ref": "#/components/schemas/discounts_resource_discount_amount"
            },
            "nullable": true,
            "type": "array"
          },
          "total_excluding_tax": {
            "description": "The integer amount in cents (or local equivalent) representing the total amount of the invoice including all discounts but excluding all tax.",
            "nullable": true,
            "type": "integer"
          },
          "total_tax_amounts": {
            "description": "The aggregate amounts calculated per tax rate for all line items.",
            "items": {
              "$ref": "#/components/schemas/invoice_tax_amount"
            },
            "type": "array"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_transfer_data"
              }
            ],
            "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
            "nullable": true
          },
          "webhooks_delivered_at": {
            "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "amount_due",
          "amount_paid",
          "amount_remaining",
          "amount_shipping",
          "attempt_count",
          "attempted",
          "automatic_tax",
          "collection_method",
          "created",
          "currency",
          "default_tax_rates",
          "lines",
          "livemode",
          "object",
          "paid",
          "paid_out_of_band",
          "payment_settings",
          "period_end",
          "period_start",
          "post_payment_credit_notes_amount",
          "pre_payment_credit_notes_amount",
          "starting_balance",
          "status_transitions",
          "subtotal",
          "total",
          "total_tax_amounts"
        ],
        "title": "Invoice",
        "type": "object",
        "x-expandableFields": [
          "account_tax_ids",
          "application",
          "automatic_tax",
          "charge",
          "custom_fields",
          "customer",
          "customer_address",
          "customer_shipping",
          "customer_tax_ids",
          "default_payment_method",
          "default_source",
          "default_tax_rates",
          "discount",
          "discounts",
          "from_invoice",
          "last_finalization_error",
          "latest_revision",
          "lines",
          "on_behalf_of",
          "payment_intent",
          "payment_settings",
          "quote",
          "rendering",
          "shipping_cost",
          "shipping_details",
          "status_transitions",
          "subscription",
          "subscription_details",
          "test_clock",
          "threshold_reason",
          "total_discount_amounts",
          "total_tax_amounts",
          "transfer_data"
        ],
        "x-resourceId": "invoice"
      },
      "invoice_item_threshold_reason": {
        "description": "",
        "properties": {
          "line_item_ids": {
            "description": "The IDs of the line items that triggered the threshold invoice.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "usage_gte": {
            "description": "The quantity threshold boundary that applied to the given line item.",
            "type": "integer"
          }
        },
        "required": [
          "line_item_ids",
          "usage_gte"
        ],
        "title": "InvoiceItemThresholdReason",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_installments_card": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Installments are enabled for this Invoice.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "title": "invoice_installments_card",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_payment_method_options_acss_debit": {
        "description": "",
        "properties": {
          "mandate_options": {
            "$ref": "#/components/schemas/invoice_payment_method_options_acss_debit_mandate_options"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "invoice_payment_method_options_acss_debit",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ]
      },
      "invoice_payment_method_options_acss_debit_mandate_options": {
        "description": "",
        "properties": {
          "transaction_type": {
            "description": "Transaction type of the mandate.",
            "enum": [
              "business",
              "personal"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "invoice_payment_method_options_acss_debit_mandate_options",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_payment_method_options_bancontact": {
        "description": "",
        "properties": {
          "preferred_language": {
            "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "type": "string"
          }
        },
        "required": [
          "preferred_language"
        ],
        "title": "invoice_payment_method_options_bancontact",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_payment_method_options_card": {
        "description": "",
        "properties": {
          "installments": {
            "$ref": "#/components/schemas/invoice_installments_card"
          },
          "request_three_d_secure": {
            "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
            "enum": [
              "any",
              "automatic"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "invoice_payment_method_options_card",
        "type": "object",
        "x-expandableFields": [
          "installments"
        ]
      },
      "invoice_payment_method_options_konbini": {
        "description": "",
        "properties": {},
        "title": "invoice_payment_method_options_konbini",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_payment_method_options_us_bank_account_linked_account_options": {
        "description": "",
        "properties": {
          "permissions": {
            "description": "The list of permissions to request. The `payment_method` permission must be included.",
            "items": {
              "enum": [
                "balances",
                "payment_method",
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "prefetch": {
            "description": "Data features requested to be retrieved upon account creation.",
            "items": {
              "enum": [
                "balances"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "invoice_payment_method_options_us_bank_account_linked_account_options",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_payment_method_options_us_bank_account": {
        "description": "",
        "properties": {
          "financial_connections": {
            "$ref": "#/components/schemas/invoice_payment_method_options_us_bank_account_linked_account_options"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "invoice_payment_method_options_us_bank_account",
        "type": "object",
        "x-expandableFields": [
          "financial_connections"
        ]
      },
      "invoice_payment_method_options_customer_balance": {
        "description": "",
        "properties": {
          "bank_transfer": {
            "$ref": "#/components/schemas/invoice_payment_method_options_customer_balance_bank_transfer"
          },
          "funding_type": {
            "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
            "enum": [
              "bank_transfer"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "invoice_payment_method_options_customer_balance",
        "type": "object",
        "x-expandableFields": [
          "bank_transfer"
        ]
      },
      "invoice_payment_method_options_customer_balance_bank_transfer": {
        "description": "",
        "properties": {
          "eu_bank_transfer": {
            "$ref": "#/components/schemas/invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer"
          },
          "type": {
            "description": "The bank transfer type that can be used for funding. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "invoice_payment_method_options_customer_balance_bank_transfer",
        "type": "object",
        "x-expandableFields": [
          "eu_bank_transfer"
        ]
      },
      "invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer": {
        "description": "",
        "properties": {
          "country": {
            "description": "The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.",
            "enum": [
              "BE",
              "DE",
              "ES",
              "FR",
              "IE",
              "NL"
            ],
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "title": "invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_rendering_pdf": {
        "description": "",
        "properties": {
          "page_size": {
            "description": "Page size of invoice pdf. Options include a4, letter, and auto. If set to auto, page size will be switched to a4 or letter based on customer locale.",
            "enum": [
              "a4",
              "auto",
              "letter"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "InvoiceRenderingPdf",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_setting_custom_field": {
        "description": "",
        "properties": {
          "name": {
            "description": "The name of the custom field.",
            "maxLength": 5000,
            "type": "string"
          },
          "value": {
            "description": "The value of the custom field.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "title": "InvoiceSettingCustomField",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_setting_customer_setting": {
        "description": "",
        "properties": {
          "custom_fields": {
            "description": "Default custom fields to be displayed on invoices for this customer.",
            "items": {
              "$ref": "#/components/schemas/invoice_setting_custom_field"
            },
            "nullable": true,
            "type": "array"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of a payment method that's attached to the customer, to be used as the customer's default payment method for subscriptions and invoices.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "footer": {
            "description": "Default footer to be displayed on invoices for this customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "rendering_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_rendering_options"
              }
            ],
            "description": "Default options for invoice PDF rendering for this customer.",
            "nullable": true
          }
        },
        "title": "InvoiceSettingCustomerSetting",
        "type": "object",
        "x-expandableFields": [
          "custom_fields",
          "default_payment_method",
          "rendering_options"
        ]
      },
      "invoice_setting_rendering_options": {
        "description": "",
        "properties": {
          "amount_tax_display": {
            "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "InvoiceSettingRenderingOptions",
        "type": "object",
        "x-expandableFields": []
      },
      "invoice_tax_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount, in cents (or local equivalent), of the tax.",
            "type": "integer"
          },
          "inclusive": {
            "description": "Whether this tax amount is inclusive or exclusive.",
            "type": "boolean"
          },
          "tax_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/tax_rate"
              }
            ],
            "description": "The tax rate that was applied to get this tax amount.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/tax_rate"
                }
              ]
            }
          },
          "taxability_reason": {
            "description": "The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.",
            "enum": [
              "customer_exempt",
              "not_collecting",
              "not_subject_to_tax",
              "not_supported",
              "portion_product_exempt",
              "portion_reduced_rated",
              "portion_standard_rated",
              "product_exempt",
              "product_exempt_holiday",
              "proportionally_rated",
              "reduced_rated",
              "reverse_charge",
              "standard_rated",
              "taxable_basis_reduced",
              "zero_rated"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "taxable_amount": {
            "description": "The amount on which tax is calculated, in cents (or local equivalent).",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "inclusive",
          "tax_rate"
        ],
        "title": "InvoiceTaxAmount",
        "type": "object",
        "x-expandableFields": [
          "tax_rate"
        ]
      },
      "invoice_threshold_reason": {
        "description": "",
        "properties": {
          "amount_gte": {
            "description": "The total invoice amount threshold boundary if it triggered the threshold invoice.",
            "nullable": true,
            "type": "integer"
          },
          "item_reasons": {
            "description": "Indicates which line items triggered a threshold invoice.",
            "items": {
              "$ref": "#/components/schemas/invoice_item_threshold_reason"
            },
            "type": "array"
          }
        },
        "required": [
          "item_reasons"
        ],
        "title": "InvoiceThresholdReason",
        "type": "object",
        "x-expandableFields": [
          "item_reasons"
        ]
      },
      "invoice_transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount in cents (or local equivalent) that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.",
            "nullable": true,
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account where funds from the payment will be transferred to upon payment success.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "destination"
        ],
        "title": "InvoiceTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ]
      },
      "invoices_from_invoice": {
        "description": "",
        "properties": {
          "action": {
            "description": "The relation between this invoice and the cloned invoice",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The invoice that was cloned.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          }
        },
        "required": [
          "action",
          "invoice"
        ],
        "title": "InvoicesFromInvoice",
        "type": "object",
        "x-expandableFields": [
          "invoice"
        ]
      },
      "invoices_invoice_rendering": {
        "description": "",
        "properties": {
          "amount_tax_display": {
            "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "pdf": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_rendering_pdf"
              }
            ],
            "description": "Invoice pdf rendering options",
            "nullable": true
          }
        },
        "title": "InvoicesInvoiceRendering",
        "type": "object",
        "x-expandableFields": [
          "pdf"
        ]
      },
      "invoices_payment_method_options": {
        "description": "",
        "properties": {
          "acss_debit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_acss_debit"
              }
            ],
            "description": "If paying by `acss_debit`, this sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "bancontact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_bancontact"
              }
            ],
            "description": "If paying by `bancontact`, this sub-hash contains details about the Bancontact payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "card": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_card"
              }
            ],
            "description": "If paying by `card`, this sub-hash contains details about the Card payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "customer_balance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_customer_balance"
              }
            ],
            "description": "If paying by `customer_balance`, this sub-hash contains details about the Bank transfer payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "konbini": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_konbini"
              }
            ],
            "description": "If paying by `konbini`, this sub-hash contains details about the Konbini payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "us_bank_account": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_us_bank_account"
              }
            ],
            "description": "If paying by `us_bank_account`, this sub-hash contains details about the ACH direct debit payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          }
        },
        "title": "InvoicesPaymentMethodOptions",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "bancontact",
          "card",
          "customer_balance",
          "konbini",
          "us_bank_account"
        ]
      },
      "invoices_payment_settings": {
        "description": "",
        "properties": {
          "default_mandate": {
            "description": "ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the invoice's default_payment_method or default_source, if set.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_method_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_payment_method_options"
              }
            ],
            "description": "Payment-method-specific configuration to provide to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "payment_method_types": {
            "description": "The list of payment method types (e.g. card) to provide to the invoice’s PaymentIntent. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).",
            "items": {
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "boleto",
                "card",
                "cashapp",
                "customer_balance",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "konbini",
                "link",
                "paynow",
                "paypal",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "InvoicesPaymentSettings",
        "type": "object",
        "x-expandableFields": [
          "payment_method_options"
        ]
      },
      "invoices_resource_invoice_tax_id": {
        "description": "",
        "properties": {
          "type": {
            "description": "The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eu_oss_vat`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, or `unknown`",
            "enum": [
              "ad_nrt",
              "ae_trn",
              "ar_cuit",
              "au_abn",
              "au_arn",
              "bg_uic",
              "bo_tin",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_vat",
              "cl_tin",
              "cn_tin",
              "co_nit",
              "cr_tin",
              "do_rcn",
              "ec_ruc",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "no_vat",
              "nz_gst",
              "pe_ruc",
              "ph_tin",
              "ro_tin",
              "rs_pib",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "sv_nit",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "unknown",
              "us_ein",
              "uy_ruc",
              "ve_rif",
              "vn_tin",
              "za_vat"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the tax ID.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "InvoicesResourceInvoiceTaxID",
        "type": "object",
        "x-expandableFields": []
      },
      "invoices_shipping_cost": {
        "description": "",
        "properties": {
          "amount_subtotal": {
            "description": "Total shipping cost before any taxes are applied.",
            "type": "integer"
          },
          "amount_tax": {
            "description": "Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total shipping cost after taxes are applied.",
            "type": "integer"
          },
          "shipping_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/shipping_rate"
              }
            ],
            "description": "The ID of the ShippingRate for this invoice.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/shipping_rate"
                }
              ]
            }
          },
          "taxes": {
            "description": "The taxes applied to the shipping rate.",
            "items": {
              "$ref": "#/components/schemas/line_items_tax_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "amount_subtotal",
          "amount_tax",
          "amount_total"
        ],
        "title": "InvoicesShippingCost",
        "type": "object",
        "x-expandableFields": [
          "shipping_rate",
          "taxes"
        ]
      },
      "invoices_status_transitions": {
        "description": "",
        "properties": {
          "finalized_at": {
            "description": "The time that the invoice draft was finalized.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "marked_uncollectible_at": {
            "description": "The time that the invoice was marked uncollectible.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "paid_at": {
            "description": "The time that the invoice was paid.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "voided_at": {
            "description": "The time that the invoice was voided.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "InvoicesStatusTransitions",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing.authorization": {
        "description": "When an [issued card](https://stripe.com/docs/issuing) is used to make a purchase, an Issuing `Authorization`\nobject is created. [Authorizations](https://stripe.com/docs/issuing/purchases/authorizations) must be approved for the\npurchase to be completed successfully.\n\nRelated guide: [Issued card authorizations](https://stripe.com/docs/issuing/purchases/authorizations)",
        "properties": {
          "amount": {
            "description": "The total amount that was authorized or rejected. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "amount_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_amount_details"
              }
            ],
            "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "nullable": true
          },
          "approved": {
            "description": "Whether the authorization has been approved.",
            "type": "boolean"
          },
          "authorization_method": {
            "description": "How the card details were provided.",
            "enum": [
              "chip",
              "contactless",
              "keyed_in",
              "online",
              "swipe"
            ],
            "type": "string"
          },
          "balance_transactions": {
            "description": "List of balance transactions associated with this authorization.",
            "items": {
              "$ref": "#/components/schemas/balance_transaction"
            },
            "type": "array"
          },
          "card": {
            "$ref": "#/components/schemas/issuing.card"
          },
          "cardholder": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.cardholder"
              }
            ],
            "description": "The cardholder to whom this authorization belongs.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.cardholder"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "merchant_amount": {
            "description": "The total amount that was authorized or rejected. This amount is in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "merchant_currency": {
            "description": "The currency that was presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "merchant_data": {
            "$ref": "#/components/schemas/issuing_authorization_merchant_data"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "network_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_network_data"
              }
            ],
            "description": "Details about the authorization, such as identifiers, set by the card network.",
            "nullable": true
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.authorization"
            ],
            "type": "string"
          },
          "pending_request": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_pending_request"
              }
            ],
            "description": "The pending authorization request. This field will only be non-null during an `issuing_authorization.request` webhook.",
            "nullable": true
          },
          "request_history": {
            "description": "History of every time a `pending_request` authorization was approved/declined, either by you directly or by Stripe (e.g. based on your spending_controls). If the merchant changes the authorization by performing an incremental authorization, you can look at this field to see the previous requests for the authorization. This field can be helpful in determining why a given authorization was approved/declined.",
            "items": {
              "$ref": "#/components/schemas/issuing_authorization_request"
            },
            "type": "array"
          },
          "status": {
            "description": "The current status of the authorization in its lifecycle.",
            "enum": [
              "closed",
              "pending",
              "reversed"
            ],
            "type": "string"
          },
          "token": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.token"
              }
            ],
            "description": "[Token](https://stripe.com/docs/api/issuing/tokens/object) object used for this authorization. If a network token was not used for this authorization, this field will be null.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.token"
                }
              ]
            }
          },
          "transactions": {
            "description": "List of [transactions](https://stripe.com/docs/api/issuing/transactions) associated with this authorization.",
            "items": {
              "$ref": "#/components/schemas/issuing.transaction"
            },
            "type": "array"
          },
          "treasury": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_treasury"
              }
            ],
            "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this authorization if it was created on a [FinancialAccount](https://stripe.com/docs/api/treasury/financial_accounts).",
            "nullable": true
          },
          "verification_data": {
            "$ref": "#/components/schemas/issuing_authorization_verification_data"
          },
          "wallet": {
            "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`. Will populate as `null` when no digital wallet was utilized.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "approved",
          "authorization_method",
          "balance_transactions",
          "card",
          "created",
          "currency",
          "id",
          "livemode",
          "merchant_amount",
          "merchant_currency",
          "merchant_data",
          "metadata",
          "object",
          "request_history",
          "status",
          "transactions",
          "verification_data"
        ],
        "title": "IssuingAuthorization",
        "type": "object",
        "x-expandableFields": [
          "amount_details",
          "balance_transactions",
          "card",
          "cardholder",
          "merchant_data",
          "network_data",
          "pending_request",
          "request_history",
          "token",
          "transactions",
          "treasury",
          "verification_data"
        ],
        "x-resourceId": "issuing.authorization"
      },
      "issuing.card": {
        "description": "You can [create physical or virtual cards](https://stripe.com/docs/issuing/cards) that are issued to cardholders.",
        "properties": {
          "brand": {
            "description": "The brand of the card.",
            "maxLength": 5000,
            "type": "string"
          },
          "cancellation_reason": {
            "description": "The reason why the card was canceled.",
            "enum": [
              "design_rejected",
              "lost",
              "stolen"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "cardholder": {
            "$ref": "#/components/schemas/issuing.cardholder"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Supported currencies are `usd` in the US, `eur` in the EU, and `gbp` in the UK.",
            "type": "string"
          },
          "cvc": {
            "description": "The card's CVC. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
            "maxLength": 5000,
            "type": "string"
          },
          "exp_month": {
            "description": "The expiration month of the card.",
            "type": "integer"
          },
          "exp_year": {
            "description": "The expiration year of the card.",
            "type": "integer"
          },
          "financial_account": {
            "description": "The financial account this card is attached to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last 4 digits of the card number.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "number": {
            "description": "The full unredacted card number. For security reasons, this is only available for virtual cards, and will be omitted unless you explicitly request it with [the `expand` parameter](https://stripe.com/docs/api/expanding_objects). Additionally, it's only available via the [\"Retrieve a card\" endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via \"List all cards\" or any other endpoint.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.card"
            ],
            "type": "string"
          },
          "replaced_by": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.card"
              }
            ],
            "description": "The latest card that replaces this card, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ]
            }
          },
          "replacement_for": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.card"
              }
            ],
            "description": "The card this card replaces, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ]
            }
          },
          "replacement_reason": {
            "description": "The reason why the previous card needed to be replaced.",
            "enum": [
              "damaged",
              "expired",
              "lost",
              "stolen"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_card_shipping"
              }
            ],
            "description": "Where and how the card will be shipped.",
            "nullable": true
          },
          "spending_controls": {
            "$ref": "#/components/schemas/issuing_card_authorization_controls"
          },
          "status": {
            "description": "Whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`.",
            "enum": [
              "active",
              "canceled",
              "inactive"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": {
            "description": "The type of the card.",
            "enum": [
              "physical",
              "virtual"
            ],
            "type": "string"
          },
          "wallets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_card_wallets"
              }
            ],
            "description": "Information relating to digital wallets (like Apple Pay and Google Pay).",
            "nullable": true
          }
        },
        "required": [
          "brand",
          "cardholder",
          "created",
          "currency",
          "exp_month",
          "exp_year",
          "id",
          "last4",
          "livemode",
          "metadata",
          "object",
          "spending_controls",
          "status",
          "type"
        ],
        "title": "IssuingCard",
        "type": "object",
        "x-expandableFields": [
          "cardholder",
          "replaced_by",
          "replacement_for",
          "shipping",
          "spending_controls",
          "wallets"
        ],
        "x-resourceId": "issuing.card"
      },
      "issuing.cardholder": {
        "description": "An Issuing `Cardholder` object represents an individual or business entity who is [issued](https://stripe.com/docs/issuing) cards.\n\nRelated guide: [How to create a cardholder](https://stripe.com/docs/issuing/cards#create-cardholder)",
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/issuing_cardholder_address"
          },
          "company": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_company"
              }
            ],
            "description": "Additional information about a `company` cardholder.",
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "email": {
            "description": "The cardholder's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "individual": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_individual"
              }
            ],
            "description": "Additional information about an `individual` cardholder.",
            "nullable": true
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "name": {
            "description": "The cardholder's name. This will be printed on cards issued to them.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.cardholder"
            ],
            "type": "string"
          },
          "phone_number": {
            "description": "The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_locales": {
            "description": "The cardholder’s preferred locales (languages), ordered by preference. Locales can be `de`, `en`, `es`, `fr`, or `it`.\n This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.",
            "items": {
              "enum": [
                "de",
                "en",
                "es",
                "fr",
                "it"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "requirements": {
            "$ref": "#/components/schemas/issuing_cardholder_requirements"
          },
          "spending_controls": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_authorization_controls"
              }
            ],
            "description": "Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.",
            "nullable": true
          },
          "status": {
            "description": "Specifies whether to permit authorizations on this cardholder's cards.",
            "enum": [
              "active",
              "blocked",
              "inactive"
            ],
            "type": "string"
          },
          "type": {
            "description": "One of `individual` or `company`. See [Choose a cardholder type](https://stripe.com/docs/issuing/other/choose-cardholder) for more details.",
            "enum": [
              "company",
              "individual"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "billing",
          "created",
          "id",
          "livemode",
          "metadata",
          "name",
          "object",
          "requirements",
          "status",
          "type"
        ],
        "title": "IssuingCardholder",
        "type": "object",
        "x-expandableFields": [
          "billing",
          "company",
          "individual",
          "requirements",
          "spending_controls"
        ],
        "x-resourceId": "issuing.cardholder"
      },
      "issuing.dispute": {
        "description": "As a [card issuer](https://stripe.com/docs/issuing), you can dispute transactions that the cardholder does not recognize, suspects to be fraudulent, or has other issues with.\n\nRelated guide: [Issuing disputes](https://stripe.com/docs/issuing/purchases/disputes)",
        "properties": {
          "amount": {
            "description": "Disputed amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Usually the amount of the `transaction`, but can differ (usually because of currency fluctuation).",
            "type": "integer"
          },
          "balance_transactions": {
            "description": "List of balance transactions associated with the dispute.",
            "items": {
              "$ref": "#/components/schemas/balance_transaction"
            },
            "nullable": true,
            "type": "array"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "The currency the `transaction` was made in.",
            "type": "string"
          },
          "evidence": {
            "$ref": "#/components/schemas/issuing_dispute_evidence"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.dispute"
            ],
            "type": "string"
          },
          "status": {
            "description": "Current status of the dispute.",
            "enum": [
              "expired",
              "lost",
              "submitted",
              "unsubmitted",
              "won"
            ],
            "type": "string"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.transaction"
              }
            ],
            "description": "The transaction being disputed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.transaction"
                }
              ]
            }
          },
          "treasury": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_dispute_treasury"
              }
            ],
            "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this dispute if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts",
            "nullable": true
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "evidence",
          "id",
          "livemode",
          "metadata",
          "object",
          "status",
          "transaction"
        ],
        "title": "IssuingDispute",
        "type": "object",
        "x-expandableFields": [
          "balance_transactions",
          "evidence",
          "transaction",
          "treasury"
        ],
        "x-resourceId": "issuing.dispute"
      },
      "issuing.settlement": {
        "description": "When a non-stripe BIN is used, any use of an [issued card](https://stripe.com/docs/issuing) must be settled directly with the card network. The net amount owed is represented by an Issuing `Settlement` object.",
        "properties": {
          "bin": {
            "description": "The Bank Identification Number reflecting this settlement record.",
            "maxLength": 5000,
            "type": "string"
          },
          "clearing_date": {
            "description": "The date that the transactions are cleared and posted to user's accounts.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "interchange_fees": {
            "description": "The total interchange received as reimbursement for the transactions.",
            "type": "integer"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "net_total": {
            "description": "The total net amount required to settle with the network.",
            "type": "integer"
          },
          "network": {
            "description": "The card network for this settlement report. One of [\"visa\"]",
            "enum": [
              "visa"
            ],
            "type": "string"
          },
          "network_fees": {
            "description": "The total amount of fees owed to the network.",
            "type": "integer"
          },
          "network_settlement_identifier": {
            "description": "The Settlement Identification Number assigned by the network.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.settlement"
            ],
            "type": "string"
          },
          "settlement_service": {
            "description": "One of `international` or `uk_national_net`.",
            "maxLength": 5000,
            "type": "string"
          },
          "transaction_count": {
            "description": "The total number of transactions reflected in this settlement.",
            "type": "integer"
          },
          "transaction_volume": {
            "description": "The total transaction amount reflected in this settlement.",
            "type": "integer"
          }
        },
        "required": [
          "bin",
          "clearing_date",
          "created",
          "currency",
          "id",
          "interchange_fees",
          "livemode",
          "metadata",
          "net_total",
          "network",
          "network_fees",
          "network_settlement_identifier",
          "object",
          "settlement_service",
          "transaction_count",
          "transaction_volume"
        ],
        "title": "IssuingSettlement",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "issuing.settlement"
      },
      "issuing.token": {
        "description": "An issuing token object is created when an issued card is added to a digital wallet. As a [card issuer](https://stripe.com/docs/issuing), you can [view and manage these tokens](https://stripe.com/docs/issuing/controls/token-management) through Stripe.",
        "properties": {
          "card": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.card"
              }
            ],
            "description": "Card associated with this token.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "device_fingerprint": {
            "description": "The hashed ID derived from the device ID from the card network associated with the token",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the token.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "network": {
            "description": "The token service provider / card network associated with the token.",
            "enum": [
              "mastercard",
              "visa"
            ],
            "type": "string"
          },
          "network_data": {
            "$ref": "#/components/schemas/issuing_network_token_network_data"
          },
          "network_updated_at": {
            "description": "Time at which the token was last updated by the card network. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.token"
            ],
            "type": "string"
          },
          "status": {
            "description": "The usage state of the token.",
            "enum": [
              "active",
              "deleted",
              "requested",
              "suspended"
            ],
            "type": "string"
          },
          "wallet_provider": {
            "description": "The digital wallet for this token, if one was used.",
            "enum": [
              "apple_pay",
              "google_pay",
              "samsung_pay"
            ],
            "type": "string"
          }
        },
        "required": [
          "card",
          "created",
          "id",
          "livemode",
          "network",
          "network_updated_at",
          "object",
          "status"
        ],
        "title": "IssuingNetworkToken",
        "type": "object",
        "x-expandableFields": [
          "card",
          "network_data"
        ],
        "x-resourceId": "issuing.token"
      },
      "issuing.transaction": {
        "description": "Any use of an [issued card](https://stripe.com/docs/issuing) that results in funds entering or leaving\nyour Stripe account, such as a completed purchase or refund, is represented by an Issuing\n`Transaction` object.\n\nRelated guide: [Issued card transactions](https://stripe.com/docs/issuing/purchases/transactions)",
        "properties": {
          "amount": {
            "description": "The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "amount_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_transaction_amount_details"
              }
            ],
            "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "nullable": true
          },
          "authorization": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.authorization"
              }
            ],
            "description": "The `Authorization` object that led to this transaction.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.authorization"
                }
              ]
            }
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the [balance transaction](https://stripe.com/docs/api/balance_transactions) associated with this transaction.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "card": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.card"
              }
            ],
            "description": "The card used to make this transaction.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.card"
                }
              ]
            }
          },
          "cardholder": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.cardholder"
              }
            ],
            "description": "The cardholder to whom this transaction belongs.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.cardholder"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "dispute": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.dispute"
              }
            ],
            "description": "If you've disputed the transaction, the ID of the dispute.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.dispute"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "merchant_amount": {
            "description": "The amount that the merchant will receive, denominated in `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). It will be different from `amount` if the merchant is taking payment in a different currency.",
            "type": "integer"
          },
          "merchant_currency": {
            "description": "The currency with which the merchant is taking payment.",
            "type": "string"
          },
          "merchant_data": {
            "$ref": "#/components/schemas/issuing_authorization_merchant_data"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "issuing.transaction"
            ],
            "type": "string"
          },
          "purchase_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_transaction_purchase_details"
              }
            ],
            "description": "Additional purchase information that is optionally provided by the merchant.",
            "nullable": true
          },
          "token": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/issuing.token"
              }
            ],
            "description": "[Token](https://stripe.com/docs/api/issuing/tokens/object) object used for this transaction. If a network token was not used for this transaction, this field will be null.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/issuing.token"
                }
              ]
            }
          },
          "treasury": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_transaction_treasury"
              }
            ],
            "description": "[Treasury](https://stripe.com/docs/api/treasury) details related to this transaction if it was created on a [FinancialAccount](/docs/api/treasury/financial_accounts",
            "nullable": true
          },
          "type": {
            "description": "The nature of the transaction.",
            "enum": [
              "capture",
              "refund"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "wallet": {
            "description": "The digital wallet used for this transaction. One of `apple_pay`, `google_pay`, or `samsung_pay`.",
            "enum": [
              "apple_pay",
              "google_pay",
              "samsung_pay"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "card",
          "created",
          "currency",
          "id",
          "livemode",
          "merchant_amount",
          "merchant_currency",
          "merchant_data",
          "metadata",
          "object",
          "type"
        ],
        "title": "IssuingTransaction",
        "type": "object",
        "x-expandableFields": [
          "amount_details",
          "authorization",
          "balance_transaction",
          "card",
          "cardholder",
          "dispute",
          "merchant_data",
          "purchase_details",
          "token",
          "treasury"
        ],
        "x-resourceId": "issuing.transaction"
      },
      "issuing_authorization_amount_details": {
        "description": "",
        "properties": {
          "atm_fee": {
            "description": "The fee charged by the ATM for the cash withdrawal.",
            "nullable": true,
            "type": "integer"
          },
          "cashback_amount": {
            "description": "The amount of cash requested by the cardholder.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "IssuingAuthorizationAmountDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_authorization_authentication_exemption": {
        "description": "",
        "properties": {
          "claimed_by": {
            "description": "The entity that requested the exemption, either the acquiring merchant or the Issuing user.",
            "enum": [
              "acquirer",
              "issuer"
            ],
            "type": "string"
          },
          "type": {
            "description": "The specific exemption claimed for this authorization.",
            "enum": [
              "low_value_transaction",
              "transaction_risk_analysis"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "claimed_by",
          "type"
        ],
        "title": "IssuingAuthorizationAuthenticationExemption",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_authorization_merchant_data": {
        "description": "",
        "properties": {
          "category": {
            "description": "A categorization of the seller's type of business. See our [merchant categories guide](https://stripe.com/docs/issuing/merchant-categories) for a list of possible values.",
            "maxLength": 5000,
            "type": "string"
          },
          "category_code": {
            "description": "The merchant category code for the seller’s business",
            "maxLength": 5000,
            "type": "string"
          },
          "city": {
            "description": "City where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Country where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the seller",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network_id": {
            "description": "Identifier assigned to the seller by the card network. Different card networks may assign different network_id fields to the same merchant.",
            "maxLength": 5000,
            "type": "string"
          },
          "postal_code": {
            "description": "Postal code where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State where the seller is located",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "terminal_id": {
            "description": "An ID assigned by the seller to the location of the sale.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "URL provided by the merchant on a 3DS request",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "category",
          "category_code",
          "network_id"
        ],
        "title": "IssuingAuthorizationMerchantData",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_authorization_network_data": {
        "description": "",
        "properties": {
          "acquiring_institution_id": {
            "description": "Identifier assigned to the acquirer by the card network. Sometimes this value is not provided by the network; in this case, the value will be `null`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingAuthorizationNetworkData",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_authorization_pending_request": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The additional amount Stripe will hold if the authorization is approved, in the card's [currency](https://stripe.com/docs/api#issuing_authorization_object-pending-request-currency) and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "amount_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_amount_details"
              }
            ],
            "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "nullable": true
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "is_amount_controllable": {
            "description": "If set `true`, you may provide [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount) to control how much to hold for the authorization.",
            "type": "boolean"
          },
          "merchant_amount": {
            "description": "The amount the merchant is requesting to be authorized in the `merchant_currency`. The amount is in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "merchant_currency": {
            "description": "The local currency the merchant is requesting to authorize.",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "is_amount_controllable",
          "merchant_amount",
          "merchant_currency"
        ],
        "title": "IssuingAuthorizationPendingRequest",
        "type": "object",
        "x-expandableFields": [
          "amount_details"
        ]
      },
      "issuing_authorization_request": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The `pending_request.amount` at the time of the request, presented in your card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Stripe held this amount from your account to fund the authorization if the request was approved.",
            "type": "integer"
          },
          "amount_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_amount_details"
              }
            ],
            "description": "Detailed breakdown of amount components. These amounts are denominated in `currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "nullable": true
          },
          "approved": {
            "description": "Whether this request was approved.",
            "type": "boolean"
          },
          "authorization_code": {
            "description": "A code created by Stripe which is shared with the merchant to validate the authorization. This field will be populated if the authorization message was approved. The code typically starts with the letter \"S\", followed by a six-digit number. For example, \"S498162\". Please note that the code is not guaranteed to be unique across authorizations.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "type": "string"
          },
          "merchant_amount": {
            "description": "The `pending_request.merchant_amount` at the time of the request, presented in the `merchant_currency` and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "merchant_currency": {
            "description": "The currency that was collected by the merchant and presented to the cardholder for the authorization. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "type": "string"
          },
          "reason": {
            "description": "When an authorization is approved or declined by you or by Stripe, this field provides additional detail on the reason for the outcome.",
            "enum": [
              "account_disabled",
              "card_active",
              "card_inactive",
              "cardholder_inactive",
              "cardholder_verification_required",
              "insufficient_funds",
              "not_allowed",
              "spending_controls",
              "suspected_fraud",
              "verification_failed",
              "webhook_approved",
              "webhook_declined",
              "webhook_error",
              "webhook_timeout"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "reason_message": {
            "description": "If approve/decline decision is directly responsed to the webhook with json payload and if the response is invalid (e.g., parsing errors), we surface the detailed message via this field.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "approved",
          "created",
          "currency",
          "merchant_amount",
          "merchant_currency",
          "reason"
        ],
        "title": "IssuingAuthorizationRequest",
        "type": "object",
        "x-expandableFields": [
          "amount_details"
        ]
      },
      "issuing_authorization_treasury": {
        "description": "",
        "properties": {
          "received_credits": {
            "description": "The array of [ReceivedCredits](https://stripe.com/docs/api/treasury/received_credits) associated with this authorization",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "received_debits": {
            "description": "The array of [ReceivedDebits](https://stripe.com/docs/api/treasury/received_debits) associated with this authorization",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "transaction": {
            "description": "The Treasury [Transaction](https://stripe.com/docs/api/treasury/transactions) associated with this authorization",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "received_credits",
          "received_debits"
        ],
        "title": "IssuingAuthorizationTreasury",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_authorization_verification_data": {
        "description": "",
        "properties": {
          "address_line1_check": {
            "description": "Whether the cardholder provided an address first line and if it matched the cardholder’s `billing.address.line1`.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "Whether the cardholder provided a postal code and if it matched the cardholder’s `billing.address.postal_code`.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          },
          "authentication_exemption": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_authentication_exemption"
              }
            ],
            "description": "The exemption applied to this authorization.",
            "nullable": true
          },
          "cvc_check": {
            "description": "Whether the cardholder provided a CVC and if it matched Stripe’s record.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          },
          "expiry_check": {
            "description": "Whether the cardholder provided an expiry date and if it matched Stripe’s record.",
            "enum": [
              "match",
              "mismatch",
              "not_provided"
            ],
            "type": "string"
          },
          "postal_code": {
            "description": "The postal code submitted as part of the authorization used for postal code verification.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "three_d_secure": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_authorization_three_d_secure"
              }
            ],
            "description": "3D Secure details.",
            "nullable": true
          }
        },
        "required": [
          "address_line1_check",
          "address_postal_code_check",
          "cvc_check",
          "expiry_check"
        ],
        "title": "IssuingAuthorizationVerificationData",
        "type": "object",
        "x-expandableFields": [
          "authentication_exemption",
          "three_d_secure"
        ]
      },
      "issuing_authorization_three_d_secure": {
        "description": "",
        "properties": {
          "result": {
            "description": "The outcome of the 3D Secure authentication request.",
            "enum": [
              "attempt_acknowledged",
              "authenticated",
              "failed",
              "required"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "result"
        ],
        "title": "IssuingAuthorizationThreeDSecure",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_card_shipping": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "carrier": {
            "description": "The delivery company that shipped a card.",
            "enum": [
              "dhl",
              "fedex",
              "royal_mail",
              "usps"
            ],
            "nullable": true,
            "type": "string"
          },
          "customs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_card_shipping_customs"
              }
            ],
            "description": "Additional information that may be required for clearing customs.",
            "nullable": true
          },
          "eta": {
            "description": "A unix timestamp representing a best estimate of when the card will be delivered.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Recipient name.",
            "maxLength": 5000,
            "type": "string"
          },
          "phone_number": {
            "description": "The phone number of the receiver of the shipment. Our courier partners will use this number to contact you in the event of card delivery issues. For individual shipments to the EU/UK, if this field is empty, we will provide them with the phone number provided when the cardholder was initially created.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "require_signature": {
            "description": "Whether a signature is required for card delivery. This feature is only supported for US users. Standard shipping service does not support signature on delivery. The default value for standard shipping service is false and for express and priority services is true.",
            "nullable": true,
            "type": "boolean"
          },
          "service": {
            "description": "Shipment service, such as `standard` or `express`.",
            "enum": [
              "express",
              "priority",
              "standard"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "status": {
            "description": "The delivery status of the card.",
            "enum": [
              "canceled",
              "delivered",
              "failure",
              "pending",
              "returned",
              "shipped"
            ],
            "nullable": true,
            "type": "string"
          },
          "tracking_number": {
            "description": "A tracking number for a card shipment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tracking_url": {
            "description": "A link to the shipping carrier's site where you can view detailed information about a card shipment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Packaging options.",
            "enum": [
              "bulk",
              "individual"
            ],
            "type": "string"
          }
        },
        "required": [
          "address",
          "name",
          "service",
          "type"
        ],
        "title": "IssuingCardShipping",
        "type": "object",
        "x-expandableFields": [
          "address",
          "customs"
        ]
      },
      "issuing_card_shipping_customs": {
        "description": "",
        "properties": {
          "eori_number": {
            "description": "A registration number used for customs in Europe. See [https://www.gov.uk/eori](https://www.gov.uk/eori) for the UK and [https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en](https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en) for the EU.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingCardShippingCustoms",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_card_apple_pay": {
        "description": "",
        "properties": {
          "eligible": {
            "description": "Apple Pay Eligibility",
            "type": "boolean"
          },
          "ineligible_reason": {
            "description": "Reason the card is ineligible for Apple Pay",
            "enum": [
              "missing_agreement",
              "missing_cardholder_contact",
              "unsupported_region"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "eligible"
        ],
        "title": "IssuingCardApplePay",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_card_google_pay": {
        "description": "",
        "properties": {
          "eligible": {
            "description": "Google Pay Eligibility",
            "type": "boolean"
          },
          "ineligible_reason": {
            "description": "Reason the card is ineligible for Google Pay",
            "enum": [
              "missing_agreement",
              "missing_cardholder_contact",
              "unsupported_region"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "eligible"
        ],
        "title": "IssuingCardGooglePay",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_cardholder_spending_limit": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electric_vehicle_charging",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "emergency_services_gcas_visa_use_only",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_licensed_horse_dog_racing_us_region_only",
                "government_licensed_online_casions_online_gambling_us_region_only",
                "government_owned_lotteries_non_us_region",
                "government_owned_lotteries_us_region_only",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "marketplaces",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "interval": {
            "description": "Interval (or event) to which the amount applies.",
            "enum": [
              "all_time",
              "daily",
              "monthly",
              "per_authorization",
              "weekly",
              "yearly"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "interval"
        ],
        "title": "IssuingCardholderSpendingLimit",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_cardholder_card_issuing": {
        "description": "",
        "properties": {
          "user_terms_acceptance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_user_terms_acceptance"
              }
            ],
            "description": "Information about cardholder acceptance of [Authorized User Terms](https://stripe.com/docs/issuing/cards).",
            "nullable": true
          }
        },
        "title": "IssuingCardholderCardIssuing",
        "type": "object",
        "x-expandableFields": [
          "user_terms_acceptance"
        ]
      },
      "issuing_cardholder_individual_dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "IssuingCardholderIndividualDOB",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_cardholder_verification": {
        "description": "",
        "properties": {
          "document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_id_document"
              }
            ],
            "description": "An identifying document, either a passport or local ID card.",
            "nullable": true
          }
        },
        "title": "IssuingCardholderVerification",
        "type": "object",
        "x-expandableFields": [
          "document"
        ]
      },
      "issuing_card_authorization_controls": {
        "description": "",
        "properties": {
          "allowed_categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electric_vehicle_charging",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "emergency_services_gcas_visa_use_only",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_licensed_horse_dog_racing_us_region_only",
                "government_licensed_online_casions_online_gambling_us_region_only",
                "government_owned_lotteries_non_us_region",
                "government_owned_lotteries_us_region_only",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "marketplaces",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "blocked_categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electric_vehicle_charging",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "emergency_services_gcas_visa_use_only",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_licensed_horse_dog_racing_us_region_only",
                "government_licensed_online_casions_online_gambling_us_region_only",
                "government_owned_lotteries_non_us_region",
                "government_owned_lotteries_us_region_only",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "marketplaces",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "spending_limits": {
            "description": "Limit spending with amount-based rules that apply across any cards this card replaced (i.e., its `replacement_for` card and _that_ card's `replacement_for` card, up the chain).",
            "items": {
              "$ref": "#/components/schemas/issuing_card_spending_limit"
            },
            "nullable": true,
            "type": "array"
          },
          "spending_limits_currency": {
            "description": "Currency of the amounts within `spending_limits`. Always the same as the currency of the card.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingCardAuthorizationControls",
        "type": "object",
        "x-expandableFields": [
          "spending_limits"
        ]
      },
      "issuing_card_wallets": {
        "description": "",
        "properties": {
          "apple_pay": {
            "$ref": "#/components/schemas/issuing_card_apple_pay"
          },
          "google_pay": {
            "$ref": "#/components/schemas/issuing_card_google_pay"
          },
          "primary_account_identifier": {
            "description": "Unique identifier for a card used with digital wallets",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "apple_pay",
          "google_pay"
        ],
        "title": "IssuingCardWallets",
        "type": "object",
        "x-expandableFields": [
          "apple_pay",
          "google_pay"
        ]
      },
      "issuing_cardholder_address": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          }
        },
        "required": [
          "address"
        ],
        "title": "IssuingCardholderAddress",
        "type": "object",
        "x-expandableFields": [
          "address"
        ]
      },
      "issuing_cardholder_authorization_controls": {
        "description": "",
        "properties": {
          "allowed_categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to allow. All other categories will be blocked. Cannot be set with `blocked_categories`.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electric_vehicle_charging",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "emergency_services_gcas_visa_use_only",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_licensed_horse_dog_racing_us_region_only",
                "government_licensed_online_casions_online_gambling_us_region_only",
                "government_owned_lotteries_non_us_region",
                "government_owned_lotteries_us_region_only",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "marketplaces",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "blocked_categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) of authorizations to decline. All other categories will be allowed. Cannot be set with `allowed_categories`.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electric_vehicle_charging",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "emergency_services_gcas_visa_use_only",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_licensed_horse_dog_racing_us_region_only",
                "government_licensed_online_casions_online_gambling_us_region_only",
                "government_owned_lotteries_non_us_region",
                "government_owned_lotteries_us_region_only",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "marketplaces",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "spending_limits": {
            "description": "Limit spending with amount-based rules that apply across this cardholder's cards.",
            "items": {
              "$ref": "#/components/schemas/issuing_cardholder_spending_limit"
            },
            "nullable": true,
            "type": "array"
          },
          "spending_limits_currency": {
            "description": "Currency of the amounts within `spending_limits`.",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingCardholderAuthorizationControls",
        "type": "object",
        "x-expandableFields": [
          "spending_limits"
        ]
      },
      "issuing_cardholder_user_terms_acceptance": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the cardholder accepted the Authorized User Terms. Required for Celtic Spend Card users.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the cardholder accepted the Authorized User Terms. Required for Celtic Spend Card users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the cardholder accepted the Authorized User Terms.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingCardholderUserTermsAcceptance",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_cardholder_id_document": {
        "description": "",
        "properties": {
          "back": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "front": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "title": "IssuingCardholderIdDocument",
        "type": "object",
        "x-expandableFields": [
          "back",
          "front"
        ]
      },
      "issuing_card_spending_limit": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Maximum amount allowed to spend per interval. This amount is in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "categories": {
            "description": "Array of strings containing [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category) this limit applies to. Omitting this field will apply the limit to all categories.",
            "items": {
              "enum": [
                "ac_refrigeration_repair",
                "accounting_bookkeeping_services",
                "advertising_services",
                "agricultural_cooperative",
                "airlines_air_carriers",
                "airports_flying_fields",
                "ambulance_services",
                "amusement_parks_carnivals",
                "antique_reproductions",
                "antique_shops",
                "aquariums",
                "architectural_surveying_services",
                "art_dealers_and_galleries",
                "artists_supply_and_craft_shops",
                "auto_and_home_supply_stores",
                "auto_body_repair_shops",
                "auto_paint_shops",
                "auto_service_shops",
                "automated_cash_disburse",
                "automated_fuel_dispensers",
                "automobile_associations",
                "automotive_parts_and_accessories_stores",
                "automotive_tire_stores",
                "bail_and_bond_payments",
                "bakeries",
                "bands_orchestras",
                "barber_and_beauty_shops",
                "betting_casino_gambling",
                "bicycle_shops",
                "billiard_pool_establishments",
                "boat_dealers",
                "boat_rentals_and_leases",
                "book_stores",
                "books_periodicals_and_newspapers",
                "bowling_alleys",
                "bus_lines",
                "business_secretarial_schools",
                "buying_shopping_services",
                "cable_satellite_and_other_pay_television_and_radio",
                "camera_and_photographic_supply_stores",
                "candy_nut_and_confectionery_stores",
                "car_and_truck_dealers_new_used",
                "car_and_truck_dealers_used_only",
                "car_rental_agencies",
                "car_washes",
                "carpentry_services",
                "carpet_upholstery_cleaning",
                "caterers",
                "charitable_and_social_service_organizations_fundraising",
                "chemicals_and_allied_products",
                "child_care_services",
                "childrens_and_infants_wear_stores",
                "chiropodists_podiatrists",
                "chiropractors",
                "cigar_stores_and_stands",
                "civic_social_fraternal_associations",
                "cleaning_and_maintenance",
                "clothing_rental",
                "colleges_universities",
                "commercial_equipment",
                "commercial_footwear",
                "commercial_photography_art_and_graphics",
                "commuter_transport_and_ferries",
                "computer_network_services",
                "computer_programming",
                "computer_repair",
                "computer_software_stores",
                "computers_peripherals_and_software",
                "concrete_work_services",
                "construction_materials",
                "consulting_public_relations",
                "correspondence_schools",
                "cosmetic_stores",
                "counseling_services",
                "country_clubs",
                "courier_services",
                "court_costs",
                "credit_reporting_agencies",
                "cruise_lines",
                "dairy_products_stores",
                "dance_hall_studios_schools",
                "dating_escort_services",
                "dentists_orthodontists",
                "department_stores",
                "detective_agencies",
                "digital_goods_applications",
                "digital_goods_games",
                "digital_goods_large_volume",
                "digital_goods_media",
                "direct_marketing_catalog_merchant",
                "direct_marketing_combination_catalog_and_retail_merchant",
                "direct_marketing_inbound_telemarketing",
                "direct_marketing_insurance_services",
                "direct_marketing_other",
                "direct_marketing_outbound_telemarketing",
                "direct_marketing_subscription",
                "direct_marketing_travel",
                "discount_stores",
                "doctors",
                "door_to_door_sales",
                "drapery_window_covering_and_upholstery_stores",
                "drinking_places",
                "drug_stores_and_pharmacies",
                "drugs_drug_proprietaries_and_druggist_sundries",
                "dry_cleaners",
                "durable_goods",
                "duty_free_stores",
                "eating_places_restaurants",
                "educational_services",
                "electric_razor_stores",
                "electric_vehicle_charging",
                "electrical_parts_and_equipment",
                "electrical_services",
                "electronics_repair_shops",
                "electronics_stores",
                "elementary_secondary_schools",
                "emergency_services_gcas_visa_use_only",
                "employment_temp_agencies",
                "equipment_rental",
                "exterminating_services",
                "family_clothing_stores",
                "fast_food_restaurants",
                "financial_institutions",
                "fines_government_administrative_entities",
                "fireplace_fireplace_screens_and_accessories_stores",
                "floor_covering_stores",
                "florists",
                "florists_supplies_nursery_stock_and_flowers",
                "freezer_and_locker_meat_provisioners",
                "fuel_dealers_non_automotive",
                "funeral_services_crematories",
                "furniture_home_furnishings_and_equipment_stores_except_appliances",
                "furniture_repair_refinishing",
                "furriers_and_fur_shops",
                "general_services",
                "gift_card_novelty_and_souvenir_shops",
                "glass_paint_and_wallpaper_stores",
                "glassware_crystal_stores",
                "golf_courses_public",
                "government_licensed_horse_dog_racing_us_region_only",
                "government_licensed_online_casions_online_gambling_us_region_only",
                "government_owned_lotteries_non_us_region",
                "government_owned_lotteries_us_region_only",
                "government_services",
                "grocery_stores_supermarkets",
                "hardware_equipment_and_supplies",
                "hardware_stores",
                "health_and_beauty_spas",
                "hearing_aids_sales_and_supplies",
                "heating_plumbing_a_c",
                "hobby_toy_and_game_shops",
                "home_supply_warehouse_stores",
                "hospitals",
                "hotels_motels_and_resorts",
                "household_appliance_stores",
                "industrial_supplies",
                "information_retrieval_services",
                "insurance_default",
                "insurance_underwriting_premiums",
                "intra_company_purchases",
                "jewelry_stores_watches_clocks_and_silverware_stores",
                "landscaping_services",
                "laundries",
                "laundry_cleaning_services",
                "legal_services_attorneys",
                "luggage_and_leather_goods_stores",
                "lumber_building_materials_stores",
                "manual_cash_disburse",
                "marinas_service_and_supplies",
                "marketplaces",
                "masonry_stonework_and_plaster",
                "massage_parlors",
                "medical_and_dental_labs",
                "medical_dental_ophthalmic_and_hospital_equipment_and_supplies",
                "medical_services",
                "membership_organizations",
                "mens_and_boys_clothing_and_accessories_stores",
                "mens_womens_clothing_stores",
                "metal_service_centers",
                "miscellaneous",
                "miscellaneous_apparel_and_accessory_shops",
                "miscellaneous_auto_dealers",
                "miscellaneous_business_services",
                "miscellaneous_food_stores",
                "miscellaneous_general_merchandise",
                "miscellaneous_general_services",
                "miscellaneous_home_furnishing_specialty_stores",
                "miscellaneous_publishing_and_printing",
                "miscellaneous_recreation_services",
                "miscellaneous_repair_shops",
                "miscellaneous_specialty_retail",
                "mobile_home_dealers",
                "motion_picture_theaters",
                "motor_freight_carriers_and_trucking",
                "motor_homes_dealers",
                "motor_vehicle_supplies_and_new_parts",
                "motorcycle_shops_and_dealers",
                "motorcycle_shops_dealers",
                "music_stores_musical_instruments_pianos_and_sheet_music",
                "news_dealers_and_newsstands",
                "non_fi_money_orders",
                "non_fi_stored_value_card_purchase_load",
                "nondurable_goods",
                "nurseries_lawn_and_garden_supply_stores",
                "nursing_personal_care",
                "office_and_commercial_furniture",
                "opticians_eyeglasses",
                "optometrists_ophthalmologist",
                "orthopedic_goods_prosthetic_devices",
                "osteopaths",
                "package_stores_beer_wine_and_liquor",
                "paints_varnishes_and_supplies",
                "parking_lots_garages",
                "passenger_railways",
                "pawn_shops",
                "pet_shops_pet_food_and_supplies",
                "petroleum_and_petroleum_products",
                "photo_developing",
                "photographic_photocopy_microfilm_equipment_and_supplies",
                "photographic_studios",
                "picture_video_production",
                "piece_goods_notions_and_other_dry_goods",
                "plumbing_heating_equipment_and_supplies",
                "political_organizations",
                "postal_services_government_only",
                "precious_stones_and_metals_watches_and_jewelry",
                "professional_services",
                "public_warehousing_and_storage",
                "quick_copy_repro_and_blueprint",
                "railroads",
                "real_estate_agents_and_managers_rentals",
                "record_stores",
                "recreational_vehicle_rentals",
                "religious_goods_stores",
                "religious_organizations",
                "roofing_siding_sheet_metal",
                "secretarial_support_services",
                "security_brokers_dealers",
                "service_stations",
                "sewing_needlework_fabric_and_piece_goods_stores",
                "shoe_repair_hat_cleaning",
                "shoe_stores",
                "small_appliance_repair",
                "snowmobile_dealers",
                "special_trade_services",
                "specialty_cleaning",
                "sporting_goods_stores",
                "sporting_recreation_camps",
                "sports_and_riding_apparel_stores",
                "sports_clubs_fields",
                "stamp_and_coin_stores",
                "stationary_office_supplies_printing_and_writing_paper",
                "stationery_stores_office_and_school_supply_stores",
                "swimming_pools_sales",
                "t_ui_travel_germany",
                "tailors_alterations",
                "tax_payments_government_agencies",
                "tax_preparation_services",
                "taxicabs_limousines",
                "telecommunication_equipment_and_telephone_sales",
                "telecommunication_services",
                "telegraph_services",
                "tent_and_awning_shops",
                "testing_laboratories",
                "theatrical_ticket_agencies",
                "timeshares",
                "tire_retreading_and_repair",
                "tolls_bridge_fees",
                "tourist_attractions_and_exhibits",
                "towing_services",
                "trailer_parks_campgrounds",
                "transportation_services",
                "travel_agencies_tour_operators",
                "truck_stop_iteration",
                "truck_utility_trailer_rentals",
                "typesetting_plate_making_and_related_services",
                "typewriter_stores",
                "u_s_federal_government_agencies_or_departments",
                "uniforms_commercial_clothing",
                "used_merchandise_and_secondhand_stores",
                "utilities",
                "variety_stores",
                "veterinary_services",
                "video_amusement_game_supplies",
                "video_game_arcades",
                "video_tape_rental_stores",
                "vocational_trade_schools",
                "watch_jewelry_repair",
                "welding_repair",
                "wholesale_clubs",
                "wig_and_toupee_stores",
                "wires_money_orders",
                "womens_accessory_and_specialty_shops",
                "womens_ready_to_wear_stores",
                "wrecking_and_salvage_yards"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "interval": {
            "description": "Interval (or event) to which the amount applies.",
            "enum": [
              "all_time",
              "daily",
              "monthly",
              "per_authorization",
              "weekly",
              "yearly"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "interval"
        ],
        "title": "IssuingCardSpendingLimit",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_cardholder_company": {
        "description": "",
        "properties": {
          "tax_id_provided": {
            "description": "Whether the company's business ID number was provided.",
            "type": "boolean"
          }
        },
        "required": [
          "tax_id_provided"
        ],
        "title": "IssuingCardholderCompany",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_cardholder_individual": {
        "description": "",
        "properties": {
          "card_issuing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_card_issuing"
              }
            ],
            "description": "Information related to the card_issuing program for this cardholder.",
            "nullable": true
          },
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_individual_dob"
              }
            ],
            "description": "The date of birth of this cardholder.",
            "nullable": true
          },
          "first_name": {
            "description": "The first name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "The last name of this cardholder. Required before activating Cards. This field cannot contain any numbers, special characters (except periods, commas, hyphens, spaces and apostrophes) or non-latin letters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_cardholder_verification"
              }
            ],
            "description": "Government-issued ID document for this cardholder.",
            "nullable": true
          }
        },
        "title": "IssuingCardholderIndividual",
        "type": "object",
        "x-expandableFields": [
          "card_issuing",
          "dob",
          "verification"
        ]
      },
      "issuing_cardholder_requirements": {
        "description": "",
        "properties": {
          "disabled_reason": {
            "description": "If `disabled_reason` is present, all cards will decline authorizations with `cardholder_verification_required` reason.",
            "enum": [
              "listed",
              "rejected.listed",
              "requirements.past_due",
              "under_review"
            ],
            "nullable": true,
            "type": "string"
          },
          "past_due": {
            "description": "Array of fields that need to be collected in order to verify and re-enable the cardholder.",
            "items": {
              "enum": [
                "company.tax_id",
                "individual.card_issuing.user_terms_acceptance.date",
                "individual.card_issuing.user_terms_acceptance.ip",
                "individual.dob.day",
                "individual.dob.month",
                "individual.dob.year",
                "individual.first_name",
                "individual.last_name",
                "individual.verification.document"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          }
        },
        "title": "IssuingCardholderRequirements",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_dispute_evidence": {
        "description": "",
        "properties": {
          "canceled": {
            "$ref": "#/components/schemas/issuing_dispute_canceled_evidence"
          },
          "duplicate": {
            "$ref": "#/components/schemas/issuing_dispute_duplicate_evidence"
          },
          "fraudulent": {
            "$ref": "#/components/schemas/issuing_dispute_fraudulent_evidence"
          },
          "merchandise_not_as_described": {
            "$ref": "#/components/schemas/issuing_dispute_merchandise_not_as_described_evidence"
          },
          "not_received": {
            "$ref": "#/components/schemas/issuing_dispute_not_received_evidence"
          },
          "other": {
            "$ref": "#/components/schemas/issuing_dispute_other_evidence"
          },
          "reason": {
            "description": "The reason for filing the dispute. Its value will match the field containing the evidence.",
            "enum": [
              "canceled",
              "duplicate",
              "fraudulent",
              "merchandise_not_as_described",
              "not_received",
              "other",
              "service_not_as_described"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "service_not_as_described": {
            "$ref": "#/components/schemas/issuing_dispute_service_not_as_described_evidence"
          }
        },
        "required": [
          "reason"
        ],
        "title": "IssuingDisputeEvidence",
        "type": "object",
        "x-expandableFields": [
          "canceled",
          "duplicate",
          "fraudulent",
          "merchandise_not_as_described",
          "not_received",
          "other",
          "service_not_as_described"
        ]
      },
      "issuing_dispute_treasury": {
        "description": "",
        "properties": {
          "debit_reversal": {
            "description": "The Treasury [DebitReversal](https://stripe.com/docs/api/treasury/debit_reversals) representing this Issuing dispute",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "received_debit": {
            "description": "The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits) that is being disputed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "received_debit"
        ],
        "title": "IssuingDisputeTreasury",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_network_token_network_data": {
        "description": "",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/issuing_network_token_device"
          },
          "mastercard": {
            "$ref": "#/components/schemas/issuing_network_token_mastercard"
          },
          "type": {
            "description": "The network that the token is associated with. An additional hash is included with a name matching this value, containing tokenization data specific to the card network.",
            "enum": [
              "mastercard",
              "visa"
            ],
            "type": "string"
          },
          "visa": {
            "$ref": "#/components/schemas/issuing_network_token_visa"
          },
          "wallet_provider": {
            "$ref": "#/components/schemas/issuing_network_token_wallet_provider"
          }
        },
        "required": [
          "type"
        ],
        "title": "IssuingNetworkTokenNetworkData",
        "type": "object",
        "x-expandableFields": [
          "device",
          "mastercard",
          "visa",
          "wallet_provider"
        ]
      },
      "issuing_transaction_amount_details": {
        "description": "",
        "properties": {
          "atm_fee": {
            "description": "The fee charged by the ATM for the cash withdrawal.",
            "nullable": true,
            "type": "integer"
          },
          "cashback_amount": {
            "description": "The amount of cash requested by the cardholder.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "IssuingTransactionAmountDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "issuing_transaction_purchase_details": {
        "description": "",
        "properties": {
          "flight": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_transaction_flight_data"
              }
            ],
            "description": "Information about the flight that was purchased with this transaction.",
            "nullable": true
          },
          "fuel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_transaction_fuel_data"
              }
            ],
            "description": "Information about fuel that was purchased with this transaction.",
            "nullable": true
          },
          "lodging": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/issuing_transaction_lodging_data"
              }
            ],
            "description": "Information about lodging that was purchased with this transaction.",
            "nullable": true
          },
          "receipt": {
            "description": "The line items in the purchase.",
            "items": {
              "$ref": "#/components/schemas/issuing_transaction_receipt_data"
            },
            "nullable": true,
            "type": "array"
          },
          "reference": {
            "description": "A merchant-specific order number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingTransactionPurchaseDetails",
        "type": "object",
        "x-expandableFields": [
          "flight",
          "fuel",
          "lodging",
          "receipt"
        ]
      },
      "issuing_transaction_treasury": {
        "description": "",
        "properties": {
          "received_credit": {
            "description": "The Treasury [ReceivedCredit](https://stripe.com/docs/api/treasury/received_credits) representing this Issuing transaction if it is a refund",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "received_debit": {
            "description": "The Treasury [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits) representing this Issuing transaction if it is a capture",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "IssuingTransactionTreasury",
        "type": "object",
        "x-expandableFields": []
      },
      "legal_entity_company": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kana variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kanji variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "directors_provided": {
            "description": "Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).",
            "type": "boolean"
          },
          "executives_provided": {
            "description": "Whether the company's executives have been provided. This Boolean will be `true` if you've manually indicated that all executives are provided via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided), or if Stripe determined that sufficient executives were provided.",
            "type": "boolean"
          },
          "export_license_id": {
            "description": "The export license ID number of the company, also referred as Import Export Code (India only).",
            "maxLength": 5000,
            "type": "string"
          },
          "export_purpose_code": {
            "description": "The purpose code to use for export transactions (India only).",
            "maxLength": 5000,
            "type": "string"
          },
          "name": {
            "description": "The company's legal name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kana": {
            "description": "The Kana variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kanji": {
            "description": "The Kanji variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "owners_provided": {
            "description": "Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that sufficient owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).",
            "type": "boolean"
          },
          "ownership_declaration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_ubo_declaration"
              }
            ],
            "description": "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.",
            "nullable": true
          },
          "phone": {
            "description": "The company's phone number (used for verification).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "structure": {
            "description": "The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.",
            "enum": [
              "free_zone_establishment",
              "free_zone_llc",
              "government_instrumentality",
              "governmental_unit",
              "incorporated_non_profit",
              "incorporated_partnership",
              "limited_liability_partnership",
              "llc",
              "multi_member_llc",
              "private_company",
              "private_corporation",
              "private_partnership",
              "public_company",
              "public_corporation",
              "public_partnership",
              "single_member_llc",
              "sole_establishment",
              "sole_proprietorship",
              "tax_exempt_government_instrumentality",
              "unincorporated_association",
              "unincorporated_non_profit",
              "unincorporated_partnership"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "tax_id_provided": {
            "description": "Whether the company's business ID number was provided.",
            "type": "boolean"
          },
          "tax_id_registrar": {
            "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
            "maxLength": 5000,
            "type": "string"
          },
          "vat_id_provided": {
            "description": "Whether the company's business VAT number was provided.",
            "type": "boolean"
          },
          "verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_company_verification"
              }
            ],
            "description": "Information on the verification state of the company.",
            "nullable": true
          }
        },
        "title": "LegalEntityCompany",
        "type": "object",
        "x-expandableFields": [
          "address",
          "address_kana",
          "address_kanji",
          "ownership_declaration",
          "verification"
        ]
      },
      "legal_entity_company_verification": {
        "description": "",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/legal_entity_company_verification_document"
          }
        },
        "required": [
          "document"
        ],
        "title": "LegalEntityCompanyVerification",
        "type": "object",
        "x-expandableFields": [
          "document"
        ]
      },
      "legal_entity_company_verification_document": {
        "description": "",
        "properties": {
          "back": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "details": {
            "description": "A user-displayable string describing the verification state of this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_corrupt`, `document_expired`, `document_failed_copy`, `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`, or `document_too_large`. A machine-readable code specifying the verification state for this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "front": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "title": "LegalEntityCompanyVerificationDocument",
        "type": "object",
        "x-expandableFields": [
          "back",
          "front"
        ]
      },
      "legal_entity_dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "LegalEntityDOB",
        "type": "object",
        "x-expandableFields": []
      },
      "legal_entity_japan_address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City/Ward.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Block/Building number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Building details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "Prefecture.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "town": {
            "description": "Town/cho-me.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "LegalEntityJapanAddress",
        "type": "object",
        "x-expandableFields": []
      },
      "legal_entity_ubo_declaration": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the beneficial owner attestation was made.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the beneficial owner attestation was made.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user-agent string from the browser where the beneficial owner attestation was made.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "LegalEntityUBODeclaration",
        "type": "object",
        "x-expandableFields": []
      },
      "line_item": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount, in cents (or local equivalent).",
            "type": "integer"
          },
          "amount_excluding_tax": {
            "description": "The integer amount in cents (or local equivalent) representing the amount for this line item, excluding all tax and discounts.",
            "nullable": true,
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discount_amounts": {
            "description": "The amount of discount calculated per discount for this line item.",
            "items": {
              "$ref": "#/components/schemas/discounts_resource_discount_amount"
            },
            "nullable": true,
            "type": "array"
          },
          "discountable": {
            "description": "If true, discounts will apply to this line item. Always false for prorations.",
            "type": "boolean"
          },
          "discounts": {
            "description": "The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_item": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoiceitem"
              }
            ],
            "description": "The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoiceitem"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription` this will reflect the metadata of the subscription that caused the line item to be created.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "line_item"
            ],
            "type": "string"
          },
          "period": {
            "$ref": "#/components/schemas/invoice_line_item_period"
          },
          "price": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/price"
              }
            ],
            "description": "The price of the line item.",
            "nullable": true
          },
          "proration": {
            "description": "Whether this is a proration.",
            "type": "boolean"
          },
          "proration_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_resource_line_items_proration_details"
              }
            ],
            "description": "Additional details for proration line items",
            "nullable": true
          },
          "quantity": {
            "description": "The quantity of the subscription, if the line item is a subscription or a proration.",
            "nullable": true,
            "type": "integer"
          },
          "subscription": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription"
              }
            ],
            "description": "The subscription that the invoice item pertains to, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ]
            }
          },
          "subscription_item": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription_item"
              }
            ],
            "description": "The subscription item that generated this line item. Left empty if the line item is not an explicit result of a subscription.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription_item"
                }
              ]
            }
          },
          "tax_amounts": {
            "description": "The amount of tax calculated per tax rate for this line item",
            "items": {
              "$ref": "#/components/schemas/invoice_tax_amount"
            },
            "type": "array"
          },
          "tax_rates": {
            "description": "The tax rates which apply to the line item.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "type": "array"
          },
          "type": {
            "description": "A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.",
            "enum": [
              "invoiceitem",
              "subscription"
            ],
            "type": "string"
          },
          "unit_amount_excluding_tax": {
            "description": "The amount in cents (or local equivalent) representing the unit amount for this line item, excluding all tax and discounts.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "discountable",
          "id",
          "livemode",
          "metadata",
          "object",
          "period",
          "proration",
          "type"
        ],
        "title": "InvoiceLineItem",
        "type": "object",
        "x-expandableFields": [
          "discount_amounts",
          "discounts",
          "invoice_item",
          "period",
          "price",
          "proration_details",
          "subscription",
          "subscription_item",
          "tax_amounts",
          "tax_rates"
        ],
        "x-resourceId": "line_item"
      },
      "line_items_tax_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount of tax applied for this rate.",
            "type": "integer"
          },
          "rate": {
            "$ref": "#/components/schemas/tax_rate"
          },
          "taxability_reason": {
            "description": "The reasoning behind this tax, for example, if the product is tax exempt. The possible values for this field may be extended as new tax rules are supported.",
            "enum": [
              "customer_exempt",
              "not_collecting",
              "not_subject_to_tax",
              "not_supported",
              "portion_product_exempt",
              "portion_reduced_rated",
              "portion_standard_rated",
              "product_exempt",
              "product_exempt_holiday",
              "proportionally_rated",
              "reduced_rated",
              "reverse_charge",
              "standard_rated",
              "taxable_basis_reduced",
              "zero_rated"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "taxable_amount": {
            "description": "The amount on which tax is calculated, in cents (or local equivalent).",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "rate"
        ],
        "title": "LineItemsTaxAmount",
        "type": "object",
        "x-expandableFields": [
          "rate"
        ]
      },
      "mandate": {
        "description": "A Mandate is a record of the permission that your customer gives you to debit their payment method.",
        "properties": {
          "customer_acceptance": {
            "$ref": "#/components/schemas/customer_acceptance"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "multi_use": {
            "$ref": "#/components/schemas/mandate_multi_use"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "mandate"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "description": "The account (if any) that the mandate is intended for.",
            "maxLength": 5000,
            "type": "string"
          },
          "payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the payment method associated with this mandate.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "payment_method_details": {
            "$ref": "#/components/schemas/mandate_payment_method_details"
          },
          "single_use": {
            "$ref": "#/components/schemas/mandate_single_use"
          },
          "status": {
            "description": "The mandate status indicates whether or not you can use it to initiate a payment.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of the mandate.",
            "enum": [
              "multi_use",
              "single_use"
            ],
            "type": "string"
          }
        },
        "required": [
          "customer_acceptance",
          "id",
          "livemode",
          "object",
          "payment_method",
          "payment_method_details",
          "status",
          "type"
        ],
        "title": "Mandate",
        "type": "object",
        "x-expandableFields": [
          "customer_acceptance",
          "multi_use",
          "payment_method",
          "payment_method_details",
          "single_use"
        ],
        "x-resourceId": "mandate"
      },
      "mandate_acss_debit": {
        "description": "",
        "properties": {
          "default_for": {
            "description": "List of Stripe products where this mandate can be selected automatically.",
            "items": {
              "enum": [
                "invoice",
                "subscription"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "interval_description": {
            "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_schedule": {
            "description": "Payment schedule for the mandate.",
            "enum": [
              "combined",
              "interval",
              "sporadic"
            ],
            "type": "string"
          },
          "transaction_type": {
            "description": "Transaction type of the mandate.",
            "enum": [
              "business",
              "personal"
            ],
            "type": "string"
          }
        },
        "required": [
          "payment_schedule",
          "transaction_type"
        ],
        "title": "mandate_acss_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_au_becs_debit": {
        "description": "",
        "properties": {
          "url": {
            "description": "The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "title": "mandate_au_becs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_bacs_debit": {
        "description": "",
        "properties": {
          "network_status": {
            "description": "The status of the mandate on the Bacs network. Can be one of `pending`, `revoked`, `refused`, or `accepted`.",
            "enum": [
              "accepted",
              "pending",
              "refused",
              "revoked"
            ],
            "type": "string"
          },
          "reference": {
            "description": "The unique reference identifying the mandate on the Bacs network.",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL that will contain the mandate that the customer has signed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "network_status",
          "reference",
          "url"
        ],
        "title": "mandate_bacs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_cashapp": {
        "description": "",
        "properties": {},
        "title": "mandate_cashapp",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_link": {
        "description": "",
        "properties": {},
        "title": "mandate_link",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_multi_use": {
        "description": "",
        "properties": {},
        "title": "mandate_multi_use",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_payment_method_details": {
        "description": "",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/mandate_acss_debit"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/mandate_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/mandate_bacs_debit"
          },
          "card": {
            "$ref": "#/components/schemas/card_mandate_payment_method_details"
          },
          "cashapp": {
            "$ref": "#/components/schemas/mandate_cashapp"
          },
          "link": {
            "$ref": "#/components/schemas/mandate_link"
          },
          "paypal": {
            "$ref": "#/components/schemas/mandate_paypal"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/mandate_sepa_debit"
          },
          "type": {
            "description": "This mandate corresponds with a specific payment method type. The `payment_method_details` includes an additional hash with the same name and contains mandate information that's specific to that payment method.",
            "maxLength": 5000,
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/mandate_us_bank_account"
          }
        },
        "required": [
          "type"
        ],
        "title": "mandate_payment_method_details",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "au_becs_debit",
          "bacs_debit",
          "card",
          "cashapp",
          "link",
          "paypal",
          "sepa_debit",
          "us_bank_account"
        ]
      },
      "mandate_paypal": {
        "description": "",
        "properties": {
          "billing_agreement_id": {
            "description": "The PayPal Billing Agreement ID (BAID). This is an ID generated by PayPal which represents the mandate between the merchant and the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payer_id": {
            "description": "PayPal account PayerID. This identifier uniquely identifies the PayPal customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "mandate_paypal",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_sepa_debit": {
        "description": "",
        "properties": {
          "reference": {
            "description": "The unique reference of the mandate.",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "reference",
          "url"
        ],
        "title": "mandate_sepa_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_us_bank_account": {
        "description": "",
        "properties": {},
        "title": "mandate_us_bank_account",
        "type": "object",
        "x-expandableFields": []
      },
      "mandate_single_use": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount of the payment on a single use mandate.",
            "type": "integer"
          },
          "currency": {
            "description": "The currency of the payment on a single use mandate.",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "mandate_single_use",
        "type": "object",
        "x-expandableFields": []
      },
      "networks": {
        "description": "",
        "properties": {
          "available": {
            "description": "All available networks for the card.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "preferred": {
            "description": "The preferred network for the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "available"
        ],
        "title": "networks",
        "type": "object",
        "x-expandableFields": []
      },
      "offline_acceptance": {
        "description": "",
        "properties": {},
        "title": "offline_acceptance",
        "type": "object",
        "x-expandableFields": []
      },
      "online_acceptance": {
        "description": "",
        "properties": {
          "ip_address": {
            "description": "The customer accepts the mandate from this IP address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The customer accepts the mandate using the user agent of the browser.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "online_acceptance",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_flows_private_payment_methods_alipay": {
        "description": "",
        "properties": {},
        "title": "PaymentFlowsPrivatePaymentMethodsAlipay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_flows_private_payment_methods_alipay_details": {
        "description": "",
        "properties": {
          "buyer_id": {
            "description": "Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.",
            "maxLength": 5000,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_id": {
            "description": "Transaction ID of this particular Alipay transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "PaymentFlowsPrivatePaymentMethodsAlipayDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization": {
        "description": "",
        "properties": {
          "status": {
            "description": "Indicates whether or not the capture window is extended beyond the standard authorization.",
            "enum": [
              "disabled",
              "enabled"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceEnterpriseFeaturesExtendedAuthorizationExtendedAuthorization",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_incremental_authorization_incremental_authorization": {
        "description": "",
        "properties": {
          "status": {
            "description": "Indicates whether or not the incremental authorization feature is supported.",
            "enum": [
              "available",
              "unavailable"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceEnterpriseFeaturesIncrementalAuthorizationIncrementalAuthorization",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_flows_private_payment_methods_card_details_api_resource_multicapture": {
        "description": "",
        "properties": {
          "status": {
            "description": "Indicates whether or not multiple captures are supported.",
            "enum": [
              "available",
              "unavailable"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceMulticapture",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture": {
        "description": "",
        "properties": {
          "maximum_amount_capturable": {
            "description": "The maximum amount that can be captured.",
            "type": "integer"
          },
          "status": {
            "description": "Indicates whether or not the authorized amount can be over-captured.",
            "enum": [
              "available",
              "unavailable"
            ],
            "type": "string"
          }
        },
        "required": [
          "maximum_amount_capturable",
          "status"
        ],
        "title": "PaymentFlowsPrivatePaymentMethodsCardDetailsAPIResourceEnterpriseFeaturesOvercaptureOvercapture",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_flows_private_payment_methods_klarna_dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "title": "PaymentFlowsPrivatePaymentMethodsKlarnaDOB",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_intent": {
        "description": "A PaymentIntent guides you through the process of collecting a payment from your customer.\nWe recommend that you create exactly one PaymentIntent for each order or\ncustomer session in your system. You can reference the PaymentIntent later to\nsee the history of payment attempts for a particular session.\n\nA PaymentIntent transitions through\n[multiple statuses](https://stripe.com/docs/payments/intents#intent-statuses)\nthroughout its lifetime as it interfaces with Stripe.js to perform\nauthentication flows and ultimately creates at most one successful charge.\n\nRelated guide: [Payment Intents API](https://stripe.com/docs/payments/payment-intents)",
        "properties": {
          "amount": {
            "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "type": "integer"
          },
          "amount_capturable": {
            "description": "Amount that can be captured from this PaymentIntent.",
            "type": "integer"
          },
          "amount_details": {
            "$ref": "#/components/schemas/payment_flows_amount_details"
          },
          "amount_received": {
            "description": "Amount that this PaymentIntent collects.",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "ID of the Connect application that created the PaymentIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "application_fee_amount": {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "nullable": true,
            "type": "integer"
          },
          "automatic_payment_methods": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_flows_automatic_payment_methods_payment_intent"
              }
            ],
            "description": "Settings to configure compatible payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods)",
            "nullable": true
          },
          "canceled_at": {
            "description": "Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "cancellation_reason": {
            "description": "Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).",
            "enum": [
              "abandoned",
              "automatic",
              "duplicate",
              "failed_invoice",
              "fraudulent",
              "requested_by_customer",
              "void_invoice"
            ],
            "nullable": true,
            "type": "string"
          },
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "automatic_async",
              "manual"
            ],
            "type": "string"
          },
          "client_secret": {
            "description": "The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.\n\nRefer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "confirmation_method": {
            "enum": [
              "automatic",
              "manual"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the Customer this PaymentIntent belongs to, if one exists.\n\nPayment methods attached to other Customers cannot be used with this PaymentIntent.\n\nIf present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "ID of the invoice that created this PaymentIntent, if it exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "last_payment_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/api_errors"
              }
            ],
            "description": "The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.",
            "nullable": true
          },
          "latest_charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "The latest charge created by this PaymentIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Learn more about [storing information in metadata](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).",
            "type": "object"
          },
          "next_action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_intent_next_action"
              }
            ],
            "description": "If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.",
            "nullable": true
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment_intent"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the payment method used in this PaymentIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "payment_method_configuration_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_config_biz_payment_method_configuration_details"
              }
            ],
            "description": "Information about the payment method configuration used for this PaymentIntent.",
            "nullable": true
          },
          "payment_method_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_intent_payment_method_options"
              }
            ],
            "description": "Payment-method-specific configuration for this PaymentIntent.",
            "nullable": true
          },
          "payment_method_types": {
            "description": "The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "processing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_intent_processing"
              }
            ],
            "description": "If present, this property tells you about the processing state of the payment.",
            "nullable": true
          },
          "receipt_email": {
            "description": "Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "review": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/review"
              }
            ],
            "description": "ID of the review associated with this PaymentIntent, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/review"
                }
              ]
            }
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "off_session",
              "on_session"
            ],
            "nullable": true,
            "type": "string"
          },
          "shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "Shipping information for this PaymentIntent.",
            "nullable": true
          },
          "statement_descriptor": {
            "description": "For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_suffix": {
            "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).",
            "enum": [
              "canceled",
              "processing",
              "requires_action",
              "requires_capture",
              "requires_confirmation",
              "requires_payment_method",
              "succeeded"
            ],
            "type": "string"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/transfer_data"
              }
            ],
            "description": "The data that automatically creates a Transfer after the payment finalizes. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).",
            "nullable": true
          },
          "transfer_group": {
            "description": "A string that identifies the resulting payment as part of a group. Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "capture_method",
          "confirmation_method",
          "created",
          "currency",
          "id",
          "livemode",
          "object",
          "payment_method_types",
          "status"
        ],
        "title": "PaymentIntent",
        "type": "object",
        "x-expandableFields": [
          "amount_details",
          "application",
          "automatic_payment_methods",
          "customer",
          "invoice",
          "last_payment_error",
          "latest_charge",
          "next_action",
          "on_behalf_of",
          "payment_method",
          "payment_method_configuration_details",
          "payment_method_options",
          "processing",
          "review",
          "shipping",
          "transfer_data"
        ],
        "x-resourceId": "payment_intent"
      },
      "payment_method": {
        "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/payment_method_acss_debit"
          },
          "affirm": {
            "$ref": "#/components/schemas/payment_method_affirm"
          },
          "afterpay_clearpay": {
            "$ref": "#/components/schemas/payment_method_afterpay_clearpay"
          },
          "alipay": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/payment_method_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/payment_method_bacs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/payment_method_bancontact"
          },
          "billing_details": {
            "$ref": "#/components/schemas/billing_details"
          },
          "blik": {
            "$ref": "#/components/schemas/payment_method_blik"
          },
          "boleto": {
            "$ref": "#/components/schemas/payment_method_boleto"
          },
          "card": {
            "$ref": "#/components/schemas/payment_method_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/payment_method_card_present"
          },
          "cashapp": {
            "$ref": "#/components/schemas/payment_method_cashapp"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "customer_balance": {
            "$ref": "#/components/schemas/payment_method_customer_balance"
          },
          "eps": {
            "$ref": "#/components/schemas/payment_method_eps"
          },
          "fpx": {
            "$ref": "#/components/schemas/payment_method_fpx"
          },
          "giropay": {
            "$ref": "#/components/schemas/payment_method_giropay"
          },
          "grabpay": {
            "$ref": "#/components/schemas/payment_method_grabpay"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ideal": {
            "$ref": "#/components/schemas/payment_method_ideal"
          },
          "interac_present": {
            "$ref": "#/components/schemas/payment_method_interac_present"
          },
          "klarna": {
            "$ref": "#/components/schemas/payment_method_klarna"
          },
          "konbini": {
            "$ref": "#/components/schemas/payment_method_konbini"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_link"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment_method"
            ],
            "type": "string"
          },
          "oxxo": {
            "$ref": "#/components/schemas/payment_method_oxxo"
          },
          "p24": {
            "$ref": "#/components/schemas/payment_method_p24"
          },
          "paynow": {
            "$ref": "#/components/schemas/payment_method_paynow"
          },
          "paypal": {
            "$ref": "#/components/schemas/payment_method_paypal"
          },
          "pix": {
            "$ref": "#/components/schemas/payment_method_pix"
          },
          "promptpay": {
            "$ref": "#/components/schemas/payment_method_promptpay"
          },
          "radar_options": {
            "$ref": "#/components/schemas/radar_radar_options"
          },
          "revolut_pay": {
            "$ref": "#/components/schemas/payment_method_revolut_pay"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/payment_method_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/payment_method_sofort"
          },
          "type": {
            "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
            "enum": [
              "acss_debit",
              "affirm",
              "afterpay_clearpay",
              "alipay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "blik",
              "boleto",
              "card",
              "card_present",
              "cashapp",
              "customer_balance",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "interac_present",
              "klarna",
              "konbini",
              "link",
              "oxxo",
              "p24",
              "paynow",
              "paypal",
              "pix",
              "promptpay",
              "revolut_pay",
              "sepa_debit",
              "sofort",
              "us_bank_account",
              "wechat_pay",
              "zip"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/payment_method_us_bank_account"
          },
          "wechat_pay": {
            "$ref": "#/components/schemas/payment_method_wechat_pay"
          },
          "zip": {
            "$ref": "#/components/schemas/payment_method_zip"
          }
        },
        "required": [
          "billing_details",
          "created",
          "id",
          "livemode",
          "object",
          "type"
        ],
        "title": "PaymentMethod",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "billing_details",
          "blik",
          "boleto",
          "card",
          "card_present",
          "cashapp",
          "customer",
          "customer_balance",
          "eps",
          "fpx",
          "giropay",
          "grabpay",
          "ideal",
          "interac_present",
          "klarna",
          "konbini",
          "link",
          "oxxo",
          "p24",
          "paynow",
          "paypal",
          "pix",
          "promptpay",
          "radar_options",
          "revolut_pay",
          "sepa_debit",
          "sofort",
          "us_bank_account",
          "wechat_pay",
          "zip"
        ],
        "x-resourceId": "payment_method"
      },
      "payment_method_acss_debit": {
        "description": "",
        "properties": {
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "institution_number": {
            "description": "Institution number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transit_number": {
            "description": "Transit number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_acss_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_affirm": {
        "description": "",
        "properties": {},
        "title": "payment_method_affirm",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_afterpay_clearpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_au_becs_debit": {
        "description": "",
        "properties": {
          "bsb_number": {
            "description": "Six-digit number identifying bank and branch associated with this bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_au_becs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_bacs_debit": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sort_code": {
            "description": "Sort code of the bank account. (e.g., `10-20-30`)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_bacs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_bancontact": {
        "description": "",
        "properties": {},
        "title": "payment_method_bancontact",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_blik": {
        "description": "",
        "properties": {},
        "title": "payment_method_blik",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_boleto": {
        "description": "",
        "properties": {
          "tax_id": {
            "description": "Uniquely identifies the customer tax id (CNPJ or CPF)",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "tax_id"
        ],
        "title": "payment_method_boleto",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "checks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_checks"
              }
            ],
            "description": "Checks on Card address and CVC if provided.",
            "nullable": true
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "generated_from": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_generated_card"
              }
            ],
            "description": "Details of the original PaymentMethod that created this object.",
            "nullable": true
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/networks"
              }
            ],
            "description": "Contains information about card networks that can be used to process the payment.",
            "nullable": true
          },
          "three_d_secure_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/three_d_secure_usage"
              }
            ],
            "description": "Contains details on how this Card may be used for 3D Secure authentication.",
            "nullable": true
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_wallet"
              }
            ],
            "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
            "nullable": true
          }
        },
        "required": [
          "brand",
          "exp_month",
          "exp_year",
          "funding",
          "last4"
        ],
        "title": "payment_method_card",
        "type": "object",
        "x-expandableFields": [
          "checks",
          "generated_from",
          "networks",
          "three_d_secure_usage",
          "wallet"
        ]
      },
      "payment_method_card_checks": {
        "description": "",
        "properties": {
          "address_line1_check": {
            "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_card_checks",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card_generated_card": {
        "description": "",
        "properties": {
          "charge": {
            "description": "The charge that created this object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_method_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/card_generated_from_payment_method_details"
              }
            ],
            "description": "Transaction-specific details of the payment method used in the payment.",
            "nullable": true
          },
          "setup_attempt": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_attempt"
              }
            ],
            "description": "The ID of the SetupAttempt that generated this PaymentMethod, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_attempt"
                }
              ]
            }
          }
        },
        "title": "payment_method_card_generated_card",
        "type": "object",
        "x-expandableFields": [
          "payment_method_details",
          "setup_attempt"
        ]
      },
      "payment_method_card_present": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_name": {
            "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_present_networks"
              }
            ],
            "description": "Contains information about card networks that can be used to process the payment.",
            "nullable": true
          },
          "read_method": {
            "description": "How card details were read in this transaction.",
            "enum": [
              "contact_emv",
              "contactless_emv",
              "contactless_magstripe_mode",
              "magnetic_stripe_fallback",
              "magnetic_stripe_track2"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "exp_month",
          "exp_year"
        ],
        "title": "payment_method_card_present",
        "type": "object",
        "x-expandableFields": [
          "networks"
        ]
      },
      "payment_method_card_present_networks": {
        "description": "",
        "properties": {
          "available": {
            "description": "All available networks for the card.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "preferred": {
            "description": "The preferred network for the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "available"
        ],
        "title": "payment_method_card_present_networks",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card_wallet": {
        "description": "",
        "properties": {
          "amex_express_checkout": {
            "$ref": "#/components/schemas/payment_method_card_wallet_amex_express_checkout"
          },
          "apple_pay": {
            "$ref": "#/components/schemas/payment_method_card_wallet_apple_pay"
          },
          "dynamic_last4": {
            "description": "(For tokenized numbers only.) The last four digits of the device account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "google_pay": {
            "$ref": "#/components/schemas/payment_method_card_wallet_google_pay"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_card_wallet_link"
          },
          "masterpass": {
            "$ref": "#/components/schemas/payment_method_card_wallet_masterpass"
          },
          "samsung_pay": {
            "$ref": "#/components/schemas/payment_method_card_wallet_samsung_pay"
          },
          "type": {
            "description": "The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.",
            "enum": [
              "amex_express_checkout",
              "apple_pay",
              "google_pay",
              "link",
              "masterpass",
              "samsung_pay",
              "visa_checkout"
            ],
            "type": "string"
          },
          "visa_checkout": {
            "$ref": "#/components/schemas/payment_method_card_wallet_visa_checkout"
          }
        },
        "required": [
          "type"
        ],
        "title": "payment_method_card_wallet",
        "type": "object",
        "x-expandableFields": [
          "amex_express_checkout",
          "apple_pay",
          "google_pay",
          "link",
          "masterpass",
          "samsung_pay",
          "visa_checkout"
        ]
      },
      "payment_method_card_wallet_amex_express_checkout": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_amex_express_checkout",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card_wallet_apple_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_apple_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card_wallet_google_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_google_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card_wallet_link": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_link",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card_wallet_masterpass": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "title": "payment_method_card_wallet_masterpass",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ]
      },
      "payment_method_card_wallet_samsung_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_samsung_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_card_wallet_visa_checkout": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "title": "payment_method_card_wallet_visa_checkout",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ]
      },
      "payment_method_cashapp": {
        "description": "",
        "properties": {
          "buyer_id": {
            "description": "A unique and immutable identifier assigned by Cash App to every buyer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cashtag": {
            "description": "A public identifier for buyers using Cash App.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_cashapp",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_config_biz_payment_method_configuration_details": {
        "description": "",
        "properties": {
          "id": {
            "description": "ID of the payment method configuration used.",
            "maxLength": 5000,
            "type": "string"
          },
          "parent": {
            "description": "ID of the parent payment method configuration used.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "PaymentMethodConfigBizPaymentMethodConfigurationDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_config_resource_display_preference": {
        "description": "",
        "properties": {
          "overridable": {
            "description": "For child configs, whether or not the account's preference will be observed. If `false`, the parent configuration's default is used.",
            "nullable": true,
            "type": "boolean"
          },
          "preference": {
            "description": "The account's display preference.",
            "enum": [
              "none",
              "off",
              "on"
            ],
            "type": "string"
          },
          "value": {
            "description": "The effective display preference value.",
            "enum": [
              "off",
              "on"
            ],
            "type": "string"
          }
        },
        "required": [
          "preference",
          "value"
        ],
        "title": "PaymentMethodConfigResourceDisplayPreference",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_config_resource_payment_method_properties": {
        "description": "",
        "properties": {
          "available": {
            "description": "Whether this payment method may be offered at checkout. True if `display_preference` is `on` and the payment method's capability is active.",
            "type": "boolean"
          },
          "display_preference": {
            "$ref": "#/components/schemas/payment_method_config_resource_display_preference"
          }
        },
        "required": [
          "available",
          "display_preference"
        ],
        "title": "PaymentMethodConfigResourcePaymentMethodProperties",
        "type": "object",
        "x-expandableFields": [
          "display_preference"
        ]
      },
      "payment_method_configuration": {
        "description": "PaymentMethodConfigurations control which payment methods are displayed to your customers when you don't explicitly specify payment method types. You can have multiple configurations with different sets of payment methods for different scenarios.\n\nThere are two types of PaymentMethodConfigurations. Which is used depends on the [charge type](https://stripe.com/docs/connect/charges):\n\n**Direct** configurations apply to payments created on your account, including Connect destination charges, Connect separate charges and transfers, and payments not involving Connect.\n\n**Child** configurations apply to payments created on your connected accounts using direct charges, and charges with the on_behalf_of parameter.\n\nChild configurations have a `parent` that sets default values and controls which settings connected accounts may override. You can specify a parent ID at payment time, and Stripe will automatically resolve the connected account’s associated child configuration. Parent configurations are [managed in the dashboard](https://dashboard.stripe.com/settings/payment_methods/connected_accounts) and are not available in this API.\n\nRelated guides:\n- [Payment Method Configurations API](https://stripe.com/docs/connect/payment-method-configurations)\n- [Multiple configurations on dynamic payment methods](https://stripe.com/docs/payments/multiple-payment-method-configs)\n- [Multiple configurations for your Connect accounts](https://stripe.com/docs/connect/multiple-payment-method-configurations)",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "active": {
            "description": "Whether the configuration can be used for new payments.",
            "type": "boolean"
          },
          "affirm": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "afterpay_clearpay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "alipay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "apple_pay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "application": {
            "description": "For child configs, the Connect application associated with the configuration.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "bancontact": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "blik": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "boleto": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "card": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "cartes_bancaires": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "cashapp": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "eps": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "fpx": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "giropay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "google_pay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "grabpay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "id_bank_transfer": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "ideal": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "is_default": {
            "description": "The default configuration is used whenever a payment method configuration is not specified.",
            "type": "boolean"
          },
          "jcb": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "klarna": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "konbini": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "multibanco": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "name": {
            "description": "The configuration's name.",
            "maxLength": 5000,
            "type": "string"
          },
          "netbanking": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment_method_configuration"
            ],
            "type": "string"
          },
          "oxxo": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "p24": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "parent": {
            "description": "For child configs, the configuration's parent configuration.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "pay_by_bank": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "paynow": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "paypal": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "promptpay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "sofort": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "upi": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          },
          "wechat_pay": {
            "$ref": "#/components/schemas/payment_method_config_resource_payment_method_properties"
          }
        },
        "required": [
          "active",
          "id",
          "is_default",
          "livemode",
          "name",
          "object"
        ],
        "title": "PaymentMethodConfigResourcePaymentMethodConfiguration",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "apple_pay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "blik",
          "boleto",
          "card",
          "cartes_bancaires",
          "cashapp",
          "eps",
          "fpx",
          "giropay",
          "google_pay",
          "grabpay",
          "id_bank_transfer",
          "ideal",
          "jcb",
          "klarna",
          "konbini",
          "link",
          "multibanco",
          "netbanking",
          "oxxo",
          "p24",
          "pay_by_bank",
          "paynow",
          "paypal",
          "promptpay",
          "sepa_debit",
          "sofort",
          "upi",
          "us_bank_account",
          "wechat_pay"
        ],
        "x-resourceId": "payment_method_configuration"
      },
      "payment_method_customer_balance": {
        "description": "",
        "properties": {},
        "title": "payment_method_customer_balance",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details": {
        "description": "",
        "properties": {
          "ach_credit_transfer": {
            "$ref": "#/components/schemas/payment_method_details_ach_credit_transfer"
          },
          "ach_debit": {
            "$ref": "#/components/schemas/payment_method_details_ach_debit"
          },
          "acss_debit": {
            "$ref": "#/components/schemas/payment_method_details_acss_debit"
          },
          "affirm": {
            "$ref": "#/components/schemas/payment_method_details_affirm"
          },
          "afterpay_clearpay": {
            "$ref": "#/components/schemas/payment_method_details_afterpay_clearpay"
          },
          "alipay": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay_details"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/payment_method_details_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/payment_method_details_bacs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/payment_method_details_bancontact"
          },
          "blik": {
            "$ref": "#/components/schemas/payment_method_details_blik"
          },
          "boleto": {
            "$ref": "#/components/schemas/payment_method_details_boleto"
          },
          "card": {
            "$ref": "#/components/schemas/payment_method_details_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/payment_method_details_card_present"
          },
          "cashapp": {
            "$ref": "#/components/schemas/payment_method_details_cashapp"
          },
          "customer_balance": {
            "$ref": "#/components/schemas/payment_method_details_customer_balance"
          },
          "eps": {
            "$ref": "#/components/schemas/payment_method_details_eps"
          },
          "fpx": {
            "$ref": "#/components/schemas/payment_method_details_fpx"
          },
          "giropay": {
            "$ref": "#/components/schemas/payment_method_details_giropay"
          },
          "grabpay": {
            "$ref": "#/components/schemas/payment_method_details_grabpay"
          },
          "ideal": {
            "$ref": "#/components/schemas/payment_method_details_ideal"
          },
          "interac_present": {
            "$ref": "#/components/schemas/payment_method_details_interac_present"
          },
          "klarna": {
            "$ref": "#/components/schemas/payment_method_details_klarna"
          },
          "konbini": {
            "$ref": "#/components/schemas/payment_method_details_konbini"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_details_link"
          },
          "multibanco": {
            "$ref": "#/components/schemas/payment_method_details_multibanco"
          },
          "oxxo": {
            "$ref": "#/components/schemas/payment_method_details_oxxo"
          },
          "p24": {
            "$ref": "#/components/schemas/payment_method_details_p24"
          },
          "paynow": {
            "$ref": "#/components/schemas/payment_method_details_paynow"
          },
          "paypal": {
            "$ref": "#/components/schemas/payment_method_details_paypal"
          },
          "pix": {
            "$ref": "#/components/schemas/payment_method_details_pix"
          },
          "promptpay": {
            "$ref": "#/components/schemas/payment_method_details_promptpay"
          },
          "revolut_pay": {
            "$ref": "#/components/schemas/payment_method_details_revolut_pay"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/payment_method_details_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/payment_method_details_sofort"
          },
          "stripe_account": {
            "$ref": "#/components/schemas/payment_method_details_stripe_account"
          },
          "type": {
            "description": "The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.\nAn additional hash is included on `payment_method_details` with a name matching this value.\nIt contains information specific to the payment method.",
            "maxLength": 5000,
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/payment_method_details_us_bank_account"
          },
          "wechat": {
            "$ref": "#/components/schemas/payment_method_details_wechat"
          },
          "wechat_pay": {
            "$ref": "#/components/schemas/payment_method_details_wechat_pay"
          },
          "zip": {
            "$ref": "#/components/schemas/payment_method_details_zip"
          }
        },
        "required": [
          "type"
        ],
        "title": "payment_method_details",
        "type": "object",
        "x-expandableFields": [
          "ach_credit_transfer",
          "ach_debit",
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "blik",
          "boleto",
          "card",
          "card_present",
          "cashapp",
          "customer_balance",
          "eps",
          "fpx",
          "giropay",
          "grabpay",
          "ideal",
          "interac_present",
          "klarna",
          "konbini",
          "link",
          "multibanco",
          "oxxo",
          "p24",
          "paynow",
          "paypal",
          "pix",
          "promptpay",
          "revolut_pay",
          "sepa_debit",
          "sofort",
          "stripe_account",
          "us_bank_account",
          "wechat",
          "wechat_pay",
          "zip"
        ]
      },
      "payment_method_details_ach_credit_transfer": {
        "description": "",
        "properties": {
          "account_number": {
            "description": "Account number to transfer funds to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the routing number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing transit number for the bank account to transfer funds to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "swift_code": {
            "description": "SWIFT code of the bank associated with the routing number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_ach_credit_transfer",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_ach_debit": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Type of entity that holds the account. This can be either `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing transit number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_ach_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_acss_debit": {
        "description": "",
        "properties": {
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "institution_number": {
            "description": "Institution number of the bank account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "type": "string"
          },
          "transit_number": {
            "description": "Transit number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_acss_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_affirm": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_affirm",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_afterpay_clearpay": {
        "description": "",
        "properties": {
          "order_id": {
            "description": "The Afterpay order ID associated with this payment intent.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "description": "Order identifier shown to the merchant in Afterpay’s online portal.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_au_becs_debit": {
        "description": "",
        "properties": {
          "bsb_number": {
            "description": "Bank-State-Branch number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "payment_method_details_au_becs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_bacs_debit": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sort_code": {
            "description": "Sort code of the bank account. (e.g., `10-20-30`)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_bacs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_bancontact": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_bancontact",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ]
      },
      "payment_method_details_blik": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_blik",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_boleto": {
        "description": "",
        "properties": {
          "tax_id": {
            "description": "The tax ID of the customer (CPF for individuals consumers or CNPJ for businesses consumers)",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "tax_id"
        ],
        "title": "payment_method_details_boleto",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card": {
        "description": "",
        "properties": {
          "amount_authorized": {
            "description": "The authorized amount.",
            "nullable": true,
            "type": "integer"
          },
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "checks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_checks"
              }
            ],
            "description": "Check results by Card networks on Card address and CVC at time of payment.",
            "nullable": true
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "extended_authorization": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_extended_authorization_extended_authorization"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "incremental_authorization": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_incremental_authorization_incremental_authorization"
          },
          "installments": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_installments"
              }
            ],
            "description": "Installment details for this payment (Mexico only).\n\nFor more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).",
            "nullable": true
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment or created by it.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "multicapture": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_card_details_api_resource_multicapture"
          },
          "network": {
            "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network_token": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_network_token"
              }
            ],
            "description": "If this card has network token credentials, this contains the details of the network token credentials.",
            "nullable": true
          },
          "overcapture": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_card_details_api_resource_enterprise_features_overcapture_overcapture"
          },
          "three_d_secure": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/three_d_secure_details_charge"
              }
            ],
            "description": "Populated if this transaction used 3D Secure authentication.",
            "nullable": true
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_wallet"
              }
            ],
            "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
            "nullable": true
          }
        },
        "required": [
          "exp_month",
          "exp_year"
        ],
        "title": "payment_method_details_card",
        "type": "object",
        "x-expandableFields": [
          "checks",
          "extended_authorization",
          "incremental_authorization",
          "installments",
          "multicapture",
          "network_token",
          "overcapture",
          "three_d_secure",
          "wallet"
        ]
      },
      "payment_method_details_card_checks": {
        "description": "",
        "properties": {
          "address_line1_check": {
            "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_card_checks",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_installments": {
        "description": "",
        "properties": {
          "plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_installments_plan"
              }
            ],
            "description": "Installment plan selected for the payment.",
            "nullable": true
          }
        },
        "title": "payment_method_details_card_installments",
        "type": "object",
        "x-expandableFields": [
          "plan"
        ]
      },
      "payment_method_details_card_installments_plan": {
        "description": "",
        "properties": {
          "count": {
            "description": "For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.",
            "nullable": true,
            "type": "integer"
          },
          "interval": {
            "description": "For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.\nOne of `month`.",
            "enum": [
              "month"
            ],
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of installment plan, one of `fixed_count`.",
            "enum": [
              "fixed_count"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "payment_method_details_card_installments_plan",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_network_token": {
        "description": "",
        "properties": {
          "used": {
            "description": "Indicates if Stripe used a network token, either user provided or Stripe managed when processing the transaction.",
            "type": "boolean"
          }
        },
        "required": [
          "used"
        ],
        "title": "payment_method_details_card_network_token",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_present": {
        "description": "",
        "properties": {
          "amount_authorized": {
            "description": "The authorized amount",
            "nullable": true,
            "type": "integer"
          },
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "capture_before": {
            "description": "When using manual capture, a future timestamp after which the charge will be automatically refunded if uncaptured.",
            "format": "unix-time",
            "type": "integer"
          },
          "cardholder_name": {
            "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "emv_auth_data": {
            "description": "Authorization response cryptogram.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_card": {
            "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "incremental_authorization_supported": {
            "description": "Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents) is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).",
            "type": "boolean"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "overcapture_supported": {
            "description": "Defines whether the authorized amount can be over-captured or not",
            "type": "boolean"
          },
          "read_method": {
            "description": "How card details were read in this transaction.",
            "enum": [
              "contact_emv",
              "contactless_emv",
              "contactless_magstripe_mode",
              "magnetic_stripe_fallback",
              "magnetic_stripe_track2"
            ],
            "nullable": true,
            "type": "string"
          },
          "receipt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_present_receipt"
              }
            ],
            "description": "A collection of fields required to be displayed on receipts. Only required for EMV transactions.",
            "nullable": true
          }
        },
        "required": [
          "exp_month",
          "exp_year",
          "incremental_authorization_supported",
          "overcapture_supported"
        ],
        "title": "payment_method_details_card_present",
        "type": "object",
        "x-expandableFields": [
          "receipt"
        ]
      },
      "payment_method_details_card_present_receipt": {
        "description": "",
        "properties": {
          "account_type": {
            "description": "The type of account being debited or credited",
            "enum": [
              "checking",
              "credit",
              "prepaid",
              "unknown"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "application_cryptogram": {
            "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "application_preferred_name": {
            "description": "Mnenomic of the Application Identifier.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_code": {
            "description": "Identifier for this transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_response_code": {
            "description": "EMV tag 8A. A code returned by the card issuer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_verification_method": {
            "description": "How the cardholder verified ownership of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "dedicated_file_name": {
            "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "terminal_verification_results": {
            "description": "The outcome of a series of EMV functions performed by the card reader.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_status_information": {
            "description": "An indication of various EMV functions performed during the transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_card_present_receipt",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_wallet": {
        "description": "",
        "properties": {
          "amex_express_checkout": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_amex_express_checkout"
          },
          "apple_pay": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_apple_pay"
          },
          "dynamic_last4": {
            "description": "(For tokenized numbers only.) The last four digits of the device account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "google_pay": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_google_pay"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_link"
          },
          "masterpass": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_masterpass"
          },
          "samsung_pay": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_samsung_pay"
          },
          "type": {
            "description": "The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.",
            "enum": [
              "amex_express_checkout",
              "apple_pay",
              "google_pay",
              "link",
              "masterpass",
              "samsung_pay",
              "visa_checkout"
            ],
            "type": "string"
          },
          "visa_checkout": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_visa_checkout"
          }
        },
        "required": [
          "type"
        ],
        "title": "payment_method_details_card_wallet",
        "type": "object",
        "x-expandableFields": [
          "amex_express_checkout",
          "apple_pay",
          "google_pay",
          "link",
          "masterpass",
          "samsung_pay",
          "visa_checkout"
        ]
      },
      "payment_method_details_card_wallet_amex_express_checkout": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_amex_express_checkout",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_wallet_apple_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_apple_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_wallet_google_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_google_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_wallet_link": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_link",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_wallet_masterpass": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "title": "payment_method_details_card_wallet_masterpass",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ]
      },
      "payment_method_details_card_wallet_samsung_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_samsung_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_card_wallet_visa_checkout": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "title": "payment_method_details_card_wallet_visa_checkout",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ]
      },
      "payment_method_details_cashapp": {
        "description": "",
        "properties": {
          "buyer_id": {
            "description": "A unique and immutable identifier assigned by Cash App to every buyer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cashtag": {
            "description": "A public identifier for buyers using Cash App.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_cashapp",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_customer_balance": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_customer_balance",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_eps": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.",
            "enum": [
              "arzte_und_apotheker_bank",
              "austrian_anadi_bank_ag",
              "bank_austria",
              "bankhaus_carl_spangler",
              "bankhaus_schelhammer_und_schattera_ag",
              "bawag_psk_ag",
              "bks_bank_ag",
              "brull_kallmus_bank_ag",
              "btv_vier_lander_bank",
              "capital_bank_grawe_gruppe_ag",
              "deutsche_bank_ag",
              "dolomitenbank",
              "easybank_ag",
              "erste_bank_und_sparkassen",
              "hypo_alpeadriabank_international_ag",
              "hypo_bank_burgenland_aktiengesellschaft",
              "hypo_noe_lb_fur_niederosterreich_u_wien",
              "hypo_oberosterreich_salzburg_steiermark",
              "hypo_tirol_bank_ag",
              "hypo_vorarlberg_bank_ag",
              "marchfelder_bank",
              "oberbank_ag",
              "raiffeisen_bankengruppe_osterreich",
              "schoellerbank_ag",
              "sparda_bank_wien",
              "volksbank_gruppe",
              "volkskreditbank_ag",
              "vr_bank_braunau"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by EPS directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nEPS rarely provides this information so the attribute is usually empty.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_eps",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_fpx": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.",
            "enum": [
              "affin_bank",
              "agrobank",
              "alliance_bank",
              "ambank",
              "bank_islam",
              "bank_muamalat",
              "bank_of_china",
              "bank_rakyat",
              "bsn",
              "cimb",
              "deutsche_bank",
              "hong_leong_bank",
              "hsbc",
              "kfh",
              "maybank2e",
              "maybank2u",
              "ocbc",
              "pb_enterprise",
              "public_bank",
              "rhb",
              "standard_chartered",
              "uob"
            ],
            "type": "string"
          },
          "transaction_id": {
            "description": "Unique transaction id generated by FPX for every request from the merchant",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank"
        ],
        "title": "payment_method_details_fpx",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_giropay": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Giropay directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nGiropay rarely provides this information so the attribute is usually empty.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_giropay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_grabpay": {
        "description": "",
        "properties": {
          "transaction_id": {
            "description": "Unique transaction id generated by GrabPay",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_grabpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_ideal": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.",
            "enum": [
              "abn_amro",
              "asn_bank",
              "bunq",
              "handelsbanken",
              "ing",
              "knab",
              "moneyou",
              "n26",
              "rabobank",
              "regiobank",
              "revolut",
              "sns_bank",
              "triodos_bank",
              "van_lanschot",
              "yoursafe"
            ],
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "The Bank Identifier Code of the customer's bank.",
            "enum": [
              "ABNANL2A",
              "ASNBNL21",
              "BITSNL2A",
              "BUNQNL2A",
              "FVLBNL22",
              "HANDNL2A",
              "INGBNL2A",
              "KNABNL2H",
              "MOYONL21",
              "NTSBDEB1",
              "RABONL2U",
              "RBRBNL21",
              "REVOIE23",
              "REVOLT21",
              "SNSBNL2A",
              "TRIONL2U"
            ],
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by iDEAL directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_ideal",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ]
      },
      "payment_method_details_interac_present": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `interac`, `mastercard` or `visa`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_name": {
            "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "emv_auth_data": {
            "description": "Authorization response cryptogram.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_card": {
            "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_locales": {
            "description": "EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "read_method": {
            "description": "How card details were read in this transaction.",
            "enum": [
              "contact_emv",
              "contactless_emv",
              "contactless_magstripe_mode",
              "magnetic_stripe_fallback",
              "magnetic_stripe_track2"
            ],
            "nullable": true,
            "type": "string"
          },
          "receipt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_interac_present_receipt"
              }
            ],
            "description": "A collection of fields required to be displayed on receipts. Only required for EMV transactions.",
            "nullable": true
          }
        },
        "required": [
          "exp_month",
          "exp_year"
        ],
        "title": "payment_method_details_interac_present",
        "type": "object",
        "x-expandableFields": [
          "receipt"
        ]
      },
      "payment_method_details_interac_present_receipt": {
        "description": "",
        "properties": {
          "account_type": {
            "description": "The type of account being debited or credited",
            "enum": [
              "checking",
              "savings",
              "unknown"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "application_cryptogram": {
            "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "application_preferred_name": {
            "description": "Mnenomic of the Application Identifier.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_code": {
            "description": "Identifier for this transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_response_code": {
            "description": "EMV tag 8A. A code returned by the card issuer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_verification_method": {
            "description": "How the cardholder verified ownership of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "dedicated_file_name": {
            "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "terminal_verification_results": {
            "description": "The outcome of a series of EMV functions performed by the card reader.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_status_information": {
            "description": "An indication of various EMV functions performed during the transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_interac_present_receipt",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_klarna": {
        "description": "",
        "properties": {
          "payment_method_category": {
            "description": "The Klarna payment method used for this transaction.\nCan be one of `pay_later`, `pay_now`, `pay_with_financing`, or `pay_in_installments`",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_locale": {
            "description": "Preferred language of the Klarna authorization page that the customer is redirected to.\nCan be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`, `en-BE`, `de-DE`, `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`, `sv-FI`, `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`, `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`, `en-FR`, `cs-CZ`, `en-CZ`, `el-GR`, `en-GR`, `en-AU`, `en-NZ`, `en-CA`, `fr-CA`, `pl-PL`, `en-PL`, `pt-PT`, `en-PT`, `de-CH`, `fr-CH`, `it-CH`, or `en-CH`",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_klarna",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_konbini": {
        "description": "",
        "properties": {
          "store": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_konbini_store"
              }
            ],
            "description": "If the payment succeeded, this contains the details of the convenience store where the payment was completed.",
            "nullable": true
          }
        },
        "title": "payment_method_details_konbini",
        "type": "object",
        "x-expandableFields": [
          "store"
        ]
      },
      "payment_method_details_konbini_store": {
        "description": "",
        "properties": {
          "chain": {
            "description": "The name of the convenience store chain where the payment was completed.",
            "enum": [
              "familymart",
              "lawson",
              "ministop",
              "seicomart"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_konbini_store",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_link": {
        "description": "",
        "properties": {
          "country": {
            "description": "Two-letter ISO code representing the funding source country beneath the Link payment.\nYou could use this attribute to get a sense of international fees.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_link",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_multibanco": {
        "description": "",
        "properties": {
          "entity": {
            "description": "Entity number associated with this Multibanco payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "description": "Reference number associated with this Multibanco payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_multibanco",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_oxxo": {
        "description": "",
        "properties": {
          "number": {
            "description": "OXXO reference number",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_oxxo",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_p24": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Can be one of `ing`, `citi_handlowy`, `tmobile_usbugi_bankowe`, `plus_bank`, `etransfer_pocztowy24`, `banki_spbdzielcze`, `bank_nowy_bfg_sa`, `getin_bank`, `blik`, `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`, `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`, `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`, `volkswagen_bank`, `bank_millennium`, `alior_bank`, or `boz`.",
            "enum": [
              "alior_bank",
              "bank_millennium",
              "bank_nowy_bfg_sa",
              "bank_pekao_sa",
              "banki_spbdzielcze",
              "blik",
              "bnp_paribas",
              "boz",
              "citi_handlowy",
              "credit_agricole",
              "envelobank",
              "etransfer_pocztowy24",
              "getin_bank",
              "ideabank",
              "ing",
              "inteligo",
              "mbank_mtransfer",
              "nest_przelew",
              "noble_pay",
              "pbac_z_ipko",
              "plus_bank",
              "santander_przelew24",
              "tmobile_usbugi_bankowe",
              "toyota_bank",
              "volkswagen_bank"
            ],
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "description": "Unique reference for this Przelewy24 payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Przelewy24 directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nPrzelewy24 rarely provides this information so the attribute is usually empty.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_p24",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_paynow": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Reference number associated with this PayNow payment",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_paynow",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_paypal": {
        "description": "",
        "properties": {
          "payer_email": {
            "description": "Owner's email. Values are provided by PayPal directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payer_id": {
            "description": "PayPal account PayerID. This identifier uniquely identifies the PayPal customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payer_name": {
            "description": "Owner's full name. Values provided by PayPal directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "seller_protection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/paypal_seller_protection"
              }
            ],
            "description": "The level of protection offered as defined by PayPal Seller Protection for Merchants, for this transaction.",
            "nullable": true
          },
          "transaction_id": {
            "description": "A unique ID generated by PayPal for this transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_paypal",
        "type": "object",
        "x-expandableFields": [
          "seller_protection"
        ]
      },
      "payment_method_details_pix": {
        "description": "",
        "properties": {
          "bank_transaction_id": {
            "description": "Unique transaction id generated by BCB",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_pix",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_promptpay": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Bill reference generated by PromptPay",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_promptpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_revolut_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_revolut_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_sepa_debit": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "description": "Branch code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_sepa_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_sofort": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "description": "Preferred language of the SOFORT authorization page that the customer is redirected to.\nCan be one of `de`, `en`, `es`, `fr`, `it`, `nl`, or `pl`",
            "enum": [
              "de",
              "en",
              "es",
              "fr",
              "it",
              "nl",
              "pl"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by SOFORT directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_sofort",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ]
      },
      "payment_method_details_stripe_account": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_stripe_account",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_us_bank_account",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_wechat": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_wechat",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_wechat_pay": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Uniquely identifies this particular WeChat Pay account. You can use this attribute to check whether two WeChat accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_id": {
            "description": "Transaction ID of this particular WeChat Pay transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_wechat_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_details_zip": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_zip",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_domain": {
        "description": "A payment method domain represents a web domain that you have registered with Stripe.\nStripe Elements use registered payment method domains to control where certain payment methods are shown.\n\nRelated guides: [Payment method domains](https://stripe.com/docs/payments/payment-methods/pmd-registration).",
        "properties": {
          "apple_pay": {
            "$ref": "#/components/schemas/payment_method_domain_resource_payment_method_status"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "domain_name": {
            "description": "The domain name that this payment method domain object represents.",
            "maxLength": 5000,
            "type": "string"
          },
          "enabled": {
            "description": "Whether this payment method domain is enabled. If the domain is not enabled, payment methods that require a payment method domain will not appear in Elements.",
            "type": "boolean"
          },
          "google_pay": {
            "$ref": "#/components/schemas/payment_method_domain_resource_payment_method_status"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_domain_resource_payment_method_status"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment_method_domain"
            ],
            "type": "string"
          },
          "paypal": {
            "$ref": "#/components/schemas/payment_method_domain_resource_payment_method_status"
          }
        },
        "required": [
          "apple_pay",
          "created",
          "domain_name",
          "enabled",
          "google_pay",
          "id",
          "link",
          "livemode",
          "object",
          "paypal"
        ],
        "title": "PaymentMethodDomainResourcePaymentMethodDomain",
        "type": "object",
        "x-expandableFields": [
          "apple_pay",
          "google_pay",
          "link",
          "paypal"
        ],
        "x-resourceId": "payment_method_domain"
      },
      "payment_method_domain_resource_payment_method_status": {
        "description": "Indicates the status of a specific payment method on a payment method domain.",
        "properties": {
          "status": {
            "description": "The status of the payment method on the domain.",
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string"
          },
          "status_details": {
            "$ref": "#/components/schemas/payment_method_domain_resource_payment_method_status_details"
          }
        },
        "required": [
          "status"
        ],
        "title": "PaymentMethodDomainResourcePaymentMethodStatus",
        "type": "object",
        "x-expandableFields": [
          "status_details"
        ]
      },
      "payment_method_domain_resource_payment_method_status_details": {
        "description": "Contains additional details about the status of a payment method for a specific payment method domain.",
        "properties": {
          "error_message": {
            "description": "The error message associated with the status of the payment method on the domain.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "error_message"
        ],
        "title": "PaymentMethodDomainResourcePaymentMethodStatusDetails",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_eps": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.",
            "enum": [
              "arzte_und_apotheker_bank",
              "austrian_anadi_bank_ag",
              "bank_austria",
              "bankhaus_carl_spangler",
              "bankhaus_schelhammer_und_schattera_ag",
              "bawag_psk_ag",
              "bks_bank_ag",
              "brull_kallmus_bank_ag",
              "btv_vier_lander_bank",
              "capital_bank_grawe_gruppe_ag",
              "deutsche_bank_ag",
              "dolomitenbank",
              "easybank_ag",
              "erste_bank_und_sparkassen",
              "hypo_alpeadriabank_international_ag",
              "hypo_bank_burgenland_aktiengesellschaft",
              "hypo_noe_lb_fur_niederosterreich_u_wien",
              "hypo_oberosterreich_salzburg_steiermark",
              "hypo_tirol_bank_ag",
              "hypo_vorarlberg_bank_ag",
              "marchfelder_bank",
              "oberbank_ag",
              "raiffeisen_bankengruppe_osterreich",
              "schoellerbank_ag",
              "sparda_bank_wien",
              "volksbank_gruppe",
              "volkskreditbank_ag",
              "vr_bank_braunau"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_eps",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_fpx": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.",
            "enum": [
              "affin_bank",
              "agrobank",
              "alliance_bank",
              "ambank",
              "bank_islam",
              "bank_muamalat",
              "bank_of_china",
              "bank_rakyat",
              "bsn",
              "cimb",
              "deutsche_bank",
              "hong_leong_bank",
              "hsbc",
              "kfh",
              "maybank2e",
              "maybank2u",
              "ocbc",
              "pb_enterprise",
              "public_bank",
              "rhb",
              "standard_chartered",
              "uob"
            ],
            "type": "string"
          }
        },
        "required": [
          "bank"
        ],
        "title": "payment_method_fpx",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_giropay": {
        "description": "",
        "properties": {},
        "title": "payment_method_giropay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_grabpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_grabpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_ideal": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.",
            "enum": [
              "abn_amro",
              "asn_bank",
              "bunq",
              "handelsbanken",
              "ing",
              "knab",
              "moneyou",
              "n26",
              "rabobank",
              "regiobank",
              "revolut",
              "sns_bank",
              "triodos_bank",
              "van_lanschot",
              "yoursafe"
            ],
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "The Bank Identifier Code of the customer's bank, if the bank was provided.",
            "enum": [
              "ABNANL2A",
              "ASNBNL21",
              "BITSNL2A",
              "BUNQNL2A",
              "FVLBNL22",
              "HANDNL2A",
              "INGBNL2A",
              "KNABNL2H",
              "MOYONL21",
              "NTSBDEB1",
              "RABONL2U",
              "RBRBNL21",
              "REVOIE23",
              "REVOLT21",
              "SNSBNL2A",
              "TRIONL2U"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_ideal",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_interac_present": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `interac`, `mastercard` or `visa`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_name": {
            "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_present_networks"
              }
            ],
            "description": "Contains information about card networks that can be used to process the payment.",
            "nullable": true
          },
          "preferred_locales": {
            "description": "EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "read_method": {
            "description": "How card details were read in this transaction.",
            "enum": [
              "contact_emv",
              "contactless_emv",
              "contactless_magstripe_mode",
              "magnetic_stripe_fallback",
              "magnetic_stripe_track2"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "exp_month",
          "exp_year"
        ],
        "title": "payment_method_interac_present",
        "type": "object",
        "x-expandableFields": [
          "networks"
        ]
      },
      "payment_method_klarna": {
        "description": "",
        "properties": {
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_flows_private_payment_methods_klarna_dob"
              }
            ],
            "description": "The customer's date of birth, if provided.",
            "nullable": true
          }
        },
        "title": "payment_method_klarna",
        "type": "object",
        "x-expandableFields": [
          "dob"
        ]
      },
      "payment_method_konbini": {
        "description": "",
        "properties": {},
        "title": "payment_method_konbini",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_link": {
        "description": "",
        "properties": {
          "email": {
            "description": "Account owner's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_link",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_affirm": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "preferred_locale": {
            "description": "Preferred language of the Affirm authorization page that the customer is redirected to.",
            "maxLength": 30,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_affirm",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_afterpay_clearpay": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "reference": {
            "description": "An internal identifier or reference that this payment corresponds to. You must limit the identifier to 128 characters, and it can only contain letters, numbers, underscores, backslashes, and dashes.\nThis field differs from the statement descriptor and item name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "payment_method_options_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_alipay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_alipay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_bacs_debit": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_bacs_debit",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_bancontact": {
        "description": "",
        "properties": {
          "preferred_language": {
            "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "required": [
          "preferred_language"
        ],
        "title": "payment_method_options_bancontact",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_boleto": {
        "description": "",
        "properties": {
          "expires_after_days": {
            "description": "The number of calendar days before a Boleto voucher expires. For example, if you create a Boleto voucher on Monday and you set expires_after_days to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo time.",
            "type": "integer"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "required": [
          "expires_after_days"
        ],
        "title": "payment_method_options_boleto",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_card_installments": {
        "description": "",
        "properties": {
          "available_plans": {
            "description": "Installment plans that may be selected for this PaymentIntent.",
            "items": {
              "$ref": "#/components/schemas/payment_method_details_card_installments_plan"
            },
            "nullable": true,
            "type": "array"
          },
          "enabled": {
            "description": "Whether Installments are enabled for this PaymentIntent.",
            "type": "boolean"
          },
          "plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_installments_plan"
              }
            ],
            "description": "Installment plan selected for this PaymentIntent.",
            "nullable": true
          }
        },
        "required": [
          "enabled"
        ],
        "title": "payment_method_options_card_installments",
        "type": "object",
        "x-expandableFields": [
          "available_plans",
          "plan"
        ]
      },
      "payment_method_options_card_mandate_options": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount to be charged for future payments.",
            "type": "integer"
          },
          "amount_type": {
            "description": "One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.",
            "enum": [
              "fixed",
              "maximum"
            ],
            "type": "string"
          },
          "description": {
            "description": "A description of the mandate or subscription that is meant to be displayed to the customer.",
            "maxLength": 200,
            "nullable": true,
            "type": "string"
          },
          "end_date": {
            "description": "End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "interval": {
            "description": "Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.",
            "enum": [
              "day",
              "month",
              "sporadic",
              "week",
              "year"
            ],
            "type": "string"
          },
          "interval_count": {
            "description": "The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.",
            "nullable": true,
            "type": "integer"
          },
          "reference": {
            "description": "Unique identifier for the mandate or subscription.",
            "maxLength": 80,
            "type": "string"
          },
          "start_date": {
            "description": "Start date of the mandate or subscription. Start date should not be lesser than yesterday.",
            "format": "unix-time",
            "type": "integer"
          },
          "supported_types": {
            "description": "Specifies the type of mandates supported. Possible values are `india`.",
            "items": {
              "enum": [
                "india"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "amount",
          "amount_type",
          "interval",
          "reference",
          "start_date"
        ],
        "title": "payment_method_options_card_mandate_options",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_card_present": {
        "description": "",
        "properties": {
          "request_extended_authorization": {
            "description": "Request ability to capture this payment beyond the standard [authorization validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)",
            "nullable": true,
            "type": "boolean"
          },
          "request_incremental_authorization_support": {
            "description": "Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations) this PaymentIntent if the combination of MCC and card brand is eligible. Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported) in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response to verify support.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "title": "payment_method_options_card_present",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_cashapp": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_cashapp",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_customer_balance": {
        "description": "",
        "properties": {
          "bank_transfer": {
            "$ref": "#/components/schemas/payment_method_options_customer_balance_bank_transfer"
          },
          "funding_type": {
            "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
            "enum": [
              "bank_transfer"
            ],
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_customer_balance",
        "type": "object",
        "x-expandableFields": [
          "bank_transfer"
        ]
      },
      "payment_method_options_customer_balance_bank_transfer": {
        "description": "",
        "properties": {
          "eu_bank_transfer": {
            "$ref": "#/components/schemas/payment_method_options_customer_balance_eu_bank_account"
          },
          "requested_address_types": {
            "description": "List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.\n\nPermitted values include: `sort_code`, `zengin`, `iban`, or `spei`.",
            "items": {
              "enum": [
                "aba",
                "iban",
                "sepa",
                "sort_code",
                "spei",
                "swift",
                "zengin"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "type": {
            "description": "The bank transfer type that this PaymentIntent is allowed to use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.",
            "enum": [
              "eu_bank_transfer",
              "gb_bank_transfer",
              "jp_bank_transfer",
              "mx_bank_transfer",
              "us_bank_transfer"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "payment_method_options_customer_balance_bank_transfer",
        "type": "object",
        "x-expandableFields": [
          "eu_bank_transfer"
        ]
      },
      "payment_method_options_customer_balance_eu_bank_account": {
        "description": "",
        "properties": {
          "country": {
            "description": "The desired country code of the bank account information. Permitted values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.",
            "enum": [
              "BE",
              "DE",
              "ES",
              "FR",
              "IE",
              "NL"
            ],
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "title": "payment_method_options_customer_balance_eu_bank_account",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_fpx": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_fpx",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_giropay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_giropay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_grabpay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_grabpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_ideal": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_ideal",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_interac_present": {
        "description": "",
        "properties": {},
        "title": "payment_method_options_interac_present",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_klarna": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "preferred_locale": {
            "description": "Preferred locale of the Klarna checkout page that the customer is redirected to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_klarna",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_konbini": {
        "description": "",
        "properties": {
          "confirmation_number": {
            "description": "An optional 10 to 11 digit numeric-only string determining the confirmation code at applicable convenience stores.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "expires_after_days": {
            "description": "The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.",
            "nullable": true,
            "type": "integer"
          },
          "expires_at": {
            "description": "The timestamp at which the Konbini payment instructions will expire. Only one of `expires_after_days` or `expires_at` may be set.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "product_description": {
            "description": "A product descriptor of up to 22 characters, which will appear to customers at the convenience store.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_konbini",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_oxxo": {
        "description": "",
        "properties": {
          "expires_after_days": {
            "description": "The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.",
            "type": "integer"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "expires_after_days"
        ],
        "title": "payment_method_options_oxxo",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_p24": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_p24",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_paynow": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_paynow",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_paypal": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "preferred_locale": {
            "description": "Preferred locale of the PayPal checkout page that the customer is redirected to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "description": "A reference of the PayPal transaction visible to customer which is mapped to PayPal's invoice ID. This must be a globally unique ID if you have configured in your PayPal settings to block multiple payments per invoice ID.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_paypal",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_pix": {
        "description": "",
        "properties": {
          "expires_after_seconds": {
            "description": "The number of seconds (between 10 and 1209600) after which Pix payment will expire.",
            "nullable": true,
            "type": "integer"
          },
          "expires_at": {
            "description": "The timestamp at which the Pix expires.",
            "nullable": true,
            "type": "integer"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_pix",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_promptpay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_promptpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_revolut_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_options_revolut_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_sofort": {
        "description": "",
        "properties": {
          "preferred_language": {
            "description": "Preferred language of the SOFORT authorization page that the customer is redirected to.",
            "enum": [
              "de",
              "en",
              "es",
              "fr",
              "it",
              "nl",
              "pl"
            ],
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_sofort",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_wechat_pay": {
        "description": "",
        "properties": {
          "app_id": {
            "description": "The app ID registered with WeChat Pay. Only required when client is ios or android.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "client": {
            "description": "The client type that the end customer will pay from",
            "enum": [
              "android",
              "ios",
              "web"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_wechat_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_options_zip": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_zip",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_oxxo": {
        "description": "",
        "properties": {},
        "title": "payment_method_oxxo",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_p24": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided.",
            "enum": [
              "alior_bank",
              "bank_millennium",
              "bank_nowy_bfg_sa",
              "bank_pekao_sa",
              "banki_spbdzielcze",
              "blik",
              "bnp_paribas",
              "boz",
              "citi_handlowy",
              "credit_agricole",
              "envelobank",
              "etransfer_pocztowy24",
              "getin_bank",
              "ideabank",
              "ing",
              "inteligo",
              "mbank_mtransfer",
              "nest_przelew",
              "noble_pay",
              "pbac_z_ipko",
              "plus_bank",
              "santander_przelew24",
              "tmobile_usbugi_bankowe",
              "toyota_bank",
              "volkswagen_bank"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "payment_method_p24",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_paynow": {
        "description": "",
        "properties": {},
        "title": "payment_method_paynow",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_paypal": {
        "description": "",
        "properties": {
          "payer_email": {
            "description": "Owner's email. Values are provided by PayPal directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payer_id": {
            "description": "PayPal account PayerID. This identifier uniquely identifies the PayPal customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_paypal",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_pix": {
        "description": "",
        "properties": {},
        "title": "payment_method_pix",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_promptpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_promptpay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_revolut_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_revolut_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_sepa_debit": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "description": "Branch code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_from": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/sepa_debit_generated_from"
              }
            ],
            "description": "Information about the object that generated this PaymentMethod.",
            "nullable": true
          },
          "last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_sepa_debit",
        "type": "object",
        "x-expandableFields": [
          "generated_from"
        ]
      },
      "payment_method_sofort": {
        "description": "",
        "properties": {
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_sofort",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "The name of the bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "financial_connections_account": {
            "description": "The ID of the Financial Connections Account used to create the payment method.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/us_bank_account_networks"
              }
            ],
            "description": "Contains information about US bank account networks that can be used.",
            "nullable": true
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_us_bank_account_status_details"
              }
            ],
            "description": "Contains information about the future reusability of this PaymentMethod.",
            "nullable": true
          }
        },
        "title": "payment_method_us_bank_account",
        "type": "object",
        "x-expandableFields": [
          "networks",
          "status_details"
        ]
      },
      "payment_method_us_bank_account_blocked": {
        "description": "",
        "properties": {
          "network_code": {
            "description": "The ACH network code that resulted in this block.",
            "enum": [
              "R02",
              "R03",
              "R04",
              "R05",
              "R07",
              "R08",
              "R10",
              "R11",
              "R16",
              "R20",
              "R29",
              "R31"
            ],
            "nullable": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason why this PaymentMethod's fingerprint has been blocked",
            "enum": [
              "bank_account_closed",
              "bank_account_frozen",
              "bank_account_invalid_details",
              "bank_account_restricted",
              "bank_account_unusable",
              "debit_not_authorized"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_us_bank_account_blocked",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_us_bank_account_status_details": {
        "description": "",
        "properties": {
          "blocked": {
            "$ref": "#/components/schemas/payment_method_us_bank_account_blocked"
          }
        },
        "title": "payment_method_us_bank_account_status_details",
        "type": "object",
        "x-expandableFields": [
          "blocked"
        ]
      },
      "payment_method_wechat_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_wechat_pay",
        "type": "object",
        "x-expandableFields": []
      },
      "payment_method_zip": {
        "description": "",
        "properties": {},
        "title": "payment_method_zip",
        "type": "object",
        "x-expandableFields": []
      },
      "paypal_seller_protection": {
        "description": "",
        "properties": {
          "dispute_categories": {
            "description": "An array of conditions that are covered for the transaction, if applicable.",
            "items": {
              "enum": [
                "fraudulent",
                "product_not_received"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          },
          "status": {
            "description": "Indicates whether the transaction is eligible for PayPal's seller protection.",
            "enum": [
              "eligible",
              "not_eligible",
              "partially_eligible"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "paypal_seller_protection",
        "type": "object",
        "x-expandableFields": []
      },
      "payout": {
        "description": "A `Payout` object is created when you receive funds from Stripe, or when you\ninitiate a payout to either a bank account or debit card of a [connected\nStripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,\nand list all payouts. Payouts are made on [varying\nschedules](/docs/connect/manage-payout-schedule), depending on your country and\nindustry.\n\nRelated guide: [Receiving payouts](https://stripe.com/docs/payouts)",
        "properties": {
          "amount": {
            "description": "The amount (in cents (or local equivalent)) that transfers to your bank account or debit card.",
            "type": "integer"
          },
          "arrival_date": {
            "description": "Date that you can expect the payout to arrive in the bank. This factors in delays to account for weekends or bank holidays.",
            "format": "unix-time",
            "type": "integer"
          },
          "automatic": {
            "description": "Returns `true` if the payout is created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule) and `false` if it's [requested manually](https://stripe.com/docs/payouts#manual-payouts).",
            "type": "boolean"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the impact of this payout on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/bank_account"
              },
              {
                "$ref": "#/components/schemas/card"
              },
              {
                "$ref": "#/components/schemas/deleted_bank_account"
              },
              {
                "$ref": "#/components/schemas/deleted_card"
              }
            ],
            "description": "ID of the bank account or card the payout is sent to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/deleted_bank_account"
                },
                {
                  "$ref": "#/components/schemas/deleted_card"
                }
              ]
            },
            "x-stripeBypassValidation": true
          },
          "failure_balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "If the payout fails or cancels, this is the ID of the balance transaction that reverses the initial balance transaction and returns the funds from the failed payout back in your balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "failure_code": {
            "description": "Error code that provides a reason for a payout failure, if available. View our [list of failure codes](https://stripe.com/docs/api#payout_failures).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Message that provides the reason for a payout failure, if available.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "method": {
            "description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is supported for payouts to debit cards and bank accounts in certain countries. Learn more about [bank support for Instant Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payout"
            ],
            "type": "string"
          },
          "original_payout": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payout"
              }
            ],
            "description": "If the payout reverses another, this is the ID of the original payout.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payout"
                }
              ]
            }
          },
          "reconciliation_status": {
            "description": "If `completed`, you can use the [Balance Transactions API](https://stripe.com/docs/api/balance_transactions/list#balance_transaction_list-payout) to list all balance transactions that are paid out in this payout.",
            "enum": [
              "completed",
              "in_progress",
              "not_applicable"
            ],
            "type": "string"
          },
          "reversed_by": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payout"
              }
            ],
            "description": "If the payout reverses, this is the ID of the payout that reverses this payout.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payout"
                }
              ]
            }
          },
          "source_type": {
            "description": "The source balance this payout came from, which can be one of the following: `card`, `fpx`, or `bank_account`.",
            "maxLength": 5000,
            "type": "string"
          },
          "statement_descriptor": {
            "description": "Extra information about a payout that displays on the user's bank statement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it's submitted to the bank, when it becomes `in_transit`. The status changes to `paid` if the transaction succeeds, or to `failed` or `canceled` (within 5 business days). Some payouts that fail might initially show as `paid`, then change to `failed`.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "Can be `bank_account` or `card`.",
            "enum": [
              "bank_account",
              "card"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "amount",
          "arrival_date",
          "automatic",
          "created",
          "currency",
          "id",
          "livemode",
          "method",
          "object",
          "reconciliation_status",
          "source_type",
          "status",
          "type"
        ],
        "title": "Payout",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "destination",
          "failure_balance_transaction",
          "original_payout",
          "reversed_by"
        ],
        "x-resourceId": "payout"
      },
      "person": {
        "description": "This is an object representing a person associated with a Stripe account.\n\nA platform cannot access a Standard or Express account's persons after the account starts onboarding, such as after generating an account link for the account.\nSee the [Standard onboarding](https://stripe.com/docs/connect/standard-accounts) or [Express onboarding documentation](https://stripe.com/docs/connect/express-accounts) for information about platform prefilling and account onboarding steps.\n\nRelated guide: [Handling identity verification with the API](https://stripe.com/docs/connect/handling-api-verification#person-information)",
        "properties": {
          "account": {
            "description": "The account the person is associated with.",
            "maxLength": 5000,
            "type": "string"
          },
          "additional_tos_acceptances": {
            "$ref": "#/components/schemas/person_additional_tos_acceptances"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "dob": {
            "$ref": "#/components/schemas/legal_entity_dob"
          },
          "email": {
            "description": "The person's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "The person's first name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kana": {
            "description": "The Kana variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kanji": {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "full_name_aliases": {
            "description": "A list of alternate names or aliases that the person is known by.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "future_requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_future_requirements"
              }
            ],
            "nullable": true
          },
          "gender": {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "id_number_provided": {
            "description": "Whether the person's `id_number` was provided. True if either the full ID number was provided or if only the required part of the ID number was provided (ex. last four of an individual's SSN for the US indicated by `ssn_last_4_provided`).",
            "type": "boolean"
          },
          "id_number_secondary_provided": {
            "description": "Whether the person's `id_number_secondary` was provided.",
            "type": "boolean"
          },
          "last_name": {
            "description": "The person's last name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kana": {
            "description": "The Kana variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kanji": {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "maiden_name": {
            "description": "The person's maiden name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "nationality": {
            "description": "The country where the person is a national.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "person"
            ],
            "type": "string"
          },
          "phone": {
            "description": "The person's phone number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "political_exposure": {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "enum": [
              "existing",
              "none"
            ],
            "type": "string"
          },
          "registered_address": {
            "$ref": "#/components/schemas/address"
          },
          "relationship": {
            "$ref": "#/components/schemas/person_relationship"
          },
          "requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_requirements"
              }
            ],
            "nullable": true
          },
          "ssn_last_4_provided": {
            "description": "Whether the last four digits of the person's Social Security number have been provided (U.S. only).",
            "type": "boolean"
          },
          "verification": {
            "$ref": "#/components/schemas/legal_entity_person_verification"
          }
        },
        "required": [
          "account",
          "created",
          "id",
          "object"
        ],
        "title": "Person",
        "type": "object",
        "x-expandableFields": [
          "additional_tos_acceptances",
          "address",
          "address_kana",
          "address_kanji",
          "dob",
          "future_requirements",
          "registered_address",
          "relationship",
          "requirements",
          "verification"
        ],
        "x-resourceId": "person"
      },
      "person_additional_tos_acceptance": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the legal guardian accepted the service agreement.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the legal guardian accepted the service agreement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the legal guardian accepted the service agreement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "PersonAdditionalTOSAcceptance",
        "type": "object",
        "x-expandableFields": []
      },
      "person_additional_tos_acceptances": {
        "description": "",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/person_additional_tos_acceptance"
          }
        },
        "required": [
          "account"
        ],
        "title": "PersonAdditionalTOSAcceptances",
        "type": "object",
        "x-expandableFields": [
          "account"
        ]
      },
      "person_future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash, and may immediately become `past_due`, but the account may also be given a grace period depending on the account's enablement state prior to transition.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `future_requirements[current_deadline]` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by the account's `requirements.current_deadline`. These fields need to be collected to enable the person's account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "PersonFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "person_relationship": {
        "description": "",
        "properties": {
          "director": {
            "description": "Whether the person is a director of the account's legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.",
            "nullable": true,
            "type": "boolean"
          },
          "executive": {
            "description": "Whether the person has significant responsibility to control, manage, or direct the organization.",
            "nullable": true,
            "type": "boolean"
          },
          "legal_guardian": {
            "description": "Whether the person is the legal guardian of the account's representative.",
            "nullable": true,
            "type": "boolean"
          },
          "owner": {
            "description": "Whether the person is an owner of the account’s legal entity.",
            "nullable": true,
            "type": "boolean"
          },
          "percent_ownership": {
            "description": "The percent owned by the person of the account's legal entity.",
            "nullable": true,
            "type": "number"
          },
          "representative": {
            "description": "Whether the person is authorized as the primary representative of the account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account.",
            "nullable": true,
            "type": "boolean"
          },
          "title": {
            "description": "The person's title (e.g., CEO, Support Engineer).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "PersonRelationship",
        "type": "object",
        "x-expandableFields": []
      },
      "person_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable the person's account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "PersonRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ]
      },
      "platform_tax_fee": {
        "description": "",
        "properties": {
          "account": {
            "description": "The Connected account that incurred this charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "platform_tax_fee"
            ],
            "type": "string"
          },
          "source_transaction": {
            "description": "The payment object that caused this tax to be inflicted.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "The type of tax (VAT).",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account",
          "id",
          "object",
          "source_transaction",
          "type"
        ],
        "title": "PlatformTax",
        "type": "object",
        "x-expandableFields": []
      },
      "legal_entity_person_verification": {
        "description": "",
        "properties": {
          "additional_document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_person_verification_document"
              }
            ],
            "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
            "nullable": true
          },
          "details": {
            "description": "A user-displayable string describing the verification state for the person. For example, this may say \"Provided identity information could not be verified\".",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_address_mismatch`, `document_dob_mismatch`, `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`, `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "document": {
            "$ref": "#/components/schemas/legal_entity_person_verification_document"
          },
          "status": {
            "description": "The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "LegalEntityPersonVerification",
        "type": "object",
        "x-expandableFields": [
          "additional_document",
          "document"
        ]
      },
      "legal_entity_person_verification_document": {
        "description": "",
        "properties": {
          "back": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "details": {
            "description": "A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say \"Identity document is too unclear to read\".",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_corrupt`, `document_country_not_supported`, `document_expired`, `document_failed_copy`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_failed_greyscale`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_not_readable`, `document_not_uploaded`, `document_photo_mismatch`, `document_too_large`, or `document_type_not_supported`. A machine-readable code specifying the verification state for this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "front": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "title": "LegalEntityPersonVerificationDocument",
        "type": "object",
        "x-expandableFields": [
          "back",
          "front"
        ]
      },
      "promotion_code": {
        "description": "A Promotion Code represents a customer-redeemable code for a [coupon](https://stripe.com/docs/api#coupons). It can be used to\ncreate multiple codes for a single coupon.",
        "properties": {
          "active": {
            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.",
            "type": "boolean"
          },
          "code": {
            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
            "maxLength": 5000,
            "type": "string"
          },
          "coupon": {
            "$ref": "#/components/schemas/coupon"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The customer that this promotion code can be used by.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "expires_at": {
            "description": "Date at which the promotion code can no longer be redeemed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "max_redemptions": {
            "description": "Maximum number of times this promotion code can be redeemed.",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "promotion_code"
            ],
            "type": "string"
          },
          "restrictions": {
            "$ref": "#/components/schemas/promotion_codes_resource_restrictions"
          },
          "times_redeemed": {
            "description": "Number of times this promotion code has been used.",
            "type": "integer"
          }
        },
        "required": [
          "active",
          "code",
          "coupon",
          "created",
          "id",
          "livemode",
          "object",
          "restrictions",
          "times_redeemed"
        ],
        "title": "PromotionCode",
        "type": "object",
        "x-expandableFields": [
          "coupon",
          "customer",
          "restrictions"
        ],
        "x-resourceId": "promotion_code"
      },
      "promotion_code_currency_option": {
        "description": "",
        "properties": {
          "minimum_amount": {
            "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).",
            "type": "integer"
          }
        },
        "required": [
          "minimum_amount"
        ],
        "title": "PromotionCodeCurrencyOption",
        "type": "object",
        "x-expandableFields": []
      },
      "promotion_codes_resource_restrictions": {
        "description": "",
        "properties": {
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/promotion_code_currency_option"
            },
            "description": "Promotion code restrictions defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "first_time_transaction": {
            "description": "A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices",
            "type": "boolean"
          },
          "minimum_amount": {
            "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).",
            "nullable": true,
            "type": "integer"
          },
          "minimum_amount_currency": {
            "description": "Three-letter [ISO code](https://stripe.com/docs/currencies) for minimum_amount",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "first_time_transaction"
        ],
        "title": "PromotionCodesResourceRestrictions",
        "type": "object",
        "x-expandableFields": [
          "currency_options"
        ]
      },
      "quote": {
        "description": "A Quote is a way to model prices that you'd like to provide to a customer.\nOnce accepted, it will automatically create an invoice, subscription or subscription schedule.",
        "properties": {
          "amount_subtotal": {
            "description": "Total before any discounts or taxes are applied.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total after discounts and taxes are applied.",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "application_fee_amount": {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.",
            "nullable": true,
            "type": "integer"
          },
          "application_fee_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/quotes_resource_automatic_tax"
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "type": "string"
          },
          "computed": {
            "$ref": "#/components/schemas/quotes_resource_computed"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The customer which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "default_tax_rates": {
            "description": "The tax rates applied to this quote.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_rate"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_rate"
                  }
                ]
              }
            },
            "type": "array"
          },
          "description": {
            "description": "A description that will be displayed on the quote PDF.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discounts": {
            "description": "The discounts applied to this quote.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ]
              }
            },
            "type": "array"
          },
          "expires_at": {
            "description": "The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "footer": {
            "description": "A footer that will be displayed on the quote PDF.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "from_quote": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/quotes_resource_from_quote"
              }
            ],
            "description": "Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone) for more details.",
            "nullable": true
          },
          "header": {
            "description": "A header that will be displayed on the quote PDF.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              },
              {
                "$ref": "#/components/schemas/deleted_invoice"
              }
            ],
            "description": "The invoice that was created from this quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                },
                {
                  "$ref": "#/components/schemas/deleted_invoice"
                }
              ]
            }
          },
          "invoice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_quote_setting"
              }
            ],
            "description": "All invoices will be billed using the specified settings.",
            "nullable": true
          },
          "line_items": {
            "description": "A list of items the customer is being quoted for.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "QuotesResourceListLineItems",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "number": {
            "description": "A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "quote"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "status": {
            "description": "The status of the quote.",
            "enum": [
              "accepted",
              "canceled",
              "draft",
              "open"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "status_transitions": {
            "$ref": "#/components/schemas/quotes_resource_status_transitions"
          },
          "subscription": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription"
              }
            ],
            "description": "The subscription that was created or updated from this quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ]
            }
          },
          "subscription_data": {
            "$ref": "#/components/schemas/quotes_resource_subscription_data_subscription_data"
          },
          "subscription_schedule": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription_schedule"
              }
            ],
            "description": "The subscription schedule that was created or updated from this quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ]
            }
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this quote belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          },
          "total_details": {
            "$ref": "#/components/schemas/quotes_resource_total_details"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/quotes_resource_transfer_data"
              }
            ],
            "description": "The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the invoices.",
            "nullable": true
          }
        },
        "required": [
          "amount_subtotal",
          "amount_total",
          "automatic_tax",
          "collection_method",
          "computed",
          "created",
          "discounts",
          "expires_at",
          "id",
          "livemode",
          "metadata",
          "object",
          "status",
          "status_transitions",
          "subscription_data",
          "total_details"
        ],
        "title": "Quote",
        "type": "object",
        "x-expandableFields": [
          "application",
          "automatic_tax",
          "computed",
          "customer",
          "default_tax_rates",
          "discounts",
          "from_quote",
          "invoice",
          "invoice_settings",
          "line_items",
          "on_behalf_of",
          "status_transitions",
          "subscription",
          "subscription_data",
          "subscription_schedule",
          "test_clock",
          "total_details",
          "transfer_data"
        ],
        "x-resourceId": "quote"
      },
      "radar_radar_options": {
        "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
        "properties": {
          "session": {
            "description": "A [Radar Session](https://stripe.com/docs/radar/radar-session) is a snapshot of the browser metadata and device details that help Radar make more accurate predictions on your payments.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "RadarRadarOptions",
        "type": "object",
        "x-expandableFields": []
      },
      "refund": {
        "description": "Refund objects allow you to refund a previously created charge that isn't\nrefunded yet. Funds are refunded to the credit or debit card that's\ninitially charged.\n\nRelated guide: [Refunds](https://stripe.com/docs/refunds)",
        "properties": {
          "amount": {
            "description": "Amount, in cents (or local equivalent).",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge that's refunded.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. You can use this for displaying to users (available on non-card refunds only).",
            "maxLength": 5000,
            "type": "string"
          },
          "failure_balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "After the refund fails, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "failure_reason": {
            "description": "Provides the reason for the refund failure. Possible values are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`, `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "instructions_email": {
            "description": "For payment methods without native refund support (for example, Konbini, PromptPay), provide an email address for the customer to receive refund instructions.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "next_action": {
            "$ref": "#/components/schemas/refund_next_action"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "refund"
            ],
            "type": "string"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the PaymentIntent that's refunded.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "reason": {
            "description": "Reason for the refund, which is either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).",
            "enum": [
              "duplicate",
              "expired_uncaptured_charge",
              "fraudulent",
              "requested_by_customer"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this refund.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "source_transfer_reversal": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer_reversal"
              }
            ],
            "description": "The transfer reversal that's associated with the refund. Only present if the charge came from another Stripe account.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ]
            }
          },
          "status": {
            "description": "Status of the refund. For credit card refunds, this can be `pending`, `succeeded`, or `failed`. For other types of refunds, it can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transfer_reversal": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer_reversal"
              }
            ],
            "description": "This refers to the transfer reversal object if the accompanying transfer reverses. This is only applicable if the charge was created using the destination parameter.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "id",
          "object"
        ],
        "title": "Refund",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "charge",
          "failure_balance_transaction",
          "next_action",
          "payment_intent",
          "source_transfer_reversal",
          "transfer_reversal"
        ],
        "x-resourceId": "refund"
      },
      "reserve_transaction": {
        "description": "",
        "properties": {
          "amount": {
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "reserve_transaction"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "id",
          "object"
        ],
        "title": "ReserveTransaction",
        "type": "object",
        "x-expandableFields": []
      },
      "review": {
        "description": "Reviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](/radar) and reviewing payments\n[here](https://stripe.com/docs/radar/reviews).",
        "properties": {
          "billing_zip": {
            "description": "The ZIP or postal code of the card used, if applicable.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "The charge associated with this review.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "closed_reason": {
            "description": "The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
            "enum": [
              "approved",
              "disputed",
              "redacted",
              "refunded",
              "refunded_as_fraud"
            ],
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ip_address": {
            "description": "The IP address where the payment originated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "ip_address_location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/radar_review_resource_location"
              }
            ],
            "description": "Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.",
            "nullable": true
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "review"
            ],
            "type": "string"
          },
          "open": {
            "description": "If `true`, the review needs action.",
            "type": "boolean"
          },
          "opened_reason": {
            "description": "The reason the review was opened. One of `rule` or `manual`.",
            "enum": [
              "manual",
              "rule"
            ],
            "type": "string"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The PaymentIntent ID associated with this review, if one exists.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "reason": {
            "description": "The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
            "maxLength": 5000,
            "type": "string"
          },
          "session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/radar_review_resource_session"
              }
            ],
            "description": "Information related to the browsing session of the user who initiated the payment.",
            "nullable": true
          }
        },
        "required": [
          "created",
          "id",
          "livemode",
          "object",
          "open",
          "opened_reason",
          "reason"
        ],
        "title": "RadarReview",
        "type": "object",
        "x-expandableFields": [
          "charge",
          "ip_address_location",
          "payment_intent",
          "session"
        ],
        "x-resourceId": "review"
      },
      "rule": {
        "description": "",
        "properties": {
          "action": {
            "description": "The action taken on the payment.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "predicate": {
            "description": "The predicate to evaluate the payment against.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "action",
          "id",
          "predicate"
        ],
        "title": "RadarRule",
        "type": "object",
        "x-expandableFields": []
      },
      "sepa_debit_generated_from": {
        "description": "",
        "properties": {
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "The ID of the Charge that generated this PaymentMethod, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "setup_attempt": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_attempt"
              }
            ],
            "description": "The ID of the SetupAttempt that generated this PaymentMethod, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_attempt"
                }
              ]
            }
          }
        },
        "title": "sepa_debit_generated_from",
        "type": "object",
        "x-expandableFields": [
          "charge",
          "setup_attempt"
        ]
      },
      "setup_attempt": {
        "description": "A SetupAttempt describes one attempted confirmation of a SetupIntent,\nwhether that confirmation is successful or unsuccessful. You can use\nSetupAttempts to inspect details of a specific attempt at setting up a\npayment method using a SetupIntent.",
        "properties": {
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "The value of [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application) on the SetupIntent at the time of this confirmation.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "attach_to_self": {
            "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The value of [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer) on the SetupIntent at the time of this confirmation.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "flow_directions": {
            "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
            "items": {
              "enum": [
                "inbound",
                "outbound"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "setup_attempt"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The value of [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of) on the SetupIntent at the time of this confirmation.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the payment method used with this SetupAttempt.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "payment_method_details": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details"
          },
          "setup_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/api_errors"
              }
            ],
            "description": "The error encountered during this attempt to confirm the SetupIntent, if any.",
            "nullable": true
          },
          "setup_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_intent"
              }
            ],
            "description": "ID of the SetupIntent that this attempt belongs to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ]
            }
          },
          "status": {
            "description": "Status of this SetupAttempt, one of `requires_confirmation`, `requires_action`, `processing`, `succeeded`, `failed`, or `abandoned`.",
            "maxLength": 5000,
            "type": "string"
          },
          "usage": {
            "description": "The value of [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage) on the SetupIntent at the time of this confirmation, one of `off_session` or `on_session`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "id",
          "livemode",
          "object",
          "payment_method",
          "payment_method_details",
          "setup_intent",
          "status",
          "usage"
        ],
        "title": "PaymentFlowsSetupIntentSetupAttempt",
        "type": "object",
        "x-expandableFields": [
          "application",
          "customer",
          "on_behalf_of",
          "payment_method",
          "payment_method_details",
          "setup_error",
          "setup_intent"
        ],
        "x-resourceId": "setup_attempt"
      },
      "shipping": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "carrier": {
            "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Recipient name.",
            "maxLength": 5000,
            "type": "string"
          },
          "phone": {
            "description": "Recipient phone (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tracking_number": {
            "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Shipping",
        "type": "object",
        "x-expandableFields": [
          "address"
        ]
      },
      "shipping_rate": {
        "description": "Shipping rates describe the price of shipping presented to your customers and\napplied to a purchase. For more information, see [Charge for shipping](https://stripe.com/docs/payments/during-payment/charge-shipping).",
        "properties": {
          "active": {
            "description": "Whether the shipping rate can be used for new purchases. Defaults to `true`.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "delivery_estimate": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping_rate_delivery_estimate"
              }
            ],
            "description": "The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.",
            "nullable": true
          },
          "display_name": {
            "description": "The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fixed_amount": {
            "$ref": "#/components/schemas/shipping_rate_fixed_amount"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "shipping_rate"
            ],
            "type": "string"
          },
          "tax_behavior": {
            "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "nullable": true,
            "type": "string"
          },
          "tax_code": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/tax_code"
              }
            ],
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/tax_code"
                }
              ]
            }
          },
          "type": {
            "description": "The type of calculation to use on the shipping rate. Can only be `fixed_amount` for now.",
            "enum": [
              "fixed_amount"
            ],
            "type": "string"
          }
        },
        "required": [
          "active",
          "created",
          "id",
          "livemode",
          "metadata",
          "object",
          "type"
        ],
        "title": "ShippingRate",
        "type": "object",
        "x-expandableFields": [
          "delivery_estimate",
          "fixed_amount",
          "tax_code"
        ],
        "x-resourceId": "shipping_rate"
      },
      "source": {
        "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nStripe doesn't recommend using the deprecated [Sources API](https://stripe.com/docs/api/sources).\nWe recommend that you adopt the [PaymentMethods API](https://stripe.com/docs/api/payment_methods).\nThis newer API provides access to our latest features and payment method types.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
        "properties": {
          "ach_credit_transfer": {
            "$ref": "#/components/schemas/source_type_ach_credit_transfer"
          },
          "ach_debit": {
            "$ref": "#/components/schemas/source_type_ach_debit"
          },
          "acss_debit": {
            "$ref": "#/components/schemas/source_type_acss_debit"
          },
          "alipay": {
            "$ref": "#/components/schemas/source_type_alipay"
          },
          "amount": {
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
            "nullable": true,
            "type": "integer"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/source_type_au_becs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/source_type_bancontact"
          },
          "card": {
            "$ref": "#/components/schemas/source_type_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/source_type_card_present"
          },
          "client_secret": {
            "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
            "maxLength": 5000,
            "type": "string"
          },
          "code_verification": {
            "$ref": "#/components/schemas/source_code_verification_flow"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
            "maxLength": 5000,
            "type": "string"
          },
          "eps": {
            "$ref": "#/components/schemas/source_type_eps"
          },
          "flow": {
            "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
            "maxLength": 5000,
            "type": "string"
          },
          "giropay": {
            "$ref": "#/components/schemas/source_type_giropay"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ideal": {
            "$ref": "#/components/schemas/source_type_ideal"
          },
          "klarna": {
            "$ref": "#/components/schemas/source_type_klarna"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "multibanco": {
            "$ref": "#/components/schemas/source_type_multibanco"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "source"
            ],
            "type": "string"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/source_owner"
              }
            ],
            "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
            "nullable": true
          },
          "p24": {
            "$ref": "#/components/schemas/source_type_p24"
          },
          "receiver": {
            "$ref": "#/components/schemas/source_receiver_flow"
          },
          "redirect": {
            "$ref": "#/components/schemas/source_redirect_flow"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/source_type_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/source_type_sofort"
          },
          "source_order": {
            "$ref": "#/components/schemas/source_order"
          },
          "statement_descriptor": {
            "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "three_d_secure": {
            "$ref": "#/components/schemas/source_type_three_d_secure"
          },
          "type": {
            "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
            "enum": [
              "ach_credit_transfer",
              "ach_debit",
              "acss_debit",
              "alipay",
              "au_becs_debit",
              "bancontact",
              "card",
              "card_present",
              "eps",
              "giropay",
              "ideal",
              "klarna",
              "multibanco",
              "p24",
              "sepa_debit",
              "sofort",
              "three_d_secure",
              "wechat"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "usage": {
            "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "wechat": {
            "$ref": "#/components/schemas/source_type_wechat"
          }
        },
        "required": [
          "client_secret",
          "created",
          "flow",
          "id",
          "livemode",
          "object",
          "status",
          "type"
        ],
        "title": "Source",
        "type": "object",
        "x-expandableFields": [
          "code_verification",
          "owner",
          "receiver",
          "redirect",
          "source_order"
        ],
        "x-resourceId": "source"
      },
      "subscription": {
        "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating subscriptions](https://stripe.com/docs/billing/subscriptions/creating)",
        "properties": {
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the subscription.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "application_fee_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner's Stripe account.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/subscription_automatic_tax"
          },
          "billing_cycle_anchor": {
            "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
            "format": "unix-time",
            "type": "integer"
          },
          "billing_thresholds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_billing_thresholds"
              }
            ],
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
            "nullable": true
          },
          "cancel_at": {
            "description": "A date in the future at which the subscription will automatically get canceled",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "cancel_at_period_end": {
            "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
            "type": "boolean"
          },
          "canceled_at": {
            "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "cancellation_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/cancellation_details"
              }
            ],
            "description": "Details about why this subscription was cancelled",
            "nullable": true
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "current_period_end": {
            "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
            "format": "unix-time",
            "type": "integer"
          },
          "current_period_start": {
            "description": "Start of the current period that the subscription has been invoiced for.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the customer who owns the subscription.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "days_until_due": {
            "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
            "nullable": true,
            "type": "integer"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "default_source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/bank_account"
              },
              {
                "$ref": "#/components/schemas/card"
              },
              {
                "$ref": "#/components/schemas/source"
              }
            ],
            "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/bank_account"
                },
                {
                  "$ref": "#/components/schemas/card"
                },
                {
                  "$ref": "#/components/schemas/source"
                }
              ]
            },
            "x-stripeBypassValidation": true
          },
          "default_tax_rates": {
            "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces and certain local payment methods UIs.",
            "maxLength": 500,
            "nullable": true,
            "type": "string"
          },
          "discount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ],
            "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.",
            "nullable": true
          },
          "ended_at": {
            "description": "If the subscription has ended, the date the subscription ended.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "items": {
            "description": "List of subscription items, each with an attached price.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/subscription_item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "SubscriptionItemList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "latest_invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The most recent invoice this subscription has generated.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "next_pending_invoice_item_invoice": {
            "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "subscription"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) the charge was made on behalf of for charges associated with this subscription. See the Connect documentation for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "pause_collection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_resource_pause_collection"
              }
            ],
            "description": "If specified, payment collection for this subscription will be paused.",
            "nullable": true
          },
          "payment_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_resource_payment_settings"
              }
            ],
            "description": "Payment settings passed on to invoices created by the subscription.",
            "nullable": true
          },
          "pending_invoice_item_interval": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_pending_invoice_item_interval"
              }
            ],
            "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
            "nullable": true
          },
          "pending_setup_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_intent"
              }
            ],
            "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ]
            }
          },
          "pending_update": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_resource_pending_update"
              }
            ],
            "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
            "nullable": true
          },
          "schedule": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription_schedule"
              }
            ],
            "description": "The schedule attached to the subscription",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ]
            }
          },
          "start_date": {
            "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
            "format": "unix-time",
            "type": "integer"
          },
          "status": {
            "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically`, it becomes `past_due` when payment is required but cannot be paid (due to failed payment or awaiting additional user actions). Once Stripe has exhausted all payment retry attempts, the subscription will become `canceled` or `unpaid` (depending on your subscriptions settings). \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
            "enum": [
              "active",
              "canceled",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "paused",
              "trialing",
              "unpaid"
            ],
            "type": "string"
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this subscription belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_transfer_data"
              }
            ],
            "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
            "nullable": true
          },
          "trial_end": {
            "description": "If the subscription has a trial, the end of that trial.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "trial_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_trials_resource_trial_settings"
              }
            ],
            "description": "Settings related to subscription trials.",
            "nullable": true
          },
          "trial_start": {
            "description": "If the subscription has a trial, the beginning of that trial.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "automatic_tax",
          "billing_cycle_anchor",
          "cancel_at_period_end",
          "collection_method",
          "created",
          "currency",
          "current_period_end",
          "current_period_start",
          "customer",
          "id",
          "items",
          "livemode",
          "metadata",
          "object",
          "start_date",
          "status"
        ],
        "title": "Subscription",
        "type": "object",
        "x-expandableFields": [
          "application",
          "automatic_tax",
          "billing_thresholds",
          "cancellation_details",
          "customer",
          "default_payment_method",
          "default_source",
          "default_tax_rates",
          "discount",
          "items",
          "latest_invoice",
          "on_behalf_of",
          "pause_collection",
          "payment_settings",
          "pending_invoice_item_interval",
          "pending_setup_intent",
          "pending_update",
          "schedule",
          "test_clock",
          "transfer_data",
          "trial_settings"
        ],
        "x-resourceId": "subscription"
      },
      "subscription_details_data": {
        "description": "",
        "properties": {
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that will reflect the metadata of the subscription at the time of invoice creation. *Note: This attribute is populated only for invoices created on or after June 29, 2023.*",
            "nullable": true,
            "type": "object"
          }
        },
        "title": "SubscriptionDetailsData",
        "type": "object",
        "x-expandableFields": []
      },
      "tax_id": {
        "description": "You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers) or account.\nCustomer and account tax IDs get displayed on related invoices and credit notes.\n\nRelated guides: [Customer tax identification numbers](https://stripe.com/docs/billing/taxes/tax-ids), [Account tax IDs](https://stripe.com/docs/invoicing/connect#account-tax-ids)",
        "properties": {
          "country": {
            "description": "Two-letter ISO code representing the country of the tax ID.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "ID of the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_id"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`, `au_arn`, `bg_uic`, `bo_tin`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, `uy_ruc`, `ve_rif`, `vn_tin`, or `za_vat`. Note that some legacy tax IDs have type `unknown`",
            "enum": [
              "ad_nrt",
              "ae_trn",
              "ar_cuit",
              "au_abn",
              "au_arn",
              "bg_uic",
              "bo_tin",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_vat",
              "cl_tin",
              "cn_tin",
              "co_nit",
              "cr_tin",
              "do_rcn",
              "ec_ruc",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "no_vat",
              "nz_gst",
              "pe_ruc",
              "ph_tin",
              "ro_tin",
              "rs_pib",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "sv_nit",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "unknown",
              "us_ein",
              "uy_ruc",
              "ve_rif",
              "vn_tin",
              "za_vat"
            ],
            "type": "string"
          },
          "value": {
            "description": "Value of the tax ID.",
            "maxLength": 5000,
            "type": "string"
          },
          "verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/tax_id_verification"
              }
            ],
            "description": "Tax ID verification information.",
            "nullable": true
          }
        },
        "required": [
          "created",
          "id",
          "livemode",
          "object",
          "type",
          "value"
        ],
        "title": "tax_id",
        "type": "object",
        "x-expandableFields": [
          "customer",
          "verification"
        ],
        "x-resourceId": "tax_id"
      },
      "tax_deducted_at_source": {
        "description": "",
        "properties": {
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_deducted_at_source"
            ],
            "type": "string"
          },
          "period_end": {
            "description": "The end of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.",
            "format": "unix-time",
            "type": "integer"
          },
          "period_start": {
            "description": "The start of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.",
            "format": "unix-time",
            "type": "integer"
          },
          "tax_deduction_account_number": {
            "description": "The TAN that was supplied to Stripe when TDS was assessed",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "id",
          "object",
          "period_end",
          "period_start",
          "tax_deduction_account_number"
        ],
        "title": "TaxDeductedAtSource",
        "type": "object",
        "x-expandableFields": []
      },
      "tax_rate": {
        "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)",
        "properties": {
          "active": {
            "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
            "type": "boolean"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
            "maxLength": 5000,
            "type": "string"
          },
          "effective_percentage": {
            "description": "Actual/effective tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true,\nthis percentage reflects the rate actually used to calculate tax based on the product's taxability\nand whether the user is registered to collect taxes in the corresponding jurisdiction.",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "inclusive": {
            "description": "This specifies if the tax rate is inclusive or exclusive.",
            "type": "boolean"
          },
          "jurisdiction": {
            "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_rate"
            ],
            "type": "string"
          },
          "percentage": {
            "description": "Tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true, this percentage includes the statutory tax rate of non-taxable jurisdictions.",
            "type": "number"
          },
          "state": {
            "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tax_type": {
            "description": "The high-level tax type, such as `vat` or `sales_tax`.",
            "enum": [
              "amusement_tax",
              "communications_tax",
              "gst",
              "hst",
              "igst",
              "jct",
              "lease_tax",
              "pst",
              "qst",
              "rst",
              "sales_tax",
              "service_tax",
              "vat"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "active",
          "created",
          "display_name",
          "id",
          "inclusive",
          "livemode",
          "object",
          "percentage"
        ],
        "title": "TaxRate",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "tax_rate"
      },
      "topup": {
        "description": "To top up your Stripe balance, you create a top-up object. You can retrieve\nindividual top-ups, as well as list all top-ups. Top-ups are identified by a\nunique, random ID.\n\nRelated guide: [Topping up your platform account](https://stripe.com/docs/connect/top-ups)",
        "properties": {
          "amount": {
            "description": "Amount transferred.",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the impact of this top-up on your account balance. May not be specified depending on status of top-up.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "expected_availability_date": {
            "description": "Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up.",
            "nullable": true,
            "type": "integer"
          },
          "failure_code": {
            "description": "Error code explaining reason for top-up failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Message to user further explaining reason for top-up failure if available.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "topup"
            ],
            "type": "string"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/source"
              }
            ],
            "description": "For most Stripe users, the source of every top-up is a bank account. This hash is then the [source object](https://stripe.com/docs/api#source_object) describing that bank account.",
            "nullable": true
          },
          "statement_descriptor": {
            "description": "Extra information about a top-up. This will appear on your source's bank statement. It must contain at least one letter.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the top-up is either `canceled`, `failed`, `pending`, `reversed`, or `succeeded`.",
            "enum": [
              "canceled",
              "failed",
              "pending",
              "reversed",
              "succeeded"
            ],
            "type": "string"
          },
          "transfer_group": {
            "description": "A string that identifies this top-up as part of a group.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "id",
          "livemode",
          "metadata",
          "object",
          "status"
        ],
        "title": "Topup",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "source"
        ],
        "x-resourceId": "topup"
      },
      "test_helpers.test_clock": {
        "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "deletes_after": {
            "description": "Time at which this clock is scheduled to auto delete.",
            "format": "unix-time",
            "type": "integer"
          },
          "frozen_time": {
            "description": "Time at which all objects belonging to this clock are frozen.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "name": {
            "description": "The custom name supplied at creation.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "test_helpers.test_clock"
            ],
            "type": "string"
          },
          "status": {
            "description": "The status of the Test Clock.",
            "enum": [
              "advancing",
              "internal_failure",
              "ready"
            ],
            "type": "string"
          }
        },
        "required": [
          "created",
          "deletes_after",
          "frozen_time",
          "id",
          "livemode",
          "object",
          "status"
        ],
        "title": "TestClock",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "test_helpers.test_clock"
      },
      "three_d_secure_details_charge": {
        "description": "",
        "properties": {
          "authentication_flow": {
            "description": "For authenticated transactions: how the customer was authenticated by\nthe issuing bank.",
            "enum": [
              "challenge",
              "frictionless"
            ],
            "nullable": true,
            "type": "string"
          },
          "result": {
            "description": "Indicates the outcome of 3D Secure authentication.",
            "enum": [
              "attempt_acknowledged",
              "authenticated",
              "exempted",
              "failed",
              "not_supported",
              "processing_error"
            ],
            "nullable": true,
            "type": "string"
          },
          "result_reason": {
            "description": "Additional information about why 3D Secure succeeded or failed based\non the `result`.",
            "enum": [
              "abandoned",
              "bypassed",
              "canceled",
              "card_not_enrolled",
              "network_not_supported",
              "protocol_error",
              "rejected"
            ],
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "The version of 3D Secure that was used.",
            "enum": [
              "1.0.2",
              "2.1.0",
              "2.2.0"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "three_d_secure_details_charge",
        "type": "object",
        "x-expandableFields": []
      },
      "three_d_secure_usage": {
        "description": "",
        "properties": {
          "supported": {
            "description": "Whether 3D Secure is supported on this card.",
            "type": "boolean"
          }
        },
        "required": [
          "supported"
        ],
        "title": "three_d_secure_usage",
        "type": "object",
        "x-expandableFields": []
      },
      "transfer_schedule": {
        "description": "",
        "properties": {
          "delay_days": {
            "description": "The number of days charges for the account will be held before being paid out.",
            "type": "integer"
          },
          "interval": {
            "description": "How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.",
            "maxLength": 5000,
            "type": "string"
          },
          "monthly_anchor": {
            "description": "The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
            "type": "integer"
          },
          "weekly_anchor": {
            "description": "The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "delay_days",
          "interval"
        ],
        "title": "TransferSchedule",
        "type": "object",
        "x-expandableFields": []
      },
      "transfer": {
        "description": "A `Transfer` object is created when you move funds between Stripe accounts as\npart of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a\nStripe account to a card or bank account. This behavior has since been split\nout into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more\ninformation, read about the\n[transfer/payout split](https://stripe.com/docs/transfer-payout-split).\n\nRelated guide: [Creating separate charges and transfers](https://stripe.com/docs/connect/separate-charges-and-transfers)",
        "properties": {
          "amount": {
            "description": "Amount in cents (or local equivalent) to be transferred.",
            "type": "integer"
          },
          "amount_reversed": {
            "description": "Amount in cents (or local equivalent) reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact of this transfer on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time that this record of the transfer was first created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of the Stripe account the transfer was sent to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "destination_payment": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "transfer"
            ],
            "type": "string"
          },
          "reversals": {
            "description": "A list of reversals that have been applied to the transfer.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/transfer_reversal"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "TransferReversalList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "reversed": {
            "description": "Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.",
            "type": "boolean"
          },
          "source_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "source_type": {
            "description": "The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.",
            "maxLength": 5000,
            "type": "string"
          },
          "transfer_group": {
            "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options) for details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_reversed",
          "created",
          "currency",
          "id",
          "livemode",
          "metadata",
          "object",
          "reversals",
          "reversed"
        ],
        "title": "Transfer",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "destination",
          "destination_payment",
          "reversals",
          "source_transaction"
        ],
        "x-resourceId": "transfer"
      },
      "transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) that the payment is attributed to for tax\nreporting, and where funds from the payment are transferred to after\npayment success.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "destination"
        ],
        "title": "transfer_data",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ]
      },
      "transfer_reversal": {
        "description": "[Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a\nconnected account, either entirely or partially, and can also specify whether\nto refund any related application fees. Transfer reversals add to the\nplatform's balance and subtract from the destination account's balance.\n\nReversing a transfer that was made for a [destination\ncharge](/docs/connect/destination-charges) is allowed only up to the amount of\nthe charge. It is possible to reverse a\n[transfer_group](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)\ntransfer only if the destination account has enough balance to cover the\nreversal.\n\nRelated guide: [Reversing transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#reversing-transfers)",
        "properties": {
          "amount": {
            "description": "Amount, in cents (or local equivalent).",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "destination_payment_refund": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/refund"
              }
            ],
            "description": "Linked payment refund for the transfer reversal.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/refund"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "transfer_reversal"
            ],
            "type": "string"
          },
          "source_refund": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/refund"
              }
            ],
            "description": "ID of the refund responsible for the transfer reversal.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/refund"
                }
              ]
            }
          },
          "transfer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer"
              }
            ],
            "description": "ID of the transfer that was reversed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "id",
          "object",
          "transfer"
        ],
        "title": "TransferReversal",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "destination_payment_refund",
          "source_refund",
          "transfer"
        ],
        "x-resourceId": "transfer_reversal"
      },
      "us_bank_account_networks": {
        "description": "",
        "properties": {
          "preferred": {
            "description": "The preferred network.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "supported": {
            "description": "All supported networks.",
            "items": {
              "enum": [
                "ach",
                "us_domestic_wire"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "supported"
        ],
        "title": "us_bank_account_networks",
        "type": "object",
        "x-expandableFields": []
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "description": "Basic HTTP authentication. Allowed headers-- Authorization: Basic <api_key> | Authorization: Basic <base64 hash of `api_key:`>",
        "scheme": "basic",
        "type": "http"
      },
      "bearerAuth": {
        "bearerFormat": "auth-scheme",
        "description": "Bearer HTTP authentication. Allowed headers-- Authorization: Bearer <api_key>",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev-platform@stripe.com",
      "name": "Stripe Dev Platform Team",
      "url": "https://stripe.com"
    },
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "termsOfService": "https://stripe.com/us/terms/",
    "title": "Stripe API",
    "version": "2023-10-16",
    "x-stripeSpecFilename": "spec3"
  },
  "openapi": "3.0.0",
  "paths": {
    "/v1/tax_rates": {
      "get": {
        "description": "<p>Returns a list of your tax rates. Tax rates are returned sorted by creation date, with the most recently created tax rates appearing first.</p>",
        "operationId": "GetTaxRates",
        "parameters": [
          {
            "description": "Optional flag to filter by tax rates that are either active or inactive (archived).",
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "Optional range for filtering created date.",
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "gt": {
                      "type": "integer"
                    },
                    "gte": {
                      "type": "integer"
                    },
                    "lt": {
                      "type": "integer"
                    },
                    "lte": {
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "Optional flag to filter by tax rates that are inclusive (or those that are not inclusive).",
            "in": "query",
            "name": "inclusive",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/tax_rate"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/tax_rates",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "TaxRatesList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>Creates a new tax rate.</p>",
        "operationId": "PostTaxRates",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "active": {
                    "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
                    "type": "boolean"
                  },
                  "country": {
                    "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "description": {
                    "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "display_name": {
                    "description": "The display name of the tax rate, which will be shown to users.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "inclusive": {
                    "description": "This specifies if the tax rate is inclusive or exclusive.",
                    "type": "boolean"
                  },
                  "jurisdiction": {
                    "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
                    "type": "object"
                  },
                  "percentage": {
                    "description": "This represents the tax rate percent out of 100.",
                    "type": "number"
                  },
                  "state": {
                    "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
                    "maxLength": 2,
                    "type": "string"
                  },
                  "tax_type": {
                    "description": "The high-level tax type, such as `vat` or `sales_tax`.",
                    "enum": [
                      "amusement_tax",
                      "communications_tax",
                      "gst",
                      "hst",
                      "igst",
                      "jct",
                      "lease_tax",
                      "pst",
                      "qst",
                      "rst",
                      "sales_tax",
                      "service_tax",
                      "vat"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "display_name",
                  "inclusive",
                  "percentage"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax_rate"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/tax_rates/{tax_rate}": {
      "get": {
        "description": "<p>Retrieves a tax rate with the given ID</p>",
        "operationId": "GetTaxRatesTaxRate",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "in": "path",
            "name": "tax_rate",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax_rate"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>Updates an existing tax rate.</p>",
        "operationId": "PostTaxRatesTaxRate",
        "parameters": [
          {
            "in": "path",
            "name": "tax_rate",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "active": {
                    "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
                    "type": "boolean"
                  },
                  "country": {
                    "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "description": {
                    "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "display_name": {
                    "description": "The display name of the tax rate, which will be shown to users.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "jurisdiction": {
                    "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "state": {
                    "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
                    "maxLength": 2,
                    "type": "string"
                  },
                  "tax_type": {
                    "description": "The high-level tax type, such as `vat` or `sales_tax`.",
                    "enum": [
                      "amusement_tax",
                      "communications_tax",
                      "gst",
                      "hst",
                      "igst",
                      "jct",
                      "lease_tax",
                      "pst",
                      "qst",
                      "rst",
                      "sales_tax",
                      "service_tax",
                      "vat"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax_rate"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://api.stripe.com/"
    }
  ]
}